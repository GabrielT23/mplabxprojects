

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 05 20:42:53 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 09/02/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4550 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     _ADCON0	set	4034
    83   000000                     _PORTD	set	3971
    84   000000                     _PORTA	set	3968
    85   000000                     _PORTDbits	set	3971
    86   000000                     _TRISA	set	3986
    87   000000                     _TRISD	set	3989
    88   000000                     _ADCON0bits	set	4034
    89   000000                     _ADRES	set	4035
    90   000000                     _OSCCON	set	4051
    91   000000                     _ADCON2	set	4032
    92   000000                     _ADCON1	set	4033
    93                           
    94                           	psect	smallconst
    95   000800                     __psmallconst:
    96                           	callstack 0
    97   000800  00                 	db	0
    98   000801                     STR_1:
    99   000801  56                 	db	86	;'V'
   100   000802  6F                 	db	111	;'o'
   101   000803  6C                 	db	108	;'l'
   102   000804  74                 	db	116	;'t'
   103   000805  61                 	db	97	;'a'
   104   000806  67                 	db	103	;'g'
   105   000807  65                 	db	101	;'e'
   106   000808  6D                 	db	109	;'m'
   107   000809  31                 	db	49	;'1'
   108   00080A  3A                 	db	58	;':'
   109   00080B  3D                 	db	61	;'='
   110   00080C  25                 	db	37
   111   00080D  2E                 	db	46
   112   00080E  32                 	db	50	;'2'
   113   00080F  66                 	db	102	;'f'
   114   000810  20                 	db	32
   115   000811  56                 	db	86	;'V'
   116   000812  00                 	db	0
   117   000813                     STR_2:
   118   000813  56                 	db	86	;'V'
   119   000814  6F                 	db	111	;'o'
   120   000815  6C                 	db	108	;'l'
   121   000816  74                 	db	116	;'t'
   122   000817  61                 	db	97	;'a'
   123   000818  67                 	db	103	;'g'
   124   000819  65                 	db	101	;'e'
   125   00081A  6D                 	db	109	;'m'
   126   00081B  32                 	db	50	;'2'
   127   00081C  3A                 	db	58	;':'
   128   00081D  3D                 	db	61	;'='
   129   00081E  25                 	db	37
   130   00081F  2E                 	db	46
   131   000820  32                 	db	50	;'2'
   132   000821  66                 	db	102	;'f'
   133   000822  20                 	db	32
   134   000823  56                 	db	86	;'V'
   135   000824  00                 	db	0
   136   000825                     STR_3:
   137   000825  69                 	db	105	;'i'
   138   000826  6E                 	db	110	;'n'
   139   000827  66                 	db	102	;'f'
   140   000828  00                 	db	0
   141   000829                     STR_6:
   142   000829  6E                 	db	110	;'n'
   143   00082A  61                 	db	97	;'a'
   144   00082B  6E                 	db	110	;'n'
   145   00082C  00                 	db	0
   146   00082D  00                 	db	0	; dummy byte at the end
   147   000000                     
   148                           ; #config settings
   149                           
   150                           	psect	cinit
   151   003010                     __pcinit:
   152                           	callstack 0
   153   003010                     start_initialization:
   154                           	callstack 0
   155   003010                     __initialization:
   156                           	callstack 0
   157                           
   158                           ; Clear objects allocated to BANK0 (93 bytes)
   159   003010  EE00  F060         	lfsr	0,__pbssBANK0
   160   003014  0E5D               	movlw	93
   161   003016                     clear_0:
   162   003016  6AEE               	clrf	postinc0,c
   163   003018  06E8               	decf	wreg,f,c
   164   00301A  E1FD               	bnz	clear_0
   165   00301C                     end_of_initialization:
   166                           	callstack 0
   167   00301C                     __end_of__initialization:
   168                           	callstack 0
   169   00301C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170   00301E  6EF8               	movwf	tblptru,c
   171   003020  0100               	movlb	0
   172   003022  EF1F  F015         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssBANK0
   175   000060                     __pbssBANK0:
   176                           	callstack 0
   177   000060                     floorf@F526:
   178                           	callstack 0
   179   000060                     	ds	4
   180   000064                     ___fpclassifyf@F465:
   181                           	callstack 0
   182   000064                     	ds	4
   183   000068                     _width:
   184                           	callstack 0
   185   000068                     	ds	2
   186   00006A                     _prec:
   187                           	callstack 0
   188   00006A                     	ds	2
   189   00006C                     _flags:
   190                           	callstack 0
   191   00006C                     	ds	1
   192   00006D                     _dbuf:
   193                           	callstack 0
   194   00006D                     	ds	80
   195                           
   196                           	psect	cstackBANK0
   197   0000BD                     __pcstackBANK0:
   198                           	callstack 0
   199   0000BD                     efgtoa@ne:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x0
   203   0000BD                     	ds	2
   204   0000BF                     efgtoa@p:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x2
   208   0000BF                     	ds	2
   209   0000C1                     efgtoa@t:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x4
   213   0000C1                     	ds	2
   214   0000C3                     _efgtoa$774:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x6
   218   0000C3                     	ds	2
   219   0000C5                     efgtoa@pp:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x8
   223   0000C5                     	ds	1
   224   0000C6                     efgtoa@mode:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x9
   228   0000C6                     	ds	1
   229   0000C7                     efgtoa@nmode:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0xA
   233   0000C7                     	ds	1
   234   0000C8                     efgtoa@d:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0xB
   238   0000C8                     	ds	2
   239   0000CA                     efgtoa@m:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0xD
   243   0000CA                     	ds	2
   244   0000CC                     efgtoa@e:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0xF
   248   0000CC                     	ds	2
   249   0000CE                     efgtoa@w:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x11
   253   0000CE                     	ds	2
   254   0000D0                     efgtoa@ou:
   255                           	callstack 0
   256                           
   257                           ; 4 bytes @ 0x13
   258   0000D0                     	ds	4
   259   0000D4                     efgtoa@i:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x17
   263   0000D4                     	ds	2
   264   0000D6                     efgtoa@h:
   265                           	callstack 0
   266                           
   267                           ; 4 bytes @ 0x19
   268   0000D6                     	ds	4
   269   0000DA                     efgtoa@l:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x1D
   273   0000DA                     	ds	4
   274   0000DE                     efgtoa@sign:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x21
   278   0000DE                     	ds	1
   279   0000DF                     efgtoa@n:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x22
   283   0000DF                     	ds	2
   284   0000E1                     efgtoa@g:
   285                           	callstack 0
   286                           
   287                           ; 4 bytes @ 0x24
   288   0000E1                     	ds	4
   289   0000E5                     efgtoa@u:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x28
   293   0000E5                     	ds	4
   294   0000E9                     ?_vfprintf:
   295                           	callstack 0
   296   0000E9                     vfprintf@fp:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x2C
   300   0000E9                     	ds	2
   301   0000EB                     vfprintf@fmt:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x2E
   305   0000EB                     	ds	2
   306   0000ED                     vfprintf@ap:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x30
   310   0000ED                     	ds	2
   311   0000EF                     vfprintf@cfmt:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x32
   315   0000EF                     	ds	2
   316   0000F1                     ?_printf:
   317                           	callstack 0
   318   0000F1                     printf@fmt:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x34
   322   0000F1                     	ds	6
   323   0000F7                     printf@ap:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x3A
   327   0000F7                     	ds	2
   328                           
   329                           	psect	cstackCOMRAM
   330   000001                     __pcstackCOMRAM:
   331                           	callstack 0
   332   000001                     ??_envia_nibble_lcd:
   333   000001                     ?___fpclassifyf:
   334                           	callstack 0
   335   000001                     ?_Valor_AD:
   336                           	callstack 0
   337   000001                     ?___wmul:
   338                           	callstack 0
   339   000001                     ?___fladd:
   340                           	callstack 0
   341   000001                     ?___flmul:
   342                           	callstack 0
   343   000001                     ?_labs:
   344                           	callstack 0
   345   000001                     ?___flneg:
   346                           	callstack 0
   347   000001                     ?___fltol:
   348                           	callstack 0
   349   000001                     ___wmul@multiplier:
   350                           	callstack 0
   351   000001                     memcpy@d1:
   352                           	callstack 0
   353   000001                     strcpy@dest:
   354                           	callstack 0
   355   000001                     ___fleq@ff1:
   356                           	callstack 0
   357   000001                     ___flneg@f1:
   358                           	callstack 0
   359   000001                     ___fltol@f1:
   360                           	callstack 0
   361   000001                     ___fladd@b:
   362                           	callstack 0
   363   000001                     ___flmul@b:
   364                           	callstack 0
   365   000001                     ___fpclassifyf@x:
   366                           	callstack 0
   367   000001                     labs@a:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x0
   371   000001                     	ds	1
   372   000002                     envia_nibble_lcd@dado:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x1
   376   000002                     	ds	1
   377   000003                     envia_byte_lcd@dado:
   378                           	callstack 0
   379   000003                     Valor_AD@C:
   380                           	callstack 0
   381   000003                     ___wmul@multiplicand:
   382                           	callstack 0
   383   000003                     memcpy@s1:
   384                           	callstack 0
   385   000003                     strcpy@src:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x2
   389   000003                     	ds	1
   390   000004                     envia_byte_lcd@endereco:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x3
   394   000004                     	ds	1
   395   000005                     ??___fpclassifyf:
   396   000005                     ??_labs:
   397   000005                     ??_limpa_lcd:
   398   000005                     ??___fltol:
   399   000005                     escreve_lcd@c:
   400                           	callstack 0
   401   000005                     caracter_inicio@coluna:
   402                           	callstack 0
   403   000005                     Valor_AD@porta:
   404                           	callstack 0
   405   000005                     ___wmul@product:
   406                           	callstack 0
   407   000005                     memcpy@n:
   408                           	callstack 0
   409   000005                     strcpy@s:
   410                           	callstack 0
   411   000005                     ___fleq@ff2:
   412                           	callstack 0
   413   000005                     ___fladd@a:
   414                           	callstack 0
   415   000005                     ___flmul@a:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x4
   419   000005                     	ds	1
   420   000006                     ??_inicializa_lcd:
   421   000006                     ?___xxtofl:
   422                           	callstack 0
   423   000006                     caracter_inicio@linha:
   424                           	callstack 0
   425   000006                     putch@data:
   426                           	callstack 0
   427   000006                     ___xxtofl@val:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x5
   431   000006                     	ds	1
   432   000007                     ?_read_prec_or_width:
   433                           	callstack 0
   434   000007                     caracter_inicio@posicao:
   435                           	callstack 0
   436   000007                     read_prec_or_width@fmt:
   437                           	callstack 0
   438   000007                     memcpy@d:
   439                           	callstack 0
   440   000007                     fputc@c:
   441                           	callstack 0
   442   000007                     strcpy@d:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x6
   446   000007                     	ds	2
   447   000009                     ??___fladd:
   448   000009                     ??___flmul:
   449   000009                     ??___fleq:
   450   000009                     ___fltol@sign1:
   451                           	callstack 0
   452   000009                     read_prec_or_width@ap:
   453                           	callstack 0
   454   000009                     ___fpclassifyf@e:
   455                           	callstack 0
   456   000009                     memcpy@s:
   457                           	callstack 0
   458   000009                     fputc@fp:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x8
   462   000009                     	ds	1
   463   00000A                     ??___xxtofl:
   464   00000A                     ___fltol@exp1:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x9
   468   00000A                     	ds	1
   469   00000B                     ??_fputc:
   470   00000B                     ??_read_prec_or_width:
   471   00000B                     memcpy@tmp:
   472                           	callstack 0
   473   00000B                     ___fpclassifyf@u:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0xA
   477   00000B                     	ds	2
   478   00000D                     ___fladd@signs:
   479                           	callstack 0
   480   00000D                     ___flmul@sign:
   481                           	callstack 0
   482   00000D                     read_prec_or_width@c:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0xC
   486   00000D                     	ds	1
   487   00000E                     ___fladd@aexp:
   488                           	callstack 0
   489   00000E                     ___xxtofl@sign:
   490                           	callstack 0
   491   00000E                     read_prec_or_width@n:
   492                           	callstack 0
   493   00000E                     ___flmul@grs:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0xD
   497   00000E                     	ds	1
   498   00000F                     ___fladd@bexp:
   499                           	callstack 0
   500   00000F                     ___xxtofl@exp:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0xE
   504   00000F                     	ds	1
   505   000010                     ___fladd@grs:
   506                           	callstack 0
   507   000010                     fputs@s:
   508                           	callstack 0
   509   000010                     ___xxtofl@arg:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0xF
   513   000010                     	ds	2
   514   000012                     ___flmul@aexp:
   515                           	callstack 0
   516   000012                     fputs@fp:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x11
   520   000012                     	ds	1
   521   000013                     ___flmul@bexp:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x12
   525   000013                     	ds	1
   526   000014                     fputs@c:
   527                           	callstack 0
   528   000014                     ___flmul@prod:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x13
   532   000014                     	ds	1
   533   000015                     fputs@i:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x14
   537   000015                     	ds	2
   538   000017                     pad@fp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x16
   542   000017                     	ds	1
   543   000018                     ___flmul@temp:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x17
   547   000018                     	ds	1
   548   000019                     pad@buf:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x18
   552   000019                     	ds	1
   553   00001A                     ?___fldiv:
   554                           	callstack 0
   555   00001A                     ?___flsub:
   556                           	callstack 0
   557   00001A                     ___flge@ff1:
   558                           	callstack 0
   559   00001A                     ___flsub@b:
   560                           	callstack 0
   561   00001A                     ___fldiv@b:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x19
   565   00001A                     	ds	1
   566   00001B                     pad@p:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x1A
   570   00001B                     	ds	2
   571   00001D                     ??_pad:
   572                           
   573                           ; 1 bytes @ 0x1C
   574   00001D                     	ds	1
   575   00001E                     pad@i:
   576                           	callstack 0
   577   00001E                     ___flge@ff2:
   578                           	callstack 0
   579   00001E                     ___flsub@a:
   580                           	callstack 0
   581   00001E                     ___fldiv@a:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x1D
   585   00001E                     	ds	2
   586   000020                     pad@w:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x1F
   590   000020                     	ds	2
   591   000022                     ??___fldiv:
   592   000022                     ??___flge:
   593                           
   594                           ; 1 bytes @ 0x21
   595   000022                     	ds	4
   596   000026                     ___fldiv@rem:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x25
   600   000026                     	ds	4
   601   00002A                     ___fldiv@sign:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x29
   605   00002A                     	ds	1
   606   00002B                     ___fldiv@new_exp:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x2A
   610   00002B                     	ds	2
   611   00002D                     ___fldiv@grs:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x2C
   615   00002D                     	ds	4
   616   000031                     ___fldiv@bexp:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x30
   620   000031                     	ds	1
   621   000032                     ___fldiv@aexp:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x31
   625   000032                     	ds	1
   626   000033                     ?_floorf:
   627                           	callstack 0
   628   000033                     ?_Tensao:
   629                           	callstack 0
   630   000033                     floorf@x:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0x32
   634   000033                     	ds	4
   635   000037                     ??_floorf:
   636   000037                     Tensao@porta:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x36
   640   000037                     	ds	1
   641   000038                     Tensao@V:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x37
   645   000038                     	ds	5
   646   00003D                     floorf@m:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0x3C
   650   00003D                     	ds	4
   651   000041                     floorf@e:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x40
   655   000041                     	ds	2
   656   000043                     floorf@u:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x42
   660   000043                     	ds	4
   661   000047                     efgtoa@fp:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x46
   665   000047                     	ds	2
   666   000049                     efgtoa@f:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x48
   670   000049                     	ds	4
   671   00004D                     efgtoa@c:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x4C
   675   00004D                     	ds	1
   676   00004E                     ??_efgtoa:
   677                           
   678                           ; 1 bytes @ 0x4D
   679   00004E                     	ds	2
   680   000050                     vfpfcnvrt@fp:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x4F
   684   000050                     	ds	2
   685   000052                     vfpfcnvrt@fmt:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x51
   689   000052                     	ds	2
   690   000054                     vfpfcnvrt@ap:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x53
   694   000054                     	ds	2
   695   000056                     ??_vfpfcnvrt:
   696                           
   697                           ; 1 bytes @ 0x55
   698   000056                     	ds	2
   699   000058                     vfpfcnvrt@convarg:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x57
   703   000058                     	ds	4
   704   00005C                     vfpfcnvrt@c:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x5B
   708   00005C                     	ds	1
   709   00005D                     vfpfcnvrt@cp:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x5C
   713   00005D                     	ds	2
   714   00005F                     ??_main:
   715                           
   716                           ; 1 bytes @ 0x5E
   717   00005F                     	ds	1
   718                           
   719 ;;
   720 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   721 ;;
   722 ;; *************** function _main *****************
   723 ;; Defined at:
   724 ;;		line 87 in file "Voltimetro.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   738 ;;      Params:         0       0       0       0       0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0       0       0
   740 ;;      Temps:          1       0       0       0       0       0       0       0       0
   741 ;;      Totals:         1       0       0       0       0       0       0       0       0
   742 ;;Total ram usage:        1 bytes
   743 ;; Hardware stack levels required when called: 11
   744 ;; This function calls:
   745 ;;		_Tensao
   746 ;;		_caracter_inicio
   747 ;;		_inicializa_lcd
   748 ;;		_printf
   749 ;; This function is called by:
   750 ;;		Startup code after reset
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text0
   755   002A3E                     __ptext0:
   756                           	callstack 0
   757   002A3E                     _main:
   758                           	callstack 20
   759   002A3E  0E60               	movlw	96
   760   002A40  6ED3               	movwf	211,c	;volatile
   761   002A42  0E00               	movlw	0
   762   002A44  6E83               	movwf	131,c	;volatile
   763   002A46  0E00               	movlw	0
   764   002A48  6E95               	movwf	149,c	;volatile
   765   002A4A  EC32  F016         	call	_inicializa_lcd	;wreg free
   766   002A4E  0E00               	movlw	0
   767   002A50  6E80               	movwf	128,c	;volatile
   768   002A52  0E03               	movlw	3
   769   002A54  6E92               	movwf	146,c	;volatile
   770   002A56  0E01               	movlw	1
   771   002A58  6EC2               	movwf	194,c	;volatile
   772   002A5A  0E0E               	movlw	14
   773   002A5C  6EC1               	movwf	193,c	;volatile
   774   002A5E  0E89               	movlw	137
   775   002A60  6EC0               	movwf	192,c	;volatile
   776   002A62                     l74:
   777   002A62  0E01               	movlw	1
   778   002A64  6E05               	movwf	caracter_inicio@coluna^0,c
   779   002A66  0E01               	movlw	1
   780   002A68  EC5F  F017         	call	_caracter_inicio
   781   002A6C  0E01               	movlw	low STR_1
   782   002A6E  0100               	movlb	0	; () banked
   783   002A70  6FF1               	movwf	printf@fmt& (0+255),b
   784   002A72  0E08               	movlw	high STR_1
   785   002A74  6FF2               	movwf	(printf@fmt+1)& (0+255),b
   786   002A76  0E01               	movlw	1
   787   002A78  EC6B  F015         	call	_Tensao
   788   002A7C  C033  F0F3         	movff	?_Tensao,?_printf+2
   789   002A80  C034  F0F4         	movff	?_Tensao+1,?_printf+3
   790   002A84  C035  F0F5         	movff	?_Tensao+2,?_printf+4
   791   002A88  C036  F0F6         	movff	?_Tensao+3,?_printf+5
   792   002A8C  ECD4  F017         	call	_printf	;wreg free
   793   002A90  0E01               	movlw	1
   794   002A92  6E05               	movwf	caracter_inicio@coluna^0,c
   795   002A94  0E02               	movlw	2
   796   002A96  EC5F  F017         	call	_caracter_inicio
   797   002A9A  0E13               	movlw	low STR_2
   798   002A9C  0100               	movlb	0	; () banked
   799   002A9E  6FF1               	movwf	printf@fmt& (0+255),b
   800   002AA0  0E08               	movlw	high STR_2
   801   002AA2  6FF2               	movwf	(printf@fmt+1)& (0+255),b
   802   002AA4  0E00               	movlw	0
   803   002AA6  EC6B  F015         	call	_Tensao
   804   002AAA  C033  F0F3         	movff	?_Tensao,?_printf+2
   805   002AAE  C034  F0F4         	movff	?_Tensao+1,?_printf+3
   806   002AB2  C035  F0F5         	movff	?_Tensao+2,?_printf+4
   807   002AB6  C036  F0F6         	movff	?_Tensao+3,?_printf+5
   808   002ABA  ECD4  F017         	call	_printf	;wreg free
   809   002ABE  0E41               	movlw	65
   810   002AC0  6E5F               	movwf	??_main^0,c
   811   002AC2  0EEE               	movlw	238
   812   002AC4                     u3577:
   813   002AC4  2EE8               	decfsz	wreg,f,c
   814   002AC6  D7FE               	bra	u3577
   815   002AC8  2E5F               	decfsz	??_main^0,f,c
   816   002ACA  D7FC               	bra	u3577
   817   002ACC  D000               	nop2	
   818   002ACE  EF31  F015         	goto	l74
   819   002AD2  EF00  F000         	goto	start
   820   002AD6                     __end_of_main:
   821                           	callstack 0
   822                           
   823 ;; *************** function _printf *****************
   824 ;; Defined at:
   825 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
   828 ;;		 -> STR_2(18), STR_1(18), 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  ap              2   58[BANK0 ] PTR void [1]
   831 ;;		 -> ?_printf(2), 
   832 ;;  ret             2    0        int 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  2   52[BANK0 ] int 
   835 ;; Registers used:
   836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   842 ;;      Params:         0       6       0       0       0       0       0       0       0
   843 ;;      Locals:         0       2       0       0       0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0       0       0       0       0
   845 ;;      Totals:         0       8       0       0       0       0       0       0       0
   846 ;;Total ram usage:        8 bytes
   847 ;; Hardware stack levels used: 1
   848 ;; Hardware stack levels required when called: 10
   849 ;; This function calls:
   850 ;;		_vfprintf
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text1
   857   002FA8                     __ptext1:
   858                           	callstack 0
   859   002FA8                     _printf:
   860                           	callstack 20
   861   002FA8  0EF3               	movlw	low (?_printf+2)
   862   002FAA  0100               	movlb	0	; () banked
   863   002FAC  6FF7               	movwf	printf@ap& (0+255),b
   864   002FAE  0E00               	movlw	high (?_printf+2)
   865   002FB0  6FF8               	movwf	(printf@ap+1)& (0+255),b
   866   002FB2                     
   867                           ; BSR set to: 0
   868   002FB2  0E00               	movlw	0
   869   002FB4  6FE9               	movwf	vfprintf@fp& (0+255),b
   870   002FB6  0E00               	movlw	0
   871   002FB8  6FEA               	movwf	(vfprintf@fp+1)& (0+255),b
   872   002FBA  C0F1  F0EB         	movff	printf@fmt,vfprintf@fmt
   873   002FBE  C0F2  F0EC         	movff	printf@fmt+1,vfprintf@fmt+1
   874   002FC2  0EF7               	movlw	low printf@ap
   875   002FC4  6FED               	movwf	vfprintf@ap& (0+255),b
   876   002FC6  0E00               	movlw	high printf@ap
   877   002FC8  6FEE               	movwf	(vfprintf@ap+1)& (0+255),b
   878   002FCA  ECCA  F016         	call	_vfprintf	;wreg free
   879   002FCE  0012               	return		;funcret
   880   002FD0                     __end_of_printf:
   881                           	callstack 0
   882                           
   883 ;; *************** function _vfprintf *****************
   884 ;; Defined at:
   885 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
   888 ;;		 -> NULL(0), 
   889 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
   890 ;;		 -> STR_2(18), STR_1(18), 
   891 ;;  ap              2   48[BANK0 ] PTR PTR void 
   892 ;;		 -> printf@ap(2), 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  cfmt            2   50[BANK0 ] PTR unsigned char 
   895 ;;		 -> STR_2(18), STR_1(18), 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2   44[BANK0 ] int 
   898 ;; Registers used:
   899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   905 ;;      Params:         0       6       0       0       0       0       0       0       0
   906 ;;      Locals:         0       2       0       0       0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0
   908 ;;      Totals:         0       8       0       0       0       0       0       0       0
   909 ;;Total ram usage:        8 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 9
   912 ;; This function calls:
   913 ;;		_vfpfcnvrt
   914 ;; This function is called by:
   915 ;;		_printf
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text2
   920   002D94                     __ptext2:
   921                           	callstack 0
   922   002D94                     _vfprintf:
   923                           	callstack 20
   924   002D94                     
   925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
   926   002D94  C0EB  F0EF         	movff	vfprintf@fmt,vfprintf@cfmt
   927   002D98  C0EC  F0F0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   928                           
   929                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
   930   002D9C  EFDE  F016         	goto	l3218
   931   002DA0                     l3216:
   932                           
   933                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   934   002DA0  C0E9  F050         	movff	vfprintf@fp,vfpfcnvrt@fp
   935   002DA4  C0EA  F051         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   936   002DA8  0EEF               	movlw	low vfprintf@cfmt
   937   002DAA  6E52               	movwf	vfpfcnvrt@fmt^0,c
   938   002DAC  0E00               	movlw	high vfprintf@cfmt
   939   002DAE  6E53               	movwf	(vfpfcnvrt@fmt+1)^0,c
   940   002DB0  C0ED  F054         	movff	vfprintf@ap,vfpfcnvrt@ap
   941   002DB4  C0EE  F055         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   942   002DB8  EC68  F00F         	call	_vfpfcnvrt	;wreg free
   943   002DBC                     l3218:
   944                           
   945                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
   946   002DBC  C0EF  FFF6         	movff	vfprintf@cfmt,tblptrl
   947   002DC0  C0F0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   948   002DC4                     	if	0	;tblptru may be non-zero
   949   002DC4                     	endif
   950   002DC4                     	if	0	;tblptru may be non-zero
   951   002DC4                     	endif
   952   002DC4  0008               	tblrd		*
   953   002DC6  50F5               	movf	tablat,w,c
   954   002DC8  0900               	iorlw	0
   955   002DCA  A4D8               	btfss	status,2,c
   956   002DCC  EFEA  F016         	goto	u3541
   957   002DD0  EFEC  F016         	goto	u3540
   958   002DD4                     u3541:
   959   002DD4  EFD0  F016         	goto	l3216
   960   002DD8                     u3540:
   961   002DD8                     
   962                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
   963   002DD8  0E00               	movlw	0
   964   002DDA  0100               	movlb	0	; () banked
   965   002DDC  6FEA               	movwf	(?_vfprintf+1)& (0+255),b
   966   002DDE  0E00               	movlw	0
   967   002DE0  6FE9               	movwf	?_vfprintf& (0+255),b
   968   002DE2                     
   969                           ; BSR set to: 0
   970   002DE2  0012               	return		;funcret
   971   002DE4                     __end_of_vfprintf:
   972                           	callstack 0
   973                           
   974 ;; *************** function _vfpfcnvrt *****************
   975 ;; Defined at:
   976 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   979 ;;		 -> NULL(0), 
   980 ;;  fmt             2   81[COMRAM] PTR PTR unsigned char 
   981 ;;		 -> vfprintf@cfmt(2), 
   982 ;;  ap              2   83[COMRAM] PTR PTR void 
   983 ;;		 -> printf@ap(2), 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  convarg         4   87[COMRAM] struct .
   986 ;;  cp              2   92[COMRAM] PTR unsigned char 
   987 ;;		 -> STR_2(18), STR_1(18), 
   988 ;;  i               2    0        int 
   989 ;;  done            2    0        int 
   990 ;;  c               1   91[COMRAM] unsigned char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1000 ;;      Params:         6       0       0       0       0       0       0       0       0
  1001 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1002 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1003 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1004 ;;Total ram usage:       15 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; Hardware stack levels required when called: 8
  1007 ;; This function calls:
  1008 ;;		_efgtoa
  1009 ;;		_fputc
  1010 ;;		_read_prec_or_width
  1011 ;; This function is called by:
  1012 ;;		_vfprintf
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text3
  1017   001ED0                     __ptext3:
  1018                           	callstack 0
  1019   001ED0                     _vfpfcnvrt:
  1020                           	callstack 20
  1021   001ED0                     
  1022                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1023   001ED0  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1024   001ED4  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1025   001ED8  CFDE FFF6          	movff	postinc2,tblptrl
  1026   001EDC  CFDD FFF7          	movff	postdec2,tblptrh
  1027   001EE0                     	if	0	;tblptru may be non-zero
  1028   001EE0                     	endif
  1029   001EE0                     	if	0	;tblptru may be non-zero
  1030   001EE0                     	endif
  1031   001EE0  0008               	tblrd		*
  1032   001EE2  50F5               	movf	tablat,w,c
  1033   001EE4  0A25               	xorlw	37
  1034   001EE6  A4D8               	btfss	status,2,c
  1035   001EE8  EF78  F00F         	goto	u3381
  1036   001EEC  EF7A  F00F         	goto	u3380
  1037   001EF0                     u3381:
  1038   001EF0  EF86  F010         	goto	l3136
  1039   001EF4                     u3380:
  1040   001EF4                     
  1041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1042   001EF4  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1043   001EF8  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1044   001EFC  2ADE               	incf	postinc2,f,c
  1045   001EFE  0E00               	movlw	0
  1046   001F00  22DD               	addwfc	postdec2,f,c
  1047   001F02                     
  1048                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1049   001F02  0E00               	movlw	0
  1050   001F04  0100               	movlb	0	; () banked
  1051   001F06  6F69               	movwf	(_width+1)& (0+255),b
  1052   001F08  0E00               	movlw	0
  1053   001F0A  6F68               	movwf	_width& (0+255),b
  1054   001F0C  C068  F06C         	movff	_width,_flags
  1055   001F10                     
  1056                           ; BSR set to: 0
  1057                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1058   001F10  696A               	setf	_prec& (0+255),b
  1059   001F12  696B               	setf	(_prec+1)& (0+255),b
  1060   001F14                     
  1061                           ; BSR set to: 0
  1062                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  1063   001F14  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1064   001F18  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1065   001F1C  CFDE FFF6          	movff	postinc2,tblptrl
  1066   001F20  CFDD FFF7          	movff	postdec2,tblptrh
  1067   001F24                     	if	0	;tblptru may be non-zero
  1068   001F24                     	endif
  1069   001F24                     	if	0	;tblptru may be non-zero
  1070   001F24                     	endif
  1071   001F24  0008               	tblrd		*
  1072   001F26  50F5               	movf	tablat,w,c
  1073   001F28  0A2E               	xorlw	46
  1074   001F2A  A4D8               	btfss	status,2,c
  1075   001F2C  EF9A  F00F         	goto	u3391
  1076   001F30  EF9C  F00F         	goto	u3390
  1077   001F34                     u3391:
  1078   001F34  EFB1  F00F         	goto	l3098
  1079   001F38                     u3390:
  1080   001F38                     
  1081                           ; BSR set to: 0
  1082                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  1083   001F38  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1084   001F3C  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1085   001F40  2ADE               	incf	postinc2,f,c
  1086   001F42  0E00               	movlw	0
  1087   001F44  22DD               	addwfc	postdec2,f,c
  1088   001F46                     
  1089                           ; BSR set to: 0
  1090                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1091   001F46  C052  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1092   001F4A  C053  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1093   001F4E  C054  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1094   001F52  C055  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1095   001F56  EC67  F014         	call	_read_prec_or_width	;wreg free
  1096   001F5A  C007  F06A         	movff	?_read_prec_or_width,_prec
  1097   001F5E  C008  F06B         	movff	?_read_prec_or_width+1,_prec+1
  1098   001F62                     l3098:
  1099                           
  1100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  1101   001F62  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1102   001F66  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1103   001F6A  CFDE F05D          	movff	postinc2,vfpfcnvrt@cp
  1104   001F6E  CFDD F05E          	movff	postdec2,vfpfcnvrt@cp+1
  1105   001F72                     
  1106                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  1107   001F72  C05D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1108   001F76  C05E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1109   001F7A                     	if	0	;tblptru may be non-zero
  1110   001F7A                     	endif
  1111   001F7A                     	if	0	;tblptru may be non-zero
  1112   001F7A                     	endif
  1113   001F7A  0008               	tblrd		*
  1114   001F7C  CFF5 F05C          	movff	tablat,vfpfcnvrt@c
  1115                           
  1116                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  1117   001F80  EFCE  F00F         	goto	l3110
  1118   001F84                     l3102:
  1119                           
  1120                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  1121   001F84  4A5D               	infsnz	vfpfcnvrt@cp^0,f,c
  1122   001F86  2A5E               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  1125   001F88  EFE7  F00F         	goto	l3112
  1126   001F8C                     l3104:
  1127                           
  1128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  1129   001F8C  0E6C               	movlw	108
  1130   001F8E  6E5C               	movwf	vfpfcnvrt@c^0,c
  1131                           
  1132                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  1133   001F90  EFE7  F00F         	goto	l3112
  1134   001F94                     l3106:
  1135                           
  1136                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  1137   001F94  0E00               	movlw	0
  1138   001F96  6E5C               	movwf	vfpfcnvrt@c^0,c
  1139                           
  1140                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  1141   001F98  EFE7  F00F         	goto	l3112
  1142   001F9C                     l3110:
  1143   001F9C  505C               	movf	vfpfcnvrt@c^0,w,c
  1144   001F9E  6E56               	movwf	??_vfpfcnvrt^0,c
  1145   001FA0  6A57               	clrf	(??_vfpfcnvrt+1)^0,c
  1146                           
  1147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1148                           ; Switch size 1, requested type "simple"
  1149                           ; Number of cases is 1, Range of values is 0 to 0
  1150                           ; switch strategies available:
  1151                           ; Name         Instructions Cycles
  1152                           ; simple_byte            4     3 (average)
  1153                           ;	Chosen strategy is simple_byte
  1154   001FA2  5057               	movf	(??_vfpfcnvrt+1)^0,w,c
  1155   001FA4  0A00               	xorlw	0	; case 0
  1156   001FA6  B4D8               	btfsc	status,2,c
  1157   001FA8  EFD8  F00F         	goto	l3352
  1158   001FAC  EFCA  F00F         	goto	l3106
  1159   001FB0                     l3352:
  1160                           
  1161                           ; Switch size 1, requested type "simple"
  1162                           ; Number of cases is 3, Range of values is 76 to 108
  1163                           ; switch strategies available:
  1164                           ; Name         Instructions Cycles
  1165                           ; simple_byte           10     6 (average)
  1166                           ;	Chosen strategy is simple_byte
  1167   001FB0  5056               	movf	??_vfpfcnvrt^0,w,c
  1168   001FB2  0A4C               	xorlw	76	; case 76
  1169   001FB4  B4D8               	btfsc	status,2,c
  1170   001FB6  EFC2  F00F         	goto	l3102
  1171   001FBA  0A2A               	xorlw	42	; case 102
  1172   001FBC  B4D8               	btfsc	status,2,c
  1173   001FBE  EFC6  F00F         	goto	l3104
  1174   001FC2  0A0A               	xorlw	10	; case 108
  1175   001FC4  B4D8               	btfsc	status,2,c
  1176   001FC6  EFC2  F00F         	goto	l3102
  1177   001FCA  EFCA  F00F         	goto	l3106
  1178   001FCE                     l3112:
  1179   001FCE  C05D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1180   001FD2  C05E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1181   001FD6                     	if	0	;tblptru may be non-zero
  1182   001FD6                     	endif
  1183   001FD6                     	if	0	;tblptru may be non-zero
  1184   001FD6                     	endif
  1185   001FD6  0008               	tblrd		*
  1186   001FD8  50F5               	movf	tablat,w,c
  1187   001FDA  0A66               	xorlw	102
  1188   001FDC  A4D8               	btfss	status,2,c
  1189   001FDE  EFF3  F00F         	goto	u3401
  1190   001FE2  EFF5  F00F         	goto	u3400
  1191   001FE6                     u3401:
  1192   001FE6  EF7D  F010         	goto	l3132
  1193   001FEA                     u3400:
  1194   001FEA  EF2B  F010         	goto	l3120
  1195   001FEE                     l3114:
  1196                           
  1197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1198   001FEE  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1199   001FF2  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1200   001FF6  CFDF F056          	movff	indf2,??_vfpfcnvrt
  1201   001FFA  0E04               	movlw	4
  1202   001FFC  26DE               	addwf	postinc2,f,c
  1203   001FFE  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  1204   002002  0E00               	movlw	0
  1205   002004  22DD               	addwfc	postdec2,f,c
  1206   002006  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1207   00200A  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1208   00200E  CFDE F058          	movff	postinc2,vfpfcnvrt@convarg
  1209   002012  CFDE F059          	movff	postinc2,vfpfcnvrt@convarg+1
  1210   002016  CFDE F05A          	movff	postinc2,vfpfcnvrt@convarg+2
  1211   00201A  CFDE F05B          	movff	postinc2,vfpfcnvrt@convarg+3
  1212                           
  1213                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  1214   00201E  EF40  F010         	goto	l3122
  1215   002022                     l3116:
  1216                           
  1217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1218   002022  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1219   002026  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1220   00202A  CFDF F056          	movff	indf2,??_vfpfcnvrt
  1221   00202E  0E04               	movlw	4
  1222   002030  26DE               	addwf	postinc2,f,c
  1223   002032  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  1224   002036  0E00               	movlw	0
  1225   002038  22DD               	addwfc	postdec2,f,c
  1226   00203A  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1227   00203E  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1228   002042  CFDE F058          	movff	postinc2,vfpfcnvrt@convarg
  1229   002046  CFDE F059          	movff	postinc2,vfpfcnvrt@convarg+1
  1230   00204A  CFDE F05A          	movff	postinc2,vfpfcnvrt@convarg+2
  1231   00204E  CFDE F05B          	movff	postinc2,vfpfcnvrt@convarg+3
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  1234   002052  EF40  F010         	goto	l3122
  1235   002056                     l3120:
  1236   002056  505C               	movf	vfpfcnvrt@c^0,w,c
  1237   002058  6E56               	movwf	??_vfpfcnvrt^0,c
  1238   00205A  6A57               	clrf	(??_vfpfcnvrt+1)^0,c
  1239                           
  1240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1241                           ; Switch size 1, requested type "simple"
  1242                           ; Number of cases is 1, Range of values is 0 to 0
  1243                           ; switch strategies available:
  1244                           ; Name         Instructions Cycles
  1245                           ; simple_byte            4     3 (average)
  1246                           ;	Chosen strategy is simple_byte
  1247   00205C  5057               	movf	(??_vfpfcnvrt+1)^0,w,c
  1248   00205E  0A00               	xorlw	0	; case 0
  1249   002060  B4D8               	btfsc	status,2,c
  1250   002062  EF35  F010         	goto	l3354
  1251   002066  EF40  F010         	goto	l3122
  1252   00206A                     l3354:
  1253                           
  1254                           ; Switch size 1, requested type "simple"
  1255                           ; Number of cases is 2, Range of values is 76 to 108
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte            7     4 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260   00206A  5056               	movf	??_vfpfcnvrt^0,w,c
  1261   00206C  0A4C               	xorlw	76	; case 76
  1262   00206E  B4D8               	btfsc	status,2,c
  1263   002070  EF11  F010         	goto	l3116
  1264   002074  0A20               	xorlw	32	; case 108
  1265   002076  B4D8               	btfsc	status,2,c
  1266   002078  EFF7  F00F         	goto	l3114
  1267   00207C  EF40  F010         	goto	l3122
  1268   002080                     l3122:
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  1271   002080  0E01               	movlw	1
  1272   002082  245D               	addwf	vfpfcnvrt@cp^0,w,c
  1273   002084  6E56               	movwf	??_vfpfcnvrt^0,c
  1274   002086  0E00               	movlw	0
  1275   002088  205E               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1276   00208A  6E57               	movwf	(??_vfpfcnvrt+1)^0,c
  1277   00208C  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1278   002090  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1279   002094  C056  FFDE         	movff	??_vfpfcnvrt,postinc2
  1280   002098  C057  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  1283   00209C  EF67  F010         	goto	l3130
  1284   0020A0                     l3124:
  1285                           
  1286                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1287   0020A0  C050  F047         	movff	vfpfcnvrt@fp,efgtoa@fp
  1288   0020A4  C051  F048         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1289   0020A8  C058  F049         	movff	vfpfcnvrt@convarg,efgtoa@f
  1290   0020AC  C059  F04A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1291   0020B0  C05A  F04B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1292   0020B4  C05B  F04C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1293   0020B8  C05D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1294   0020BC  C05E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1295   0020C0                     	if	0	;tblptru may be non-zero
  1296   0020C0                     	endif
  1297   0020C0                     	if	0	;tblptru may be non-zero
  1298   0020C0                     	endif
  1299   0020C0  0008               	tblrd		*
  1300   0020C2  CFF5 F04D          	movff	tablat,efgtoa@c
  1301   0020C6  EC17  F004         	call	_efgtoa	;wreg free
  1302   0020CA  EF9A  F010         	goto	l872
  1303   0020CE                     l3130:
  1304   0020CE  C05D  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1305   0020D2  C05E  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1306   0020D6                     	if	0	;tblptru may be non-zero
  1307   0020D6                     	endif
  1308   0020D6                     	if	0	;tblptru may be non-zero
  1309   0020D6                     	endif
  1310   0020D6  0008               	tblrd		*
  1311   0020D8  50F5               	movf	tablat,w,c
  1312   0020DA  6E56               	movwf	??_vfpfcnvrt^0,c
  1313   0020DC  6A57               	clrf	(??_vfpfcnvrt+1)^0,c
  1314                           
  1315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1316                           ; Switch size 1, requested type "simple"
  1317                           ; Number of cases is 1, Range of values is 0 to 0
  1318                           ; switch strategies available:
  1319                           ; Name         Instructions Cycles
  1320                           ; simple_byte            4     3 (average)
  1321                           ;	Chosen strategy is simple_byte
  1322   0020DE  5057               	movf	(??_vfpfcnvrt+1)^0,w,c
  1323   0020E0  0A00               	xorlw	0	; case 0
  1324   0020E2  B4D8               	btfsc	status,2,c
  1325   0020E4  EF76  F010         	goto	l3356
  1326   0020E8  EF7D  F010         	goto	l3132
  1327   0020EC                     l3356:
  1328                           
  1329                           ; Switch size 1, requested type "simple"
  1330                           ; Number of cases is 1, Range of values is 102 to 102
  1331                           ; switch strategies available:
  1332                           ; Name         Instructions Cycles
  1333                           ; simple_byte            4     3 (average)
  1334                           ;	Chosen strategy is simple_byte
  1335   0020EC  5056               	movf	??_vfpfcnvrt^0,w,c
  1336   0020EE  0A66               	xorlw	102	; case 102
  1337   0020F0  B4D8               	btfsc	status,2,c
  1338   0020F2  EF50  F010         	goto	l3124
  1339   0020F6  EF7D  F010         	goto	l3132
  1340   0020FA                     l3132:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1343   0020FA  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1344   0020FE  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1345   002102  2ADE               	incf	postinc2,f,c
  1346   002104  0E00               	movlw	0
  1347   002106  22DD               	addwfc	postdec2,f,c
  1348   002108  EF9A  F010         	goto	l872
  1349   00210C                     l3136:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1352   00210C  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1353   002110  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1354   002114  CFDE FFF6          	movff	postinc2,tblptrl
  1355   002118  CFDD FFF7          	movff	postdec2,tblptrh
  1356   00211C                     	if	0	;tblptru may be non-zero
  1357   00211C                     	endif
  1358   00211C                     	if	0	;tblptru may be non-zero
  1359   00211C                     	endif
  1360   00211C  0008               	tblrd		*
  1361   00211E  50F5               	movf	tablat,w,c
  1362   002120  6E07               	movwf	fputc@c^0,c
  1363   002122  6A08               	clrf	(fputc@c+1)^0,c
  1364   002124  C050  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1365   002128  C051  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1366   00212C  EC02  F014         	call	_fputc	;wreg free
  1367   002130  EF7D  F010         	goto	l3132
  1368   002134                     l872:
  1369   002134  0012               	return		;funcret
  1370   002136                     __end_of_vfpfcnvrt:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _read_prec_or_width *****************
  1374 ;; Defined at:
  1375 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  1378 ;;		 -> vfprintf@cfmt(2), 
  1379 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  1380 ;;		 -> printf@ap(2), 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  c               1   12[COMRAM] unsigned char 
  1383 ;;  n               2   13[COMRAM] int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  2    6[COMRAM] int 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1393 ;;      Params:         4       0       0       0       0       0       0       0       0
  1394 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1395 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1396 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1397 ;;Total ram usage:        9 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 1
  1400 ;; This function calls:
  1401 ;;		___wmul
  1402 ;; This function is called by:
  1403 ;;		_vfpfcnvrt
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text4
  1408   0028CE                     __ptext4:
  1409                           	callstack 0
  1410   0028CE                     _read_prec_or_width:
  1411                           	callstack 26
  1412   0028CE                     
  1413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  1414   0028CE  0E00               	movlw	0
  1415   0028D0  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1416   0028D2  0E00               	movlw	0
  1417   0028D4  6E0E               	movwf	read_prec_or_width@n^0,c
  1418   0028D6                     
  1419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  1420   0028D6  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1421   0028DA  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1422   0028DE  CFDE FFF6          	movff	postinc2,tblptrl
  1423   0028E2  CFDD FFF7          	movff	postdec2,tblptrh
  1424   0028E6                     	if	0	;tblptru may be non-zero
  1425   0028E6                     	endif
  1426   0028E6                     	if	0	;tblptru may be non-zero
  1427   0028E6                     	endif
  1428   0028E6  0008               	tblrd		*
  1429   0028E8  50F5               	movf	tablat,w,c
  1430   0028EA  0A2A               	xorlw	42
  1431   0028EC  A4D8               	btfss	status,2,c
  1432   0028EE  EF7B  F014         	goto	u3361
  1433   0028F2  EF7D  F014         	goto	u3360
  1434   0028F6                     u3361:
  1435   0028F6  EFB1  F014         	goto	l3082
  1436   0028FA                     u3360:
  1437   0028FA                     
  1438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  1439   0028FA  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1440   0028FE  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1441   002902  2ADE               	incf	postinc2,f,c
  1442   002904  0E00               	movlw	0
  1443   002906  22DD               	addwfc	postdec2,f,c
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1446   002908  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  1447   00290C  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  1448   002910  CFDF F00B          	movff	indf2,??_read_prec_or_width
  1449   002914  0E02               	movlw	2
  1450   002916  26DE               	addwf	postinc2,f,c
  1451   002918  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  1452   00291C  0E00               	movlw	0
  1453   00291E  22DD               	addwfc	postdec2,f,c
  1454   002920  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  1455   002924  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  1456   002928  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  1457   00292C  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  1458                           
  1459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  1460   002930  EFC5  F014         	goto	l848
  1461   002934                     l3078:
  1462                           
  1463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  1464   002934  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1465   002938  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1466   00293C  0E00               	movlw	0
  1467   00293E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1468   002940  0E0A               	movlw	10
  1469   002942  6E03               	movwf	___wmul@multiplicand^0,c
  1470   002944  ECE8  F017         	call	___wmul	;wreg free
  1471   002948  500D               	movf	read_prec_or_width@c^0,w,c
  1472   00294A  2401               	addwf	?___wmul^0,w,c
  1473   00294C  6E0E               	movwf	read_prec_or_width@n^0,c
  1474   00294E  0E00               	movlw	0
  1475   002950  2002               	addwfc	(?___wmul+1)^0,w,c
  1476   002952  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1477   002954                     
  1478                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  1479   002954  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1480   002958  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1481   00295C  2ADE               	incf	postinc2,f,c
  1482   00295E  0E00               	movlw	0
  1483   002960  22DD               	addwfc	postdec2,f,c
  1484   002962                     l3082:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1487   002962  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1488   002966  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1489   00296A  CFDE FFF6          	movff	postinc2,tblptrl
  1490   00296E  CFDD FFF7          	movff	postdec2,tblptrh
  1491   002972                     	if	0	;tblptru may be non-zero
  1492   002972                     	endif
  1493   002972                     	if	0	;tblptru may be non-zero
  1494   002972                     	endif
  1495   002972  0008               	tblrd		*
  1496   002974  50F5               	movf	tablat,w,c
  1497   002976  0FD0               	addlw	208
  1498   002978  6E0D               	movwf	read_prec_or_width@c^0,c
  1499   00297A  0E09               	movlw	9
  1500   00297C  640D               	cpfsgt	read_prec_or_width@c^0,c
  1501   00297E  EFC3  F014         	goto	u3371
  1502   002982  EFC5  F014         	goto	u3370
  1503   002986                     u3371:
  1504   002986  EF9A  F014         	goto	l3078
  1505   00298A                     u3370:
  1506   00298A                     l848:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  1509   00298A  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1510   00298E  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1511   002992  0012               	return		;funcret
  1512   002994                     __end_of_read_prec_or_width:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function ___wmul *****************
  1516 ;; Defined at:
  1517 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  multiplier      2    0[COMRAM] unsigned int 
  1520 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  product         2    4[COMRAM] unsigned int 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2    0[COMRAM] unsigned int 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, prodl, prodh
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1532 ;;      Params:         4       0       0       0       0       0       0       0       0
  1533 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1535 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1536 ;;Total ram usage:        6 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_read_prec_or_width
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text5
  1546   002FD0                     __ptext5:
  1547                           	callstack 0
  1548   002FD0                     ___wmul:
  1549                           	callstack 26
  1550   002FD0  5001               	movf	___wmul@multiplier^0,w,c
  1551   002FD2  0203               	mulwf	___wmul@multiplicand^0,c
  1552   002FD4  CFF3 F005          	movff	prodl,___wmul@product
  1553   002FD8  CFF4 F006          	movff	prodh,___wmul@product+1
  1554   002FDC  5001               	movf	___wmul@multiplier^0,w,c
  1555   002FDE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1556   002FE0  50F3               	movf	243,w,c
  1557   002FE2  2606               	addwf	(___wmul@product+1)^0,f,c
  1558   002FE4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1559   002FE6  0203               	mulwf	___wmul@multiplicand^0,c
  1560   002FE8  50F3               	movf	243,w,c
  1561   002FEA  2606               	addwf	(___wmul@product+1)^0,f,c
  1562   002FEC  C005  F001         	movff	___wmul@product,?___wmul
  1563   002FF0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1564   002FF4  0012               	return		;funcret
  1565   002FF6                     __end_of___wmul:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _efgtoa *****************
  1569 ;; Defined at:
  1570 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  1573 ;;		 -> NULL(0), 
  1574 ;;  f               4   72[COMRAM] PTR struct _IO_FILE
  1575 ;;  c               1   76[COMRAM] unsigned char 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  u               4   40[BANK0 ] struct flui
  1578 ;;  g               4   36[BANK0 ] struct flui
  1579 ;;  l               4   29[BANK0 ] struct flui
  1580 ;;  h               4   25[BANK0 ] struct flui
  1581 ;;  ou              4   19[BANK0 ] struct flui
  1582 ;;  n               2   34[BANK0 ] int 
  1583 ;;  i               2   23[BANK0 ] int 
  1584 ;;  w               2   17[BANK0 ] int 
  1585 ;;  e               2   15[BANK0 ] int 
  1586 ;;  m               2   13[BANK0 ] int 
  1587 ;;  d               2   11[BANK0 ] int 
  1588 ;;  t               2    4[BANK0 ] int 
  1589 ;;  p               2    2[BANK0 ] int 
  1590 ;;  ne              2    0[BANK0 ] int 
  1591 ;;  sign            1   33[BANK0 ] unsigned char 
  1592 ;;  nmode           1   10[BANK0 ] unsigned char 
  1593 ;;  mode            1    9[BANK0 ] unsigned char 
  1594 ;;  pp              1    8[BANK0 ] unsigned char 
  1595 ;;  esign           1    0        unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1605 ;;      Params:         7       0       0       0       0       0       0       0       0
  1606 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1607 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1608 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1609 ;;Total ram usage:       53 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 7
  1612 ;; This function calls:
  1613 ;;		___fladd
  1614 ;;		___fldiv
  1615 ;;		___fleq
  1616 ;;		___flge
  1617 ;;		___flmul
  1618 ;;		___flneg
  1619 ;;		___flsub
  1620 ;;		___fltol
  1621 ;;		___fpclassifyf
  1622 ;;		_floorf
  1623 ;;		_labs
  1624 ;;		_memcpy
  1625 ;;		_pad
  1626 ;;		_strcpy
  1627 ;; This function is called by:
  1628 ;;		_vfpfcnvrt
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text6
  1633   00082E                     __ptext6:
  1634                           	callstack 0
  1635   00082E                     _efgtoa:
  1636                           	callstack 20
  1637   00082E                     
  1638                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  1639   00082E  0E00               	movlw	0
  1640   000830  0100               	movlb	0	; () banked
  1641   000832  6FDE               	movwf	efgtoa@sign& (0+255),b
  1642   000834                     
  1643                           ; BSR set to: 0
  1644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  1645   000834  C049  F0E1         	movff	efgtoa@f,efgtoa@g
  1646   000838  C04A  F0E2         	movff	efgtoa@f+1,efgtoa@g+1
  1647   00083C  C04B  F0E3         	movff	efgtoa@f+2,efgtoa@g+2
  1648   000840  C04C  F0E4         	movff	efgtoa@f+3,efgtoa@g+3
  1649   000844                     
  1650                           ; BSR set to: 0
  1651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  1652   000844  BFE4               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1653   000846  EF29  F004         	goto	u3040
  1654   00084A  EF27  F004         	goto	u3041
  1655   00084E                     u3041:
  1656   00084E  EF3D  F004         	goto	l2860
  1657   000852                     u3040:
  1658   000852                     
  1659                           ; BSR set to: 0
  1660                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  1661   000852  0E01               	movlw	1
  1662   000854  6FDE               	movwf	efgtoa@sign& (0+255),b
  1663   000856                     
  1664                           ; BSR set to: 0
  1665                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  1666   000856  C0E1  F001         	movff	efgtoa@g,___flneg@f1
  1667   00085A  C0E2  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1668   00085E  C0E3  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1669   000862  C0E4  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1670   000866  ECA0  F017         	call	___flneg	;wreg free
  1671   00086A  C001  F0E1         	movff	?___flneg,efgtoa@g
  1672   00086E  C002  F0E2         	movff	?___flneg+1,efgtoa@g+1
  1673   000872  C003  F0E3         	movff	?___flneg+2,efgtoa@g+2
  1674   000876  C004  F0E4         	movff	?___flneg+3,efgtoa@g+3
  1675   00087A                     l2860:
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  1678   00087A  0E00               	movlw	0
  1679   00087C  0100               	movlb	0	; () banked
  1680   00087E  6FE0               	movwf	(efgtoa@n+1)& (0+255),b
  1681   000880  0E00               	movlw	0
  1682   000882  6FDF               	movwf	efgtoa@n& (0+255),b
  1683   000884                     
  1684                           ; BSR set to: 0
  1685                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  1686   000884  C068  F0CE         	movff	_width,efgtoa@w
  1687   000888  C069  F0CF         	movff	_width+1,efgtoa@w+1
  1688   00088C                     
  1689                           ; BSR set to: 0
  1690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  1691   00088C  51DE               	movf	efgtoa@sign& (0+255),w,b
  1692   00088E  B4D8               	btfsc	status,2,c
  1693   000890  EF4C  F004         	goto	u3051
  1694   000894  EF4E  F004         	goto	u3050
  1695   000898                     u3051:
  1696   000898  EF62  F004         	goto	l2874
  1697   00089C                     u3050:
  1698   00089C                     
  1699                           ; BSR set to: 0
  1700                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  1701   00089C  51DE               	movf	efgtoa@sign& (0+255),w,b
  1702   00089E  A4D8               	btfss	status,2,c
  1703   0008A0  EF54  F004         	goto	u3061
  1704   0008A4  EF56  F004         	goto	u3060
  1705   0008A8                     u3061:
  1706   0008A8  EF5C  F004         	goto	l2870
  1707   0008AC                     u3060:
  1708   0008AC                     
  1709                           ; BSR set to: 0
  1710   0008AC  0E00               	movlw	0
  1711   0008AE  6FC4               	movwf	(_efgtoa$774+1)& (0+255),b
  1712   0008B0  0E2B               	movlw	43
  1713   0008B2  6FC3               	movwf	_efgtoa$774& (0+255),b
  1714   0008B4  EF60  F004         	goto	l2872
  1715   0008B8                     l2870:
  1716                           
  1717                           ; BSR set to: 0
  1718   0008B8  0E00               	movlw	0
  1719   0008BA  6FC4               	movwf	(_efgtoa$774+1)& (0+255),b
  1720   0008BC  0E2D               	movlw	45
  1721   0008BE  6FC3               	movwf	_efgtoa$774& (0+255),b
  1722   0008C0                     l2872:
  1723                           
  1724                           ; BSR set to: 0
  1725   0008C0  C0C3  F0DE         	movff	_efgtoa$774,efgtoa@sign
  1726   0008C4                     l2874:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1730   0008C4  C0E1  F001         	movff	efgtoa@g,___fpclassifyf@x
  1731   0008C8  C0E2  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1732   0008CC  C0E3  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1733   0008D0  C0E4  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1734   0008D4  EC83  F013         	call	___fpclassifyf	;wreg free
  1735   0008D8  0401               	decf	?___fpclassifyf^0,w,c
  1736   0008DA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1737   0008DC  A4D8               	btfss	status,2,c
  1738   0008DE  EF73  F004         	goto	u3071
  1739   0008E2  EF75  F004         	goto	u3070
  1740   0008E6                     u3071:
  1741   0008E6  EFA8  F004         	goto	l2892
  1742   0008EA                     u3070:
  1743   0008EA                     
  1744                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  1745   0008EA  0100               	movlb	0	; () banked
  1746   0008EC  51DE               	movf	efgtoa@sign& (0+255),w,b
  1747   0008EE  B4D8               	btfsc	status,2,c
  1748   0008F0  EF7C  F004         	goto	u3081
  1749   0008F4  EF7E  F004         	goto	u3080
  1750   0008F8                     u3081:
  1751   0008F8  EF87  F004         	goto	l2884
  1752   0008FC                     u3080:
  1753   0008FC                     
  1754                           ; BSR set to: 0
  1755                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  1756   0008FC  C0DE  F06D         	movff	efgtoa@sign,_dbuf
  1757   000900                     
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  1760   000900  07CE               	decf	efgtoa@w& (0+255),f,b
  1761   000902  A0D8               	btfss	status,0,c
  1762   000904  07CF               	decf	(efgtoa@w+1)& (0+255),f,b
  1763   000906                     
  1764                           ; BSR set to: 0
  1765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  1766   000906  0E00               	movlw	0
  1767   000908  6FE0               	movwf	(efgtoa@n+1)& (0+255),b
  1768   00090A  0E01               	movlw	1
  1769   00090C  6FDF               	movwf	efgtoa@n& (0+255),b
  1770   00090E                     l2884:
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  1774   00090E  0E6D               	movlw	low _dbuf
  1775   000910  25DF               	addwf	efgtoa@n& (0+255),w,b
  1776   000912  6E01               	movwf	strcpy@dest^0,c
  1777   000914  0E00               	movlw	high _dbuf
  1778   000916  21E0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1779   000918  6E02               	movwf	(strcpy@dest+1)^0,c
  1780   00091A  0E25               	movlw	low STR_3
  1781   00091C  6E03               	movwf	strcpy@src^0,c
  1782   00091E  0E08               	movlw	high STR_3
  1783   000920  6E04               	movwf	(strcpy@src+1)^0,c
  1784   000922  EC80  F017         	call	_strcpy	;wreg free
  1785   000926                     
  1786                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1787   000926  0100               	movlb	0	; () banked
  1788   000928  0EFD               	movlw	253
  1789   00092A  27CE               	addwf	efgtoa@w& (0+255),f,b
  1790   00092C  0EFF               	movlw	255
  1791   00092E  23CF               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1792   000930                     
  1793                           ; BSR set to: 0
  1794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1795   000930  C047  F017         	movff	efgtoa@fp,pad@fp
  1796   000934  C048  F018         	movff	efgtoa@fp+1,pad@fp+1
  1797   000938  0E6D               	movlw	low _dbuf
  1798   00093A  6E19               	movwf	pad@buf^0,c
  1799   00093C  0E00               	movlw	high _dbuf
  1800   00093E  6E1A               	movwf	(pad@buf+1)^0,c
  1801   000940  C0CE  F01B         	movff	efgtoa@w,pad@p
  1802   000944  C0CF  F01C         	movff	efgtoa@w+1,pad@p+1
  1803   000948  ECF5  F015         	call	_pad	;wreg free
  1804   00094C  EF25  F009         	goto	l803
  1805   000950                     l2892:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  1808   000950  C0E1  F001         	movff	efgtoa@g,___fpclassifyf@x
  1809   000954  C0E2  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1810   000958  C0E3  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1811   00095C  C0E4  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1812   000960  EC83  F013         	call	___fpclassifyf	;wreg free
  1813   000964  5001               	movf	?___fpclassifyf^0,w,c
  1814   000966  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1815   000968  A4D8               	btfss	status,2,c
  1816   00096A  EFB9  F004         	goto	u3091
  1817   00096E  EFBB  F004         	goto	u3090
  1818   000972                     u3091:
  1819   000972  EFEE  F004         	goto	l2910
  1820   000976                     u3090:
  1821   000976                     
  1822                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  1823   000976  0100               	movlb	0	; () banked
  1824   000978  51DE               	movf	efgtoa@sign& (0+255),w,b
  1825   00097A  B4D8               	btfsc	status,2,c
  1826   00097C  EFC2  F004         	goto	u3101
  1827   000980  EFC4  F004         	goto	u3100
  1828   000984                     u3101:
  1829   000984  EFCD  F004         	goto	l2902
  1830   000988                     u3100:
  1831   000988                     
  1832                           ; BSR set to: 0
  1833                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  1834   000988  C0DE  F06D         	movff	efgtoa@sign,_dbuf
  1835   00098C                     
  1836                           ; BSR set to: 0
  1837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  1838   00098C  07CE               	decf	efgtoa@w& (0+255),f,b
  1839   00098E  A0D8               	btfss	status,0,c
  1840   000990  07CF               	decf	(efgtoa@w+1)& (0+255),f,b
  1841   000992                     
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  1844   000992  0E00               	movlw	0
  1845   000994  6FE0               	movwf	(efgtoa@n+1)& (0+255),b
  1846   000996  0E01               	movlw	1
  1847   000998  6FDF               	movwf	efgtoa@n& (0+255),b
  1848   00099A                     l2902:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  1852   00099A  0E6D               	movlw	low _dbuf
  1853   00099C  25DF               	addwf	efgtoa@n& (0+255),w,b
  1854   00099E  6E01               	movwf	strcpy@dest^0,c
  1855   0009A0  0E00               	movlw	high _dbuf
  1856   0009A2  21E0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1857   0009A4  6E02               	movwf	(strcpy@dest+1)^0,c
  1858   0009A6  0E29               	movlw	low STR_6
  1859   0009A8  6E03               	movwf	strcpy@src^0,c
  1860   0009AA  0E08               	movlw	high STR_6
  1861   0009AC  6E04               	movwf	(strcpy@src+1)^0,c
  1862   0009AE  EC80  F017         	call	_strcpy	;wreg free
  1863   0009B2                     
  1864                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 595:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 596:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  1865   0009B2  0100               	movlb	0	; () banked
  1866   0009B4  0EFD               	movlw	253
  1867   0009B6  27CE               	addwf	efgtoa@w& (0+255),f,b
  1868   0009B8  0EFF               	movlw	255
  1869   0009BA  23CF               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1870   0009BC                     
  1871                           ; BSR set to: 0
  1872                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 597:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1873   0009BC  C047  F017         	movff	efgtoa@fp,pad@fp
  1874   0009C0  C048  F018         	movff	efgtoa@fp+1,pad@fp+1
  1875   0009C4  0E6D               	movlw	low _dbuf
  1876   0009C6  6E19               	movwf	pad@buf^0,c
  1877   0009C8  0E00               	movlw	high _dbuf
  1878   0009CA  6E1A               	movwf	(pad@buf+1)^0,c
  1879   0009CC  C0CE  F01B         	movff	efgtoa@w,pad@p
  1880   0009D0  C0CF  F01C         	movff	efgtoa@w+1,pad@p+1
  1881   0009D4  ECF5  F015         	call	_pad	;wreg free
  1882   0009D8  EF25  F009         	goto	l803
  1883   0009DC                     l2910:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  1886   0009DC  0E00               	movlw	0
  1887   0009DE  0100               	movlb	0	; () banked
  1888   0009E0  6FE5               	movwf	efgtoa@u& (0+255),b
  1889   0009E2  0E00               	movlw	0
  1890   0009E4  6FE6               	movwf	(efgtoa@u+1)& (0+255),b
  1891   0009E6  0E80               	movlw	128
  1892   0009E8  6FE7               	movwf	(efgtoa@u+2)& (0+255),b
  1893   0009EA  0E3F               	movlw	63
  1894   0009EC  6FE8               	movwf	(efgtoa@u+3)& (0+255),b
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  1897   0009EE  0E00               	movlw	0
  1898   0009F0  6FCD               	movwf	(efgtoa@e+1)& (0+255),b
  1899   0009F2  0E00               	movlw	0
  1900   0009F4  6FCC               	movwf	efgtoa@e& (0+255),b
  1901   0009F6                     
  1902                           ; BSR set to: 0
  1903                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  1904   0009F6  C0E1  F001         	movff	efgtoa@g,___fleq@ff1
  1905   0009FA  C0E2  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  1906   0009FE  C0E3  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  1907   000A02  C0E4  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  1908   000A06  0E00               	movlw	0
  1909   000A08  6E05               	movwf	___fleq@ff2^0,c
  1910   000A0A  0E00               	movlw	0
  1911   000A0C  6E06               	movwf	(___fleq@ff2+1)^0,c
  1912   000A0E  0E00               	movlw	0
  1913   000A10  6E07               	movwf	(___fleq@ff2+2)^0,c
  1914   000A12  0E00               	movlw	0
  1915   000A14  6E08               	movwf	(___fleq@ff2+3)^0,c
  1916   000A16  ECCA  F014         	call	___fleq	;wreg free
  1917   000A1A  B0D8               	btfsc	status,0,c
  1918   000A1C  EF12  F005         	goto	u3111
  1919   000A20  EF14  F005         	goto	u3110
  1920   000A24                     u3111:
  1921   000A24  EFF3  F005         	goto	l806
  1922   000A28                     u3110:
  1923   000A28  EF21  F005         	goto	l2918
  1924   000A2C                     l808:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  1927   000A2C  C0D0  F0E5         	movff	efgtoa@ou,efgtoa@u
  1928   000A30  C0D1  F0E6         	movff	efgtoa@ou+1,efgtoa@u+1
  1929   000A34  C0D2  F0E7         	movff	efgtoa@ou+2,efgtoa@u+2
  1930   000A38  C0D3  F0E8         	movff	efgtoa@ou+3,efgtoa@u+3
  1931   000A3C                     
  1932                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  1933   000A3C  0100               	movlb	0	; () banked
  1934   000A3E  4BCC               	infsnz	efgtoa@e& (0+255),f,b
  1935   000A40  2BCD               	incf	(efgtoa@e+1)& (0+255),f,b
  1936   000A42                     l2918:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  1939   000A42  C0E5  F001         	movff	efgtoa@u,___flmul@b
  1940   000A46  C0E6  F002         	movff	efgtoa@u+1,___flmul@b+1
  1941   000A4A  C0E7  F003         	movff	efgtoa@u+2,___flmul@b+2
  1942   000A4E  C0E8  F004         	movff	efgtoa@u+3,___flmul@b+3
  1943   000A52  0E00               	movlw	0
  1944   000A54  6E05               	movwf	___flmul@a^0,c
  1945   000A56  0E00               	movlw	0
  1946   000A58  6E06               	movwf	(___flmul@a+1)^0,c
  1947   000A5A  0E20               	movlw	32
  1948   000A5C  6E07               	movwf	(___flmul@a+2)^0,c
  1949   000A5E  0E41               	movlw	65
  1950   000A60  6E08               	movwf	(___flmul@a+3)^0,c
  1951   000A62  EC86  F00B         	call	___flmul	;wreg free
  1952   000A66  C001  F0D0         	movff	?___flmul,efgtoa@ou
  1953   000A6A  C002  F0D1         	movff	?___flmul+1,efgtoa@ou+1
  1954   000A6E  C003  F0D2         	movff	?___flmul+2,efgtoa@ou+2
  1955   000A72  C004  F0D3         	movff	?___flmul+3,efgtoa@ou+3
  1956   000A76  0100               	movlb	0	; () banked
  1957   000A78  51D0               	movf	efgtoa@ou& (0+255),w,b
  1958   000A7A  5DE1               	subwf	efgtoa@g& (0+255),w,b
  1959   000A7C  6E01               	movwf	labs@a^0,c
  1960   000A7E  51D1               	movf	(efgtoa@ou+1)& (0+255),w,b
  1961   000A80  59E2               	subwfb	(efgtoa@g+1)& (0+255),w,b
  1962   000A82  6E02               	movwf	(labs@a+1)^0,c
  1963   000A84  51D2               	movf	(efgtoa@ou+2)& (0+255),w,b
  1964   000A86  59E3               	subwfb	(efgtoa@g+2)& (0+255),w,b
  1965   000A88  6E03               	movwf	(labs@a+2)^0,c
  1966   000A8A  51D3               	movf	(efgtoa@ou+3)& (0+255),w,b
  1967   000A8C  59E4               	subwfb	(efgtoa@g+3)& (0+255),w,b
  1968   000A8E  6E04               	movwf	(labs@a+3)^0,c
  1969   000A90  EC6D  F016         	call	_labs	;wreg free
  1970   000A94  BE04               	btfsc	(?_labs+3)^0,7,c
  1971   000A96  EF58  F005         	goto	u3121
  1972   000A9A  5004               	movf	(?_labs+3)^0,w,c
  1973   000A9C  1003               	iorwf	(?_labs+2)^0,w,c
  1974   000A9E  1002               	iorwf	(?_labs+1)^0,w,c
  1975   000AA0  E109               	bnz	u3120
  1976   000AA2  0E02               	movlw	2
  1977   000AA4  5C01               	subwf	?_labs^0,w,c
  1978   000AA6  A0D8               	btfss	status,0,c
  1979   000AA8  EF58  F005         	goto	u3121
  1980   000AAC  EF5A  F005         	goto	u3120
  1981   000AB0                     u3121:
  1982   000AB0  EF16  F005         	goto	l808
  1983   000AB4                     u3120:
  1984   000AB4  C0D0  F01A         	movff	efgtoa@ou,___flge@ff1
  1985   000AB8  C0D1  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  1986   000ABC  C0D2  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  1987   000AC0  C0D3  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  1988   000AC4  C0E1  F01E         	movff	efgtoa@g,___flge@ff2
  1989   000AC8  C0E2  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  1990   000ACC  C0E3  F020         	movff	efgtoa@g+2,___flge@ff2+2
  1991   000AD0  C0E4  F021         	movff	efgtoa@g+3,___flge@ff2+3
  1992   000AD4  EC01  F013         	call	___flge	;wreg free
  1993   000AD8  A0D8               	btfss	status,0,c
  1994   000ADA  EF71  F005         	goto	u3131
  1995   000ADE  EF73  F005         	goto	u3130
  1996   000AE2                     u3131:
  1997   000AE2  EF16  F005         	goto	l808
  1998   000AE6                     u3130:
  1999   000AE6                     
  2000                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2001   000AE6  0100               	movlb	0	; () banked
  2002   000AE8  51E5               	movf	efgtoa@u& (0+255),w,b
  2003   000AEA  5DE1               	subwf	efgtoa@g& (0+255),w,b
  2004   000AEC  6E01               	movwf	labs@a^0,c
  2005   000AEE  51E6               	movf	(efgtoa@u+1)& (0+255),w,b
  2006   000AF0  59E2               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2007   000AF2  6E02               	movwf	(labs@a+1)^0,c
  2008   000AF4  51E7               	movf	(efgtoa@u+2)& (0+255),w,b
  2009   000AF6  59E3               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2010   000AF8  6E03               	movwf	(labs@a+2)^0,c
  2011   000AFA  51E8               	movf	(efgtoa@u+3)& (0+255),w,b
  2012   000AFC  59E4               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2013   000AFE  6E04               	movwf	(labs@a+3)^0,c
  2014   000B00  EC6D  F016         	call	_labs	;wreg free
  2015   000B04  BE04               	btfsc	(?_labs+3)^0,7,c
  2016   000B06  EF92  F005         	goto	u3140
  2017   000B0A  5004               	movf	(?_labs+3)^0,w,c
  2018   000B0C  1003               	iorwf	(?_labs+2)^0,w,c
  2019   000B0E  1002               	iorwf	(?_labs+1)^0,w,c
  2020   000B10  E107               	bnz	u3141
  2021   000B12  0E02               	movlw	2
  2022   000B14  5C01               	subwf	?_labs^0,w,c
  2023   000B16  B0D8               	btfsc	status,0,c
  2024   000B18  EF90  F005         	goto	u3141
  2025   000B1C  EF92  F005         	goto	u3140
  2026   000B20                     u3141:
  2027   000B20  EFDA  F005         	goto	l2936
  2028   000B24                     u3140:
  2029   000B24                     l2926:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  2032   000B24  C0E5  F0E1         	movff	efgtoa@u,efgtoa@g
  2033   000B28  C0E6  F0E2         	movff	efgtoa@u+1,efgtoa@g+1
  2034   000B2C  C0E7  F0E3         	movff	efgtoa@u+2,efgtoa@g+2
  2035   000B30  C0E8  F0E4         	movff	efgtoa@u+3,efgtoa@g+3
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  2038   000B34  EFF3  F005         	goto	l806
  2039   000B38                     l2928:
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  2042   000B38  C0E5  F01A         	movff	efgtoa@u,___fldiv@b
  2043   000B3C  C0E6  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  2044   000B40  C0E7  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  2045   000B44  C0E8  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  2046   000B48  0E00               	movlw	0
  2047   000B4A  6E1E               	movwf	___fldiv@a^0,c
  2048   000B4C  0E00               	movlw	0
  2049   000B4E  6E1F               	movwf	(___fldiv@a+1)^0,c
  2050   000B50  0E20               	movlw	32
  2051   000B52  6E20               	movwf	(___fldiv@a+2)^0,c
  2052   000B54  0E41               	movlw	65
  2053   000B56  6E21               	movwf	(___fldiv@a+3)^0,c
  2054   000B58  EC9B  F00D         	call	___fldiv	;wreg free
  2055   000B5C  C01A  F0E5         	movff	?___fldiv,efgtoa@u
  2056   000B60  C01B  F0E6         	movff	?___fldiv+1,efgtoa@u+1
  2057   000B64  C01C  F0E7         	movff	?___fldiv+2,efgtoa@u+2
  2058   000B68  C01D  F0E8         	movff	?___fldiv+3,efgtoa@u+3
  2059   000B6C                     
  2060                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  2061   000B6C  0100               	movlb	0	; () banked
  2062   000B6E  07CC               	decf	efgtoa@e& (0+255),f,b
  2063   000B70  A0D8               	btfss	status,0,c
  2064   000B72  07CD               	decf	(efgtoa@e+1)& (0+255),f,b
  2065   000B74                     
  2066                           ; BSR set to: 0
  2067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2068   000B74  51E5               	movf	efgtoa@u& (0+255),w,b
  2069   000B76  5DE1               	subwf	efgtoa@g& (0+255),w,b
  2070   000B78  6E01               	movwf	labs@a^0,c
  2071   000B7A  51E6               	movf	(efgtoa@u+1)& (0+255),w,b
  2072   000B7C  59E2               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2073   000B7E  6E02               	movwf	(labs@a+1)^0,c
  2074   000B80  51E7               	movf	(efgtoa@u+2)& (0+255),w,b
  2075   000B82  59E3               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2076   000B84  6E03               	movwf	(labs@a+2)^0,c
  2077   000B86  51E8               	movf	(efgtoa@u+3)& (0+255),w,b
  2078   000B88  59E4               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2079   000B8A  6E04               	movwf	(labs@a+3)^0,c
  2080   000B8C  EC6D  F016         	call	_labs	;wreg free
  2081   000B90  BE04               	btfsc	(?_labs+3)^0,7,c
  2082   000B92  EFD8  F005         	goto	u3150
  2083   000B96  5004               	movf	(?_labs+3)^0,w,c
  2084   000B98  1003               	iorwf	(?_labs+2)^0,w,c
  2085   000B9A  1002               	iorwf	(?_labs+1)^0,w,c
  2086   000B9C  E107               	bnz	u3151
  2087   000B9E  0E02               	movlw	2
  2088   000BA0  5C01               	subwf	?_labs^0,w,c
  2089   000BA2  B0D8               	btfsc	status,0,c
  2090   000BA4  EFD6  F005         	goto	u3151
  2091   000BA8  EFD8  F005         	goto	u3150
  2092   000BAC                     u3151:
  2093   000BAC  EFDA  F005         	goto	l2936
  2094   000BB0                     u3150:
  2095   000BB0  EF92  F005         	goto	l2926
  2096   000BB4                     l2936:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  2099   000BB4  C0E1  F01A         	movff	efgtoa@g,___flge@ff1
  2100   000BB8  C0E2  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2101   000BBC  C0E3  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2102   000BC0  C0E4  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2103   000BC4  C0E5  F01E         	movff	efgtoa@u,___flge@ff2
  2104   000BC8  C0E6  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2105   000BCC  C0E7  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2106   000BD0  C0E8  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2107   000BD4  EC01  F013         	call	___flge	;wreg free
  2108   000BD8  A0D8               	btfss	status,0,c
  2109   000BDA  EFF1  F005         	goto	u3161
  2110   000BDE  EFF3  F005         	goto	u3160
  2111   000BE2                     u3161:
  2112   000BE2  EF9C  F005         	goto	l2928
  2113   000BE6                     u3160:
  2114   000BE6                     l806:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  2117   000BE6  C04D  F0C6         	movff	efgtoa@c,efgtoa@mode
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  2120   000BEA  C0C6  F0C7         	movff	efgtoa@mode,efgtoa@nmode
  2121   000BEE                     
  2122                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  2123   000BEE  0100               	movlb	0	; () banked
  2124   000BF0  BF6B               	btfsc	(_prec+1)& (0+255),7,b
  2125   000BF2  EFFD  F005         	goto	u3171
  2126   000BF6  EFFF  F005         	goto	u3170
  2127   000BFA                     u3171:
  2128   000BFA  EF05  F006         	goto	l2942
  2129   000BFE                     u3170:
  2130   000BFE                     
  2131                           ; BSR set to: 0
  2132   000BFE  C06A  F0BF         	movff	_prec,efgtoa@p
  2133   000C02  C06B  F0C0         	movff	_prec+1,efgtoa@p+1
  2134   000C06  EF09  F006         	goto	l2944
  2135   000C0A                     l2942:
  2136                           
  2137                           ; BSR set to: 0
  2138   000C0A  0E00               	movlw	0
  2139   000C0C  6FC0               	movwf	(efgtoa@p+1)& (0+255),b
  2140   000C0E  0E06               	movlw	6
  2141   000C10  6FBF               	movwf	efgtoa@p& (0+255),b
  2142   000C12                     l2944:
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  2146   000C12  C0BF  F0CA         	movff	efgtoa@p,efgtoa@m
  2147   000C16  C0C0  F0CB         	movff	efgtoa@p+1,efgtoa@m+1
  2148   000C1A                     
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  2151   000C1A  4BCA               	infsnz	efgtoa@m& (0+255),f,b
  2152   000C1C  2BCB               	incf	(efgtoa@m+1)& (0+255),f,b
  2153   000C1E                     
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  2156   000C1E  0E66               	movlw	102
  2157   000C20  19C7               	xorwf	efgtoa@nmode& (0+255),w,b
  2158   000C22  A4D8               	btfss	status,2,c
  2159   000C24  EF16  F006         	goto	u3181
  2160   000C28  EF18  F006         	goto	u3180
  2161   000C2C                     u3181:
  2162   000C2C  EF38  F006         	goto	l2958
  2163   000C30                     u3180:
  2164   000C30                     
  2165                           ; BSR set to: 0
  2166                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  2167   000C30  BFCD               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2168   000C32  EF1F  F006         	goto	u3190
  2169   000C36  EF1D  F006         	goto	u3191
  2170   000C3A                     u3191:
  2171   000C3A  EF2B  F006         	goto	l2954
  2172   000C3E                     u3190:
  2173   000C3E                     
  2174                           ; BSR set to: 0
  2175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  2176   000C3E  0E00               	movlw	0
  2177   000C40  6FE5               	movwf	efgtoa@u& (0+255),b
  2178   000C42  0E00               	movlw	0
  2179   000C44  6FE6               	movwf	(efgtoa@u+1)& (0+255),b
  2180   000C46  0E80               	movlw	128
  2181   000C48  6FE7               	movwf	(efgtoa@u+2)& (0+255),b
  2182   000C4A  0E3F               	movlw	63
  2183   000C4C  6FE8               	movwf	(efgtoa@u+3)& (0+255),b
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  2186   000C4E  0E00               	movlw	0
  2187   000C50  6FCD               	movwf	(efgtoa@e+1)& (0+255),b
  2188   000C52  0E00               	movlw	0
  2189   000C54  6FCC               	movwf	efgtoa@e& (0+255),b
  2190   000C56                     l2954:
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  2194   000C56  0E67               	movlw	103
  2195   000C58  19C6               	xorwf	efgtoa@mode& (0+255),w,b
  2196   000C5A  B4D8               	btfsc	status,2,c
  2197   000C5C  EF32  F006         	goto	u3201
  2198   000C60  EF34  F006         	goto	u3200
  2199   000C64                     u3201:
  2200   000C64  EF38  F006         	goto	l2958
  2201   000C68                     u3200:
  2202   000C68                     
  2203                           ; BSR set to: 0
  2204                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  2205   000C68  51CC               	movf	efgtoa@e& (0+255),w,b
  2206   000C6A  27CA               	addwf	efgtoa@m& (0+255),f,b
  2207   000C6C  51CD               	movf	(efgtoa@e+1)& (0+255),w,b
  2208   000C6E  23CB               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2209   000C70                     l2958:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  2213   000C70  0E00               	movlw	0
  2214   000C72  6FD5               	movwf	(efgtoa@i+1)& (0+255),b
  2215   000C74  0E00               	movlw	0
  2216   000C76  6FD4               	movwf	efgtoa@i& (0+255),b
  2217   000C78                     
  2218                           ; BSR set to: 0
  2219                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  2220   000C78  C0E1  F0D6         	movff	efgtoa@g,efgtoa@h
  2221   000C7C  C0E2  F0D7         	movff	efgtoa@g+1,efgtoa@h+1
  2222   000C80  C0E3  F0D8         	movff	efgtoa@g+2,efgtoa@h+2
  2223   000C84  C0E4  F0D9         	movff	efgtoa@g+3,efgtoa@h+3
  2224   000C88                     
  2225                           ; BSR set to: 0
  2226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  2227   000C88  C0E5  F0D0         	movff	efgtoa@u,efgtoa@ou
  2228   000C8C  C0E6  F0D1         	movff	efgtoa@u+1,efgtoa@ou+1
  2229   000C90  C0E7  F0D2         	movff	efgtoa@u+2,efgtoa@ou+2
  2230   000C94  C0E8  F0D3         	movff	efgtoa@u+3,efgtoa@ou+3
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2233   000C98  EFC9  F006         	goto	l2972
  2234   000C9C                     l2964:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  2238   000C9C  C0D6  F01A         	movff	efgtoa@h,___fldiv@b
  2239   000CA0  C0D7  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  2240   000CA4  C0D8  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  2241   000CA8  C0D9  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  2242   000CAC  C0E5  F01E         	movff	efgtoa@u,___fldiv@a
  2243   000CB0  C0E6  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  2244   000CB4  C0E7  F020         	movff	efgtoa@u+2,___fldiv@a+2
  2245   000CB8  C0E8  F021         	movff	efgtoa@u+3,___fldiv@a+3
  2246   000CBC  EC9B  F00D         	call	___fldiv	;wreg free
  2247   000CC0  C01A  F033         	movff	?___fldiv,floorf@x
  2248   000CC4  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  2249   000CC8  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  2250   000CCC  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  2251   000CD0  EC9B  F010         	call	_floorf	;wreg free
  2252   000CD4  C033  F0DA         	movff	?_floorf,efgtoa@l
  2253   000CD8  C034  F0DB         	movff	?_floorf+1,efgtoa@l+1
  2254   000CDC  C035  F0DC         	movff	?_floorf+2,efgtoa@l+2
  2255   000CE0  C036  F0DD         	movff	?_floorf+3,efgtoa@l+3
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  2258   000CE4  C0DA  F001         	movff	efgtoa@l,___fltol@f1
  2259   000CE8  C0DB  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2260   000CEC  C0DC  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2261   000CF0  C0DD  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2262   000CF4  EC7E  F012         	call	___fltol	;wreg free
  2263   000CF8  C001  F0C8         	movff	?___fltol,efgtoa@d
  2264   000CFC  C002  F0C9         	movff	?___fltol+1,efgtoa@d+1
  2265   000D00                     
  2266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  2267   000D00  C0D6  F01A         	movff	efgtoa@h,___flsub@b
  2268   000D04  C0D7  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2269   000D08  C0D8  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2270   000D0C  C0D9  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2271   000D10  C0DA  F005         	movff	efgtoa@l,___flmul@a
  2272   000D14  C0DB  F006         	movff	efgtoa@l+1,___flmul@a+1
  2273   000D18  C0DC  F007         	movff	efgtoa@l+2,___flmul@a+2
  2274   000D1C  C0DD  F008         	movff	efgtoa@l+3,___flmul@a+3
  2275   000D20  C0E5  F001         	movff	efgtoa@u,___flmul@b
  2276   000D24  C0E6  F002         	movff	efgtoa@u+1,___flmul@b+1
  2277   000D28  C0E7  F003         	movff	efgtoa@u+2,___flmul@b+2
  2278   000D2C  C0E8  F004         	movff	efgtoa@u+3,___flmul@b+3
  2279   000D30  EC86  F00B         	call	___flmul	;wreg free
  2280   000D34  C001  F01E         	movff	?___flmul,___flsub@a
  2281   000D38  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2282   000D3C  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2283   000D40  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2284   000D44  EC1A  F017         	call	___flsub	;wreg free
  2285   000D48  C01A  F0D6         	movff	?___flsub,efgtoa@h
  2286   000D4C  C01B  F0D7         	movff	?___flsub+1,efgtoa@h+1
  2287   000D50  C01C  F0D8         	movff	?___flsub+2,efgtoa@h+2
  2288   000D54  C01D  F0D9         	movff	?___flsub+3,efgtoa@h+3
  2289   000D58                     
  2290                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  2291   000D58  C0E5  F01A         	movff	efgtoa@u,___fldiv@b
  2292   000D5C  C0E6  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  2293   000D60  C0E7  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  2294   000D64  C0E8  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  2295   000D68  0E00               	movlw	0
  2296   000D6A  6E1E               	movwf	___fldiv@a^0,c
  2297   000D6C  0E00               	movlw	0
  2298   000D6E  6E1F               	movwf	(___fldiv@a+1)^0,c
  2299   000D70  0E20               	movlw	32
  2300   000D72  6E20               	movwf	(___fldiv@a+2)^0,c
  2301   000D74  0E41               	movlw	65
  2302   000D76  6E21               	movwf	(___fldiv@a+3)^0,c
  2303   000D78  EC9B  F00D         	call	___fldiv	;wreg free
  2304   000D7C  C01A  F0E5         	movff	?___fldiv,efgtoa@u
  2305   000D80  C01B  F0E6         	movff	?___fldiv+1,efgtoa@u+1
  2306   000D84  C01C  F0E7         	movff	?___fldiv+2,efgtoa@u+2
  2307   000D88  C01D  F0E8         	movff	?___fldiv+3,efgtoa@u+3
  2308   000D8C                     
  2309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  2310   000D8C  0100               	movlb	0	; () banked
  2311   000D8E  4BD4               	infsnz	efgtoa@i& (0+255),f,b
  2312   000D90  2BD5               	incf	(efgtoa@i+1)& (0+255),f,b
  2313   000D92                     l2972:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2317   000D92  51CA               	movf	efgtoa@m& (0+255),w,b
  2318   000D94  5DD4               	subwf	efgtoa@i& (0+255),w,b
  2319   000D96  51D5               	movf	(efgtoa@i+1)& (0+255),w,b
  2320   000D98  0A80               	xorlw	128
  2321   000D9A  6E4E               	movwf	??_efgtoa^0,c
  2322   000D9C  51CB               	movf	(efgtoa@m+1)& (0+255),w,b
  2323   000D9E  0A80               	xorlw	128
  2324   000DA0  584E               	subwfb	??_efgtoa^0,w,c
  2325   000DA2  A0D8               	btfss	status,0,c
  2326   000DA4  EFD6  F006         	goto	u3211
  2327   000DA8  EFD8  F006         	goto	u3210
  2328   000DAC                     u3211:
  2329   000DAC  EF4E  F006         	goto	l2964
  2330   000DB0                     u3210:
  2331   000DB0                     
  2332                           ; BSR set to: 0
  2333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  2334   000DB0  C0E5  F001         	movff	efgtoa@u,___flmul@b
  2335   000DB4  C0E6  F002         	movff	efgtoa@u+1,___flmul@b+1
  2336   000DB8  C0E7  F003         	movff	efgtoa@u+2,___flmul@b+2
  2337   000DBC  C0E8  F004         	movff	efgtoa@u+3,___flmul@b+3
  2338   000DC0  0E00               	movlw	0
  2339   000DC2  6E05               	movwf	___flmul@a^0,c
  2340   000DC4  0E00               	movlw	0
  2341   000DC6  6E06               	movwf	(___flmul@a+1)^0,c
  2342   000DC8  0EA0               	movlw	160
  2343   000DCA  6E07               	movwf	(___flmul@a+2)^0,c
  2344   000DCC  0E40               	movlw	64
  2345   000DCE  6E08               	movwf	(___flmul@a+3)^0,c
  2346   000DD0  EC86  F00B         	call	___flmul	;wreg free
  2347   000DD4  C001  F0DA         	movff	?___flmul,efgtoa@l
  2348   000DD8  C002  F0DB         	movff	?___flmul+1,efgtoa@l+1
  2349   000DDC  C003  F0DC         	movff	?___flmul+2,efgtoa@l+2
  2350   000DE0  C004  F0DD         	movff	?___flmul+3,efgtoa@l+3
  2351   000DE4                     
  2352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  2353   000DE4  C0D6  F01A         	movff	efgtoa@h,___flge@ff1
  2354   000DE8  C0D7  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2355   000DEC  C0D8  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2356   000DF0  C0D9  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2357   000DF4  C0DA  F01E         	movff	efgtoa@l,___flge@ff2
  2358   000DF8  C0DB  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  2359   000DFC  C0DC  F020         	movff	efgtoa@l+2,___flge@ff2+2
  2360   000E00  C0DD  F021         	movff	efgtoa@l+3,___flge@ff2+3
  2361   000E04  EC01  F013         	call	___flge	;wreg free
  2362   000E08  B0D8               	btfsc	status,0,c
  2363   000E0A  EF09  F007         	goto	u3221
  2364   000E0E  EF0B  F007         	goto	u3220
  2365   000E12                     u3221:
  2366   000E12  EF16  F007         	goto	l2980
  2367   000E16                     u3220:
  2368   000E16                     
  2369                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  2370   000E16  0E00               	movlw	0
  2371   000E18  0100               	movlb	0	; () banked
  2372   000E1A  6FDA               	movwf	efgtoa@l& (0+255),b
  2373   000E1C  0E00               	movlw	0
  2374   000E1E  6FDB               	movwf	(efgtoa@l+1)& (0+255),b
  2375   000E20  0E00               	movlw	0
  2376   000E22  6FDC               	movwf	(efgtoa@l+2)& (0+255),b
  2377   000E24  0E00               	movlw	0
  2378   000E26  6FDD               	movwf	(efgtoa@l+3)& (0+255),b
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  2381   000E28  EF3F  F007         	goto	l2986
  2382   000E2C                     l2980:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  2385   000E2C  C0D6  F001         	movff	efgtoa@h,___fleq@ff1
  2386   000E30  C0D7  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2387   000E34  C0D8  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2388   000E38  C0D9  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2389   000E3C  C0DA  F005         	movff	efgtoa@l,___fleq@ff2
  2390   000E40  C0DB  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2391   000E44  C0DC  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2392   000E48  C0DD  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2393   000E4C  ECCA  F014         	call	___fleq	;wreg free
  2394   000E50  A0D8               	btfss	status,0,c
  2395   000E52  EF2D  F007         	goto	u3231
  2396   000E56  EF2F  F007         	goto	u3230
  2397   000E5A                     u3231:
  2398   000E5A  EF3F  F007         	goto	l2986
  2399   000E5E                     u3230:
  2400   000E5E  0100               	movlb	0	; () banked
  2401   000E60  B1C8               	btfsc	efgtoa@d& (0+255),0,b
  2402   000E62  EF35  F007         	goto	u3241
  2403   000E66  EF37  F007         	goto	u3240
  2404   000E6A                     u3241:
  2405   000E6A  EF3F  F007         	goto	l2986
  2406   000E6E                     u3240:
  2407   000E6E                     
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  2410   000E6E  0E00               	movlw	0
  2411   000E70  6FDA               	movwf	efgtoa@l& (0+255),b
  2412   000E72  0E00               	movlw	0
  2413   000E74  6FDB               	movwf	(efgtoa@l+1)& (0+255),b
  2414   000E76  0E00               	movlw	0
  2415   000E78  6FDC               	movwf	(efgtoa@l+2)& (0+255),b
  2416   000E7A  0E00               	movlw	0
  2417   000E7C  6FDD               	movwf	(efgtoa@l+3)& (0+255),b
  2418   000E7E                     l2986:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  2421   000E7E  C0E1  F001         	movff	efgtoa@g,___fladd@b
  2422   000E82  C0E2  F002         	movff	efgtoa@g+1,___fladd@b+1
  2423   000E86  C0E3  F003         	movff	efgtoa@g+2,___fladd@b+2
  2424   000E8A  C0E4  F004         	movff	efgtoa@g+3,___fladd@b+3
  2425   000E8E  C0DA  F005         	movff	efgtoa@l,___fladd@a
  2426   000E92  C0DB  F006         	movff	efgtoa@l+1,___fladd@a+1
  2427   000E96  C0DC  F007         	movff	efgtoa@l+2,___fladd@a+2
  2428   000E9A  C0DD  F008         	movff	efgtoa@l+3,___fladd@a+3
  2429   000E9E  EC26  F009         	call	___fladd	;wreg free
  2430   000EA2  C001  F0D6         	movff	?___fladd,efgtoa@h
  2431   000EA6  C002  F0D7         	movff	?___fladd+1,efgtoa@h+1
  2432   000EAA  C003  F0D8         	movff	?___fladd+2,efgtoa@h+2
  2433   000EAE  C004  F0D9         	movff	?___fladd+3,efgtoa@h+3
  2434   000EB2                     
  2435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  2436   000EB2  C0D6  F01A         	movff	efgtoa@h,___flge@ff1
  2437   000EB6  C0D7  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2438   000EBA  C0D8  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2439   000EBE  C0D9  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2440   000EC2  0E00               	movlw	0
  2441   000EC4  6E05               	movwf	___flmul@a^0,c
  2442   000EC6  0E00               	movlw	0
  2443   000EC8  6E06               	movwf	(___flmul@a+1)^0,c
  2444   000ECA  0E20               	movlw	32
  2445   000ECC  6E07               	movwf	(___flmul@a+2)^0,c
  2446   000ECE  0E41               	movlw	65
  2447   000ED0  6E08               	movwf	(___flmul@a+3)^0,c
  2448   000ED2  C0D0  F001         	movff	efgtoa@ou,___flmul@b
  2449   000ED6  C0D1  F002         	movff	efgtoa@ou+1,___flmul@b+1
  2450   000EDA  C0D2  F003         	movff	efgtoa@ou+2,___flmul@b+2
  2451   000EDE  C0D3  F004         	movff	efgtoa@ou+3,___flmul@b+3
  2452   000EE2  EC86  F00B         	call	___flmul	;wreg free
  2453   000EE6  C001  F01E         	movff	?___flmul,___flge@ff2
  2454   000EEA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2455   000EEE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2456   000EF2  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2457   000EF6  EC01  F013         	call	___flge	;wreg free
  2458   000EFA  A0D8               	btfss	status,0,c
  2459   000EFC  EF82  F007         	goto	u3251
  2460   000F00  EF84  F007         	goto	u3250
  2461   000F04                     u3251:
  2462   000F04  EFAD  F007         	goto	l2998
  2463   000F08                     u3250:
  2464   000F08                     
  2465                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  2466   000F08  0100               	movlb	0	; () banked
  2467   000F0A  4BCC               	infsnz	efgtoa@e& (0+255),f,b
  2468   000F0C  2BCD               	incf	(efgtoa@e+1)& (0+255),f,b
  2469   000F0E                     
  2470                           ; BSR set to: 0
  2471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  2472   000F0E  C0D0  F001         	movff	efgtoa@ou,___flmul@b
  2473   000F12  C0D1  F002         	movff	efgtoa@ou+1,___flmul@b+1
  2474   000F16  C0D2  F003         	movff	efgtoa@ou+2,___flmul@b+2
  2475   000F1A  C0D3  F004         	movff	efgtoa@ou+3,___flmul@b+3
  2476   000F1E  0E00               	movlw	0
  2477   000F20  6E05               	movwf	___flmul@a^0,c
  2478   000F22  0E00               	movlw	0
  2479   000F24  6E06               	movwf	(___flmul@a+1)^0,c
  2480   000F26  0E20               	movlw	32
  2481   000F28  6E07               	movwf	(___flmul@a+2)^0,c
  2482   000F2A  0E41               	movlw	65
  2483   000F2C  6E08               	movwf	(___flmul@a+3)^0,c
  2484   000F2E  EC86  F00B         	call	___flmul	;wreg free
  2485   000F32  C001  F0D0         	movff	?___flmul,efgtoa@ou
  2486   000F36  C002  F0D1         	movff	?___flmul+1,efgtoa@ou+1
  2487   000F3A  C003  F0D2         	movff	?___flmul+2,efgtoa@ou+2
  2488   000F3E  C004  F0D3         	movff	?___flmul+3,efgtoa@ou+3
  2489   000F42                     
  2490                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  2491   000F42  0E66               	movlw	102
  2492   000F44  0100               	movlb	0	; () banked
  2493   000F46  19C7               	xorwf	efgtoa@nmode& (0+255),w,b
  2494   000F48  A4D8               	btfss	status,2,c
  2495   000F4A  EFA9  F007         	goto	u3261
  2496   000F4E  EFAB  F007         	goto	u3260
  2497   000F52                     u3261:
  2498   000F52  EFAD  F007         	goto	l2998
  2499   000F56                     u3260:
  2500   000F56                     
  2501                           ; BSR set to: 0
  2502                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  2503   000F56  4BCA               	infsnz	efgtoa@m& (0+255),f,b
  2504   000F58  2BCB               	incf	(efgtoa@m+1)& (0+255),f,b
  2505   000F5A                     l2998:
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  2508   000F5A  C0D0  F0E5         	movff	efgtoa@ou,efgtoa@u
  2509   000F5E  C0D1  F0E6         	movff	efgtoa@ou+1,efgtoa@u+1
  2510   000F62  C0D2  F0E7         	movff	efgtoa@ou+2,efgtoa@u+2
  2511   000F66  C0D3  F0E8         	movff	efgtoa@ou+3,efgtoa@u+3
  2512   000F6A                     
  2513                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  2514   000F6A  C0CC  F0BD         	movff	efgtoa@e,efgtoa@ne
  2515   000F6E  C0CD  F0BE         	movff	efgtoa@e+1,efgtoa@ne+1
  2516   000F72                     
  2517                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  2518   000F72  0E00               	movlw	0
  2519   000F74  0100               	movlb	0	; () banked
  2520   000F76  6FC5               	movwf	efgtoa@pp& (0+255),b
  2521   000F78                     
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  2524   000F78  0E00               	movlw	0
  2525   000F7A  6FC2               	movwf	(efgtoa@t+1)& (0+255),b
  2526   000F7C  0E00               	movlw	0
  2527   000F7E  6FC1               	movwf	efgtoa@t& (0+255),b
  2528   000F80                     
  2529                           ; BSR set to: 0
  2530                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  2531   000F80  0E00               	movlw	0
  2532   000F82  6FD5               	movwf	(efgtoa@i+1)& (0+255),b
  2533   000F84  0E00               	movlw	0
  2534   000F86  6FD4               	movwf	efgtoa@i& (0+255),b
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2537   000F88  EFAB  F008         	goto	l3048
  2538   000F8C                     l3008:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  2542   000F8C  C0D6  F01A         	movff	efgtoa@h,___fldiv@b
  2543   000F90  C0D7  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  2544   000F94  C0D8  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  2545   000F98  C0D9  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  2546   000F9C  C0E5  F01E         	movff	efgtoa@u,___fldiv@a
  2547   000FA0  C0E6  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  2548   000FA4  C0E7  F020         	movff	efgtoa@u+2,___fldiv@a+2
  2549   000FA8  C0E8  F021         	movff	efgtoa@u+3,___fldiv@a+3
  2550   000FAC  EC9B  F00D         	call	___fldiv	;wreg free
  2551   000FB0  C01A  F033         	movff	?___fldiv,floorf@x
  2552   000FB4  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  2553   000FB8  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  2554   000FBC  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  2555   000FC0  EC9B  F010         	call	_floorf	;wreg free
  2556   000FC4  C033  F0DA         	movff	?_floorf,efgtoa@l
  2557   000FC8  C034  F0DB         	movff	?_floorf+1,efgtoa@l+1
  2558   000FCC  C035  F0DC         	movff	?_floorf+2,efgtoa@l+2
  2559   000FD0  C036  F0DD         	movff	?_floorf+3,efgtoa@l+3
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2562   000FD4  C0DA  F001         	movff	efgtoa@l,___fltol@f1
  2563   000FD8  C0DB  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2564   000FDC  C0DC  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2565   000FE0  C0DD  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2566   000FE4  EC7E  F012         	call	___fltol	;wreg free
  2567   000FE8  BE02               	btfsc	(?___fltol+1)^0,7,c
  2568   000FEA  EF02  F008         	goto	u3270
  2569   000FEE  5002               	movf	(?___fltol+1)^0,w,c
  2570   000FF0  E107               	bnz	u3271
  2571   000FF2  0E0A               	movlw	10
  2572   000FF4  5C01               	subwf	?___fltol^0,w,c
  2573   000FF6  B0D8               	btfsc	status,0,c
  2574   000FF8  EF00  F008         	goto	u3271
  2575   000FFC  EF02  F008         	goto	u3270
  2576   001000                     u3271:
  2577   001000  EF12  F008         	goto	l3012
  2578   001004                     u3270:
  2579   001004  C0DA  F001         	movff	efgtoa@l,___fltol@f1
  2580   001008  C0DB  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2581   00100C  C0DC  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2582   001010  C0DD  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2583   001014  EC7E  F012         	call	___fltol	;wreg free
  2584   001018  C001  F0C8         	movff	?___fltol,efgtoa@d
  2585   00101C  C002  F0C9         	movff	?___fltol+1,efgtoa@d+1
  2586   001020  EF17  F008         	goto	l836
  2587   001024                     l3012:
  2588   001024  0E00               	movlw	0
  2589   001026  0100               	movlb	0	; () banked
  2590   001028  6FC9               	movwf	(efgtoa@d+1)& (0+255),b
  2591   00102A  0E09               	movlw	9
  2592   00102C  6FC8               	movwf	efgtoa@d& (0+255),b
  2593   00102E                     l836:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  2596   00102E  0100               	movlb	0	; () banked
  2597   001030  51C5               	movf	efgtoa@pp& (0+255),w,b
  2598   001032  A4D8               	btfss	status,2,c
  2599   001034  EF1E  F008         	goto	u3281
  2600   001038  EF20  F008         	goto	u3280
  2601   00103C                     u3281:
  2602   00103C  EF48  F008         	goto	l3032
  2603   001040                     u3280:
  2604   001040                     
  2605                           ; BSR set to: 0
  2606   001040  BFBE               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2607   001042  EF27  F008         	goto	u3290
  2608   001046  EF25  F008         	goto	u3291
  2609   00104A                     u3291:
  2610   00104A  EF48  F008         	goto	l3032
  2611   00104E                     u3290:
  2612   00104E                     
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  2615   00104E  0E6D               	movlw	low _dbuf
  2616   001050  25DF               	addwf	efgtoa@n& (0+255),w,b
  2617   001052  6ED9               	movwf	fsr2l,c
  2618   001054  0E00               	movlw	high _dbuf
  2619   001056  21E0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2620   001058  6EDA               	movwf	fsr2h,c
  2621   00105A  0E2E               	movlw	46
  2622   00105C  6EDF               	movwf	indf2,c
  2623   00105E                     
  2624                           ; BSR set to: 0
  2625   00105E  4BDF               	infsnz	efgtoa@n& (0+255),f,b
  2626   001060  2BE0               	incf	(efgtoa@n+1)& (0+255),f,b
  2627   001062                     
  2628                           ; BSR set to: 0
  2629                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  2630   001062  07CE               	decf	efgtoa@w& (0+255),f,b
  2631   001064  A0D8               	btfss	status,0,c
  2632   001066  07CF               	decf	(efgtoa@w+1)& (0+255),f,b
  2633   001068                     
  2634                           ; BSR set to: 0
  2635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  2636   001068  0E01               	movlw	1
  2637   00106A  6FC5               	movwf	efgtoa@pp& (0+255),b
  2638   00106C  EF48  F008         	goto	l3032
  2639   001070                     l3024:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  2643   001070  0E6D               	movlw	low _dbuf
  2644   001072  25DF               	addwf	efgtoa@n& (0+255),w,b
  2645   001074  6ED9               	movwf	fsr2l,c
  2646   001076  0E00               	movlw	high _dbuf
  2647   001078  21E0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2648   00107A  6EDA               	movwf	fsr2h,c
  2649   00107C  0E30               	movlw	48
  2650   00107E  6EDF               	movwf	indf2,c
  2651   001080                     
  2652                           ; BSR set to: 0
  2653   001080  4BDF               	infsnz	efgtoa@n& (0+255),f,b
  2654   001082  2BE0               	incf	(efgtoa@n+1)& (0+255),f,b
  2655   001084                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  2658   001084  07CE               	decf	efgtoa@w& (0+255),f,b
  2659   001086  A0D8               	btfss	status,0,c
  2660   001088  07CF               	decf	(efgtoa@w+1)& (0+255),f,b
  2661   00108A                     
  2662                           ; BSR set to: 0
  2663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  2664   00108A  07C1               	decf	efgtoa@t& (0+255),f,b
  2665   00108C  A0D8               	btfss	status,0,c
  2666   00108E  07C2               	decf	(efgtoa@t+1)& (0+255),f,b
  2667   001090                     l3032:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  2671   001090  51C1               	movf	efgtoa@t& (0+255),w,b
  2672   001092  11C2               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2673   001094  A4D8               	btfss	status,2,c
  2674   001096  EF4F  F008         	goto	u3301
  2675   00109A  EF51  F008         	goto	u3300
  2676   00109E                     u3301:
  2677   00109E  EF38  F008         	goto	l3024
  2678   0010A2                     u3300:
  2679   0010A2                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2682   0010A2  0E6D               	movlw	low _dbuf
  2683   0010A4  25DF               	addwf	efgtoa@n& (0+255),w,b
  2684   0010A6  6ED9               	movwf	fsr2l,c
  2685   0010A8  0E00               	movlw	high _dbuf
  2686   0010AA  21E0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2687   0010AC  6EDA               	movwf	fsr2h,c
  2688   0010AE  51C8               	movf	efgtoa@d& (0+255),w,b
  2689   0010B0  0F30               	addlw	48
  2690   0010B2  6EDF               	movwf	indf2,c
  2691   0010B4                     
  2692                           ; BSR set to: 0
  2693   0010B4  4BDF               	infsnz	efgtoa@n& (0+255),f,b
  2694   0010B6  2BE0               	incf	(efgtoa@n+1)& (0+255),f,b
  2695   0010B8                     
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  2698   0010B8  07CE               	decf	efgtoa@w& (0+255),f,b
  2699   0010BA  A0D8               	btfss	status,0,c
  2700   0010BC  07CF               	decf	(efgtoa@w+1)& (0+255),f,b
  2701   0010BE                     
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  2704   0010BE  C0D6  F01A         	movff	efgtoa@h,___flsub@b
  2705   0010C2  C0D7  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2706   0010C6  C0D8  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2707   0010CA  C0D9  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2708   0010CE  C0DA  F005         	movff	efgtoa@l,___flmul@a
  2709   0010D2  C0DB  F006         	movff	efgtoa@l+1,___flmul@a+1
  2710   0010D6  C0DC  F007         	movff	efgtoa@l+2,___flmul@a+2
  2711   0010DA  C0DD  F008         	movff	efgtoa@l+3,___flmul@a+3
  2712   0010DE  C0E5  F001         	movff	efgtoa@u,___flmul@b
  2713   0010E2  C0E6  F002         	movff	efgtoa@u+1,___flmul@b+1
  2714   0010E6  C0E7  F003         	movff	efgtoa@u+2,___flmul@b+2
  2715   0010EA  C0E8  F004         	movff	efgtoa@u+3,___flmul@b+3
  2716   0010EE  EC86  F00B         	call	___flmul	;wreg free
  2717   0010F2  C001  F01E         	movff	?___flmul,___flsub@a
  2718   0010F6  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2719   0010FA  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2720   0010FE  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2721   001102  EC1A  F017         	call	___flsub	;wreg free
  2722   001106  C01A  F0D6         	movff	?___flsub,efgtoa@h
  2723   00110A  C01B  F0D7         	movff	?___flsub+1,efgtoa@h+1
  2724   00110E  C01C  F0D8         	movff	?___flsub+2,efgtoa@h+2
  2725   001112  C01D  F0D9         	movff	?___flsub+3,efgtoa@h+3
  2726   001116                     
  2727                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  2728   001116  C0E5  F01A         	movff	efgtoa@u,___fldiv@b
  2729   00111A  C0E6  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  2730   00111E  C0E7  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  2731   001122  C0E8  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  2732   001126  0E00               	movlw	0
  2733   001128  6E1E               	movwf	___fldiv@a^0,c
  2734   00112A  0E00               	movlw	0
  2735   00112C  6E1F               	movwf	(___fldiv@a+1)^0,c
  2736   00112E  0E20               	movlw	32
  2737   001130  6E20               	movwf	(___fldiv@a+2)^0,c
  2738   001132  0E41               	movlw	65
  2739   001134  6E21               	movwf	(___fldiv@a+3)^0,c
  2740   001136  EC9B  F00D         	call	___fldiv	;wreg free
  2741   00113A  C01A  F0E5         	movff	?___fldiv,efgtoa@u
  2742   00113E  C01B  F0E6         	movff	?___fldiv+1,efgtoa@u+1
  2743   001142  C01C  F0E7         	movff	?___fldiv+2,efgtoa@u+2
  2744   001146  C01D  F0E8         	movff	?___fldiv+3,efgtoa@u+3
  2745   00114A                     
  2746                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  2747   00114A  0100               	movlb	0	; () banked
  2748   00114C  07BD               	decf	efgtoa@ne& (0+255),f,b
  2749   00114E  A0D8               	btfss	status,0,c
  2750   001150  07BE               	decf	(efgtoa@ne+1)& (0+255),f,b
  2751   001152                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  2754   001152  4BD4               	infsnz	efgtoa@i& (0+255),f,b
  2755   001154  2BD5               	incf	(efgtoa@i+1)& (0+255),f,b
  2756   001156                     l3048:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2760   001156  51CA               	movf	efgtoa@m& (0+255),w,b
  2761   001158  5DD4               	subwf	efgtoa@i& (0+255),w,b
  2762   00115A  51D5               	movf	(efgtoa@i+1)& (0+255),w,b
  2763   00115C  0A80               	xorlw	128
  2764   00115E  6E4E               	movwf	??_efgtoa^0,c
  2765   001160  51CB               	movf	(efgtoa@m+1)& (0+255),w,b
  2766   001162  0A80               	xorlw	128
  2767   001164  584E               	subwfb	??_efgtoa^0,w,c
  2768   001166  B0D8               	btfsc	status,0,c
  2769   001168  EFB8  F008         	goto	u3311
  2770   00116C  EFBA  F008         	goto	u3310
  2771   001170                     u3311:
  2772   001170  EFC8  F008         	goto	l3052
  2773   001174                     u3310:
  2774   001174                     
  2775                           ; BSR set to: 0
  2776   001174  BFE0               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2777   001176  EFC6  F008         	goto	u3321
  2778   00117A  51E0               	movf	(efgtoa@n+1)& (0+255),w,b
  2779   00117C  E109               	bnz	u3320
  2780   00117E  0E4B               	movlw	75
  2781   001180  5DDF               	subwf	efgtoa@n& (0+255),w,b
  2782   001182  A0D8               	btfss	status,0,c
  2783   001184  EFC6  F008         	goto	u3321
  2784   001188  EFC8  F008         	goto	u3320
  2785   00118C                     u3321:
  2786   00118C  EFC6  F007         	goto	l3008
  2787   001190                     u3320:
  2788   001190                     l3052:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  2792   001190  0E00               	movlw	0
  2793   001192  6FD5               	movwf	(efgtoa@i+1)& (0+255),b
  2794   001194  0E4F               	movlw	79
  2795   001196  6FD4               	movwf	efgtoa@i& (0+255),b
  2796   001198                     
  2797                           ; BSR set to: 0
  2798                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  2799   001198  0E6D               	movlw	low _dbuf
  2800   00119A  25D4               	addwf	efgtoa@i& (0+255),w,b
  2801   00119C  6ED9               	movwf	fsr2l,c
  2802   00119E  0E00               	movlw	high _dbuf
  2803   0011A0  21D5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2804   0011A2  6EDA               	movwf	fsr2h,c
  2805   0011A4  6ADF               	clrf	indf2,c
  2806   0011A6                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2809   0011A6  0E6D               	movlw	low _dbuf
  2810   0011A8  6E4E               	movwf	??_efgtoa^0,c
  2811   0011AA  0E00               	movlw	high _dbuf
  2812   0011AC  6E4F               	movwf	(??_efgtoa+1)^0,c
  2813   0011AE  51DF               	movf	efgtoa@n& (0+255),w,b
  2814   0011B0  5E4E               	subwf	??_efgtoa^0,f,c
  2815   0011B2  51E0               	movf	(efgtoa@n+1)& (0+255),w,b
  2816   0011B4  5A4F               	subwfb	(??_efgtoa+1)^0,f,c
  2817   0011B6  51D4               	movf	efgtoa@i& (0+255),w,b
  2818   0011B8  244E               	addwf	??_efgtoa^0,w,c
  2819   0011BA  6E01               	movwf	memcpy@d1^0,c
  2820   0011BC  51D5               	movf	(efgtoa@i+1)& (0+255),w,b
  2821   0011BE  204F               	addwfc	(??_efgtoa+1)^0,w,c
  2822   0011C0  6E02               	movwf	(memcpy@d1+1)^0,c
  2823   0011C2  0E6D               	movlw	low _dbuf
  2824   0011C4  6E03               	movwf	memcpy@s1^0,c
  2825   0011C6  0E00               	movlw	high _dbuf
  2826   0011C8  6E04               	movwf	(memcpy@s1+1)^0,c
  2827   0011CA  C0DF  F005         	movff	efgtoa@n,memcpy@n
  2828   0011CE  C0E0  F006         	movff	efgtoa@n+1,memcpy@n+1
  2829   0011D2  ECF2  F016         	call	_memcpy	;wreg free
  2830   0011D6                     
  2831                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  2832   0011D6  0100               	movlb	0	; () banked
  2833   0011D8  51DF               	movf	efgtoa@n& (0+255),w,b
  2834   0011DA  5DD4               	subwf	efgtoa@i& (0+255),w,b
  2835   0011DC  6FDF               	movwf	efgtoa@n& (0+255),b
  2836   0011DE  51E0               	movf	(efgtoa@n+1)& (0+255),w,b
  2837   0011E0  59D5               	subwfb	(efgtoa@i+1)& (0+255),w,b
  2838   0011E2  6FE0               	movwf	(efgtoa@n+1)& (0+255),b
  2839   0011E4                     
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  2842   0011E4  51DE               	movf	efgtoa@sign& (0+255),w,b
  2843   0011E6  A4D8               	btfss	status,2,c
  2844   0011E8  EFF8  F008         	goto	u3331
  2845   0011EC  EFFB  F008         	goto	u3330
  2846   0011F0                     u3331:
  2847   0011F0  0E01               	movlw	1
  2848   0011F2  EFFC  F008         	goto	u3340
  2849   0011F6                     u3330:
  2850   0011F6  0E00               	movlw	0
  2851   0011F8                     u3340:
  2852   0011F8  6FD4               	movwf	efgtoa@i& (0+255),b
  2853   0011FA  6BD5               	clrf	(efgtoa@i+1)& (0+255),b
  2854   0011FC                     
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  2857   0011FC  51DE               	movf	efgtoa@sign& (0+255),w,b
  2858   0011FE  B4D8               	btfsc	status,2,c
  2859   001200  EF04  F009         	goto	u3351
  2860   001204  EF06  F009         	goto	u3350
  2861   001208                     u3351:
  2862   001208  EF11  F009         	goto	l3066
  2863   00120C                     u3350:
  2864   00120C                     
  2865                           ; BSR set to: 0
  2866                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  2867   00120C  07DF               	decf	efgtoa@n& (0+255),f,b
  2868   00120E  A0D8               	btfss	status,0,c
  2869   001210  07E0               	decf	(efgtoa@n+1)& (0+255),f,b
  2870   001212  0E6D               	movlw	low _dbuf
  2871   001214  25DF               	addwf	efgtoa@n& (0+255),w,b
  2872   001216  6ED9               	movwf	fsr2l,c
  2873   001218  0E00               	movlw	high _dbuf
  2874   00121A  21E0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2875   00121C  6EDA               	movwf	fsr2h,c
  2876   00121E  C0DE  FFDF         	movff	efgtoa@sign,indf2
  2877   001222                     l3066:
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  2881   001222  51D4               	movf	efgtoa@i& (0+255),w,b
  2882   001224  5FCE               	subwf	efgtoa@w& (0+255),f,b
  2883   001226  51D5               	movf	(efgtoa@i+1)& (0+255),w,b
  2884   001228  5BCF               	subwfb	(efgtoa@w+1)& (0+255),f,b
  2885   00122A                     
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  2888   00122A  C047  F017         	movff	efgtoa@fp,pad@fp
  2889   00122E  C048  F018         	movff	efgtoa@fp+1,pad@fp+1
  2890   001232  0E6D               	movlw	low _dbuf
  2891   001234  25DF               	addwf	efgtoa@n& (0+255),w,b
  2892   001236  6E19               	movwf	pad@buf^0,c
  2893   001238  0E00               	movlw	high _dbuf
  2894   00123A  21E0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2895   00123C  6E1A               	movwf	(pad@buf+1)^0,c
  2896   00123E  C0CE  F01B         	movff	efgtoa@w,pad@p
  2897   001242  C0CF  F01C         	movff	efgtoa@w+1,pad@p+1
  2898   001246  ECF5  F015         	call	_pad	;wreg free
  2899   00124A                     l803:
  2900   00124A  0012               	return		;funcret
  2901   00124C                     __end_of_efgtoa:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _strcpy *****************
  2905 ;; Defined at:
  2906 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  dest            2    0[COMRAM] PTR unsigned char 
  2909 ;;		 -> dbuf(80), 
  2910 ;;  src             2    2[COMRAM] PTR const unsigned char 
  2911 ;;		 -> STR_6(4), STR_3(4), 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  d               2    6[COMRAM] PTR unsigned char 
  2914 ;;		 -> dbuf(80), 
  2915 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2916 ;;		 -> STR_6(4), STR_3(4), 
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  2    0[COMRAM] PTR unsigned char 
  2919 ;; Registers used:
  2920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2926 ;;      Params:         4       0       0       0       0       0       0       0       0
  2927 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2929 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2930 ;;Total ram usage:        8 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_efgtoa
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text7
  2940   002F00                     __ptext7:
  2941                           	callstack 0
  2942   002F00                     _strcpy:
  2943                           	callstack 26
  2944   002F00  C003  F005         	movff	strcpy@src,strcpy@s
  2945   002F04  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  2946   002F08  C001  F007         	movff	strcpy@dest,strcpy@d
  2947   002F0C  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  2948   002F10                     l2804:
  2949   002F10  C005  FFF6         	movff	strcpy@s,tblptrl
  2950   002F14  C006  FFF7         	movff	strcpy@s+1,tblptrh
  2951   002F18  4A05               	infsnz	strcpy@s^0,f,c
  2952   002F1A  2A06               	incf	(strcpy@s+1)^0,f,c
  2953   002F1C                     	if	0	;tblptru may be non-zero
  2954   002F1C                     	endif
  2955   002F1C                     	if	0	;tblptru may be non-zero
  2956   002F1C                     	endif
  2957   002F1C  C007  FFD9         	movff	strcpy@d,fsr2l
  2958   002F20  C008  FFDA         	movff	strcpy@d+1,fsr2h
  2959   002F24  4A07               	infsnz	strcpy@d^0,f,c
  2960   002F26  2A08               	incf	(strcpy@d+1)^0,f,c
  2961   002F28  0008               	tblrd		*
  2962   002F2A  CFF5 FFDF          	movff	tablat,indf2
  2963   002F2E  50DF               	movf	indf2,w,c
  2964   002F30  A4D8               	btfss	status,2,c
  2965   002F32  EF9D  F017         	goto	u2911
  2966   002F36  EF9F  F017         	goto	u2910
  2967   002F3A                     u2911:
  2968   002F3A  EF88  F017         	goto	l2804
  2969   002F3E                     u2910:
  2970   002F3E  0012               	return		;funcret
  2971   002F40                     __end_of_strcpy:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _pad *****************
  2975 ;; Defined at:
  2976 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  2979 ;;		 -> NULL(0), 
  2980 ;;  buf             2   24[COMRAM] PTR unsigned char 
  2981 ;;		 -> dbuf(80), 
  2982 ;;  p               2   26[COMRAM] int 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  w               2   31[COMRAM] int 
  2985 ;;  i               2   29[COMRAM] int 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2995 ;;      Params:         6       0       0       0       0       0       0       0       0
  2996 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2997 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2998 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2999 ;;Total ram usage:       11 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 6
  3002 ;; This function calls:
  3003 ;;		_fputc
  3004 ;;		_fputs
  3005 ;; This function is called by:
  3006 ;;		_efgtoa
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text8
  3011   002BEA                     __ptext8:
  3012                           	callstack 0
  3013   002BEA                     _pad:
  3014                           	callstack 20
  3015   002BEA                     
  3016                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3017   002BEA  BE1C               	btfsc	(pad@p+1)^0,7,c
  3018   002BEC  EFFA  F015         	goto	u2821
  3019   002BF0  EFFC  F015         	goto	u2820
  3020   002BF4                     u2821:
  3021   002BF4  EF02  F016         	goto	l2770
  3022   002BF8                     u2820:
  3023   002BF8  C01B  F020         	movff	pad@p,pad@w
  3024   002BFC  C01C  F021         	movff	pad@p+1,pad@w+1
  3025   002C00  EF06  F016         	goto	l788
  3026   002C04                     l2770:
  3027   002C04  0E00               	movlw	0
  3028   002C06  6E21               	movwf	(pad@w+1)^0,c
  3029   002C08  0E00               	movlw	0
  3030   002C0A  6E20               	movwf	pad@w^0,c
  3031   002C0C                     l788:
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3034   002C0C  0E00               	movlw	0
  3035   002C0E  6E1F               	movwf	(pad@i+1)^0,c
  3036   002C10  0E00               	movlw	0
  3037   002C12  6E1E               	movwf	pad@i^0,c
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3040   002C14  EF18  F016         	goto	l2776
  3041   002C18                     l2772:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3044   002C18  0E00               	movlw	0
  3045   002C1A  6E08               	movwf	(fputc@c+1)^0,c
  3046   002C1C  0E20               	movlw	32
  3047   002C1E  6E07               	movwf	fputc@c^0,c
  3048   002C20  C017  F009         	movff	pad@fp,fputc@fp
  3049   002C24  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  3050   002C28  EC02  F014         	call	_fputc	;wreg free
  3051   002C2C                     
  3052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3053   002C2C  4A1E               	infsnz	pad@i^0,f,c
  3054   002C2E  2A1F               	incf	(pad@i+1)^0,f,c
  3055   002C30                     l2776:
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3058   002C30  5020               	movf	pad@w^0,w,c
  3059   002C32  5C1E               	subwf	pad@i^0,w,c
  3060   002C34  501F               	movf	(pad@i+1)^0,w,c
  3061   002C36  0A80               	xorlw	128
  3062   002C38  6E1D               	movwf	??_pad^0,c
  3063   002C3A  5021               	movf	(pad@w+1)^0,w,c
  3064   002C3C  0A80               	xorlw	128
  3065   002C3E  581D               	subwfb	??_pad^0,w,c
  3066   002C40  A0D8               	btfss	status,0,c
  3067   002C42  EF25  F016         	goto	u2831
  3068   002C46  EF27  F016         	goto	u2830
  3069   002C4A                     u2831:
  3070   002C4A  EF0C  F016         	goto	l2772
  3071   002C4E                     u2830:
  3072   002C4E                     
  3073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3074   002C4E  C019  F010         	movff	pad@buf,fputs@s
  3075   002C52  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3076   002C56  C017  F012         	movff	pad@fp,fputs@fp
  3077   002C5A  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3078   002C5E  EC3D  F017         	call	_fputs	;wreg free
  3079   002C62  0012               	return		;funcret
  3080   002C64                     __end_of_pad:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _fputs *****************
  3084 ;; Defined at:
  3085 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  s               2   15[COMRAM] PTR const unsigned char 
  3088 ;;		 -> dbuf(80), 
  3089 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3090 ;;		 -> NULL(0), 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  i               2   20[COMRAM] int 
  3093 ;;  c               1   19[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2   15[COMRAM] int 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         4       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3106 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:        7 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 5
  3110 ;; This function calls:
  3111 ;;		_fputc
  3112 ;; This function is called by:
  3113 ;;		_pad
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text9
  3118   002E7A                     __ptext9:
  3119                           	callstack 0
  3120   002E7A                     _fputs:
  3121                           	callstack 20
  3122   002E7A  0E00               	movlw	0
  3123   002E7C  6E16               	movwf	(fputs@i+1)^0,c
  3124   002E7E  0E00               	movlw	0
  3125   002E80  6E15               	movwf	fputs@i^0,c
  3126   002E82  EF4E  F017         	goto	l2394
  3127   002E86                     l2390:
  3128   002E86  C014  F007         	movff	fputs@c,fputc@c
  3129   002E8A  6A08               	clrf	(fputc@c+1)^0,c
  3130   002E8C  C012  F009         	movff	fputs@fp,fputc@fp
  3131   002E90  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  3132   002E94  EC02  F014         	call	_fputc	;wreg free
  3133   002E98  4A15               	infsnz	fputs@i^0,f,c
  3134   002E9A  2A16               	incf	(fputs@i+1)^0,f,c
  3135   002E9C                     l2394:
  3136   002E9C  5015               	movf	fputs@i^0,w,c
  3137   002E9E  2410               	addwf	fputs@s^0,w,c
  3138   002EA0  6ED9               	movwf	fsr2l,c
  3139   002EA2  5016               	movf	(fputs@i+1)^0,w,c
  3140   002EA4  2011               	addwfc	(fputs@s+1)^0,w,c
  3141   002EA6  6EDA               	movwf	fsr2h,c
  3142   002EA8  50DF               	movf	indf2,w,c
  3143   002EAA  6E14               	movwf	fputs@c^0,c
  3144   002EAC  5014               	movf	fputs@c^0,w,c
  3145   002EAE  A4D8               	btfss	status,2,c
  3146   002EB0  EF5C  F017         	goto	u2231
  3147   002EB4  EF5E  F017         	goto	u2230
  3148   002EB8                     u2231:
  3149   002EB8  EF43  F017         	goto	l2390
  3150   002EBC                     u2230:
  3151   002EBC  0012               	return		;funcret
  3152   002EBE                     __end_of_fputs:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _fputc *****************
  3156 ;; Defined at:
  3157 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  c               2    6[COMRAM] int 
  3160 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  3161 ;;		 -> NULL(0), 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  2    6[COMRAM] int 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3173 ;;      Params:         4       0       0       0       0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3175 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3176 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3177 ;;Total ram usage:        9 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 4
  3180 ;; This function calls:
  3181 ;;		_putch
  3182 ;; This function is called by:
  3183 ;;		_pad
  3184 ;;		_vfpfcnvrt
  3185 ;;		_fputs
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text10
  3190   002804                     __ptext10:
  3191                           	callstack 0
  3192   002804                     _fputc:
  3193                           	callstack 23
  3194   002804  5009               	movf	fputc@fp^0,w,c
  3195   002806  100A               	iorwf	(fputc@fp+1)^0,w,c
  3196   002808  B4D8               	btfsc	status,2,c
  3197   00280A  EF09  F014         	goto	u1801
  3198   00280E  EF0B  F014         	goto	u1800
  3199   002812                     u1801:
  3200   002812  EF14  F014         	goto	l2176
  3201   002816                     u1800:
  3202   002816  5009               	movf	fputc@fp^0,w,c
  3203   002818  100A               	iorwf	(fputc@fp+1)^0,w,c
  3204   00281A  A4D8               	btfss	status,2,c
  3205   00281C  EF12  F014         	goto	u1811
  3206   002820  EF14  F014         	goto	u1810
  3207   002824                     u1811:
  3208   002824  EF19  F014         	goto	l2178
  3209   002828                     u1810:
  3210   002828                     l2176:
  3211   002828  5007               	movf	fputc@c^0,w,c
  3212   00282A  EC1A  F018         	call	_putch
  3213   00282E  EF66  F014         	goto	l928
  3214   002832                     l2178:
  3215   002832  EE20 F00A          	lfsr	2,10
  3216   002836  5009               	movf	fputc@fp^0,w,c
  3217   002838  26D9               	addwf	fsr2l,f,c
  3218   00283A  500A               	movf	(fputc@fp+1)^0,w,c
  3219   00283C  22DA               	addwfc	fsr2h,f,c
  3220   00283E  50DE               	movf	postinc2,w,c
  3221   002840  10DE               	iorwf	postinc2,w,c
  3222   002842  B4D8               	btfsc	status,2,c
  3223   002844  EF26  F014         	goto	u1821
  3224   002848  EF28  F014         	goto	u1820
  3225   00284C                     u1821:
  3226   00284C  EF43  F014         	goto	l2182
  3227   002850                     u1820:
  3228   002850  EE20 F00A          	lfsr	2,10
  3229   002854  5009               	movf	fputc@fp^0,w,c
  3230   002856  26D9               	addwf	fsr2l,f,c
  3231   002858  500A               	movf	(fputc@fp+1)^0,w,c
  3232   00285A  22DA               	addwfc	fsr2h,f,c
  3233   00285C  EE10 F003          	lfsr	1,3
  3234   002860  5009               	movf	fputc@fp^0,w,c
  3235   002862  26E1               	addwf	fsr1l,f,c
  3236   002864  500A               	movf	(fputc@fp+1)^0,w,c
  3237   002866  22E2               	addwfc	fsr1h,f,c
  3238   002868  50DE               	movf	postinc2,w,c
  3239   00286A  5CE6               	subwf	postinc1,w,c
  3240   00286C  50E6               	movf	postinc1,w,c
  3241   00286E  0A80               	xorlw	128
  3242   002870  6E0F               	movwf	(??_fputc+4)^0,c
  3243   002872  50DE               	movf	postinc2,w,c
  3244   002874  0A80               	xorlw	128
  3245   002876  580F               	subwfb	(??_fputc+4)^0,w,c
  3246   002878  B0D8               	btfsc	status,0,c
  3247   00287A  EF41  F014         	goto	u1831
  3248   00287E  EF43  F014         	goto	u1830
  3249   002882                     u1831:
  3250   002882  EF66  F014         	goto	l928
  3251   002886                     u1830:
  3252   002886                     l2182:
  3253   002886  EE20 F003          	lfsr	2,3
  3254   00288A  5009               	movf	fputc@fp^0,w,c
  3255   00288C  26D9               	addwf	fsr2l,f,c
  3256   00288E  500A               	movf	(fputc@fp+1)^0,w,c
  3257   002890  22DA               	addwfc	fsr2h,f,c
  3258   002892  CFDE F00B          	movff	postinc2,??_fputc
  3259   002896  CFDD F00C          	movff	postdec2,??_fputc+1
  3260   00289A  C009  FFD9         	movff	fputc@fp,fsr2l
  3261   00289E  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  3262   0028A2  CFDE F00D          	movff	postinc2,??_fputc+2
  3263   0028A6  CFDD F00E          	movff	postdec2,??_fputc+3
  3264   0028AA  500B               	movf	??_fputc^0,w,c
  3265   0028AC  240D               	addwf	(??_fputc+2)^0,w,c
  3266   0028AE  6ED9               	movwf	fsr2l,c
  3267   0028B0  500C               	movf	(??_fputc+1)^0,w,c
  3268   0028B2  200E               	addwfc	(??_fputc+3)^0,w,c
  3269   0028B4  6EDA               	movwf	fsr2h,c
  3270   0028B6  C007  FFDF         	movff	fputc@c,indf2
  3271   0028BA  EE20 F003          	lfsr	2,3
  3272   0028BE  5009               	movf	fputc@fp^0,w,c
  3273   0028C0  26D9               	addwf	fsr2l,f,c
  3274   0028C2  500A               	movf	(fputc@fp+1)^0,w,c
  3275   0028C4  22DA               	addwfc	fsr2h,f,c
  3276   0028C6  2ADE               	incf	postinc2,f,c
  3277   0028C8  0E00               	movlw	0
  3278   0028CA  22DD               	addwfc	postdec2,f,c
  3279   0028CC                     l928:
  3280   0028CC  0012               	return		;funcret
  3281   0028CE                     __end_of_fputc:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _putch *****************
  3285 ;; Defined at:
  3286 ;;		line 83 in file "Voltimetro.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  data            1    wreg     unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  data            1    5[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0
  3301 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3303 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3304 ;;Total ram usage:        1 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 3
  3307 ;; This function calls:
  3308 ;;		_escreve_lcd
  3309 ;; This function is called by:
  3310 ;;		_fputc
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           	psect	text11
  3315   003034                     __ptext11:
  3316                           	callstack 0
  3317   003034                     _putch:
  3318                           	callstack 23
  3319                           
  3320                           ;incstack = 0
  3321                           ;putch@data stored from wreg
  3322   003034  6E06               	movwf	putch@data^0,c
  3323   003036  5006               	movf	putch@data^0,w,c
  3324   003038  EC13  F018         	call	_escreve_lcd
  3325   00303C  0012               	return		;funcret
  3326   00303E                     __end_of_putch:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function _escreve_lcd *****************
  3330 ;; Defined at:
  3331 ;;		line 33 in file "lcd.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  c               1    wreg     unsigned char 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  c               1    4[COMRAM] unsigned char 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0
  3346 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3348 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3349 ;;Total ram usage:        1 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 2
  3352 ;; This function calls:
  3353 ;;		_envia_byte_lcd
  3354 ;; This function is called by:
  3355 ;;		_putch
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text12
  3360   003026                     __ptext12:
  3361                           	callstack 0
  3362   003026                     _escreve_lcd:
  3363                           	callstack 23
  3364                           
  3365                           ;incstack = 0
  3366                           ;escreve_lcd@c stored from wreg
  3367   003026  6E05               	movwf	escreve_lcd@c^0,c
  3368   003028  C005  F003         	movff	escreve_lcd@c,envia_byte_lcd@dado
  3369   00302C  0E01               	movlw	1
  3370   00302E  ECBC  F017         	call	_envia_byte_lcd
  3371   003032  0012               	return		;funcret
  3372   003034                     __end_of_escreve_lcd:
  3373                           	callstack 0
  3374                           
  3375 ;; *************** function _memcpy *****************
  3376 ;; Defined at:
  3377 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  d1              2    0[COMRAM] PTR void 
  3380 ;;		 -> dbuf(80), 
  3381 ;;  s1              2    2[COMRAM] PTR const void 
  3382 ;;		 -> dbuf(80), 
  3383 ;;  n               2    4[COMRAM] unsigned int 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3386 ;;		 -> dbuf(80), 
  3387 ;;  d               2    6[COMRAM] PTR unsigned char 
  3388 ;;		 -> dbuf(80), 
  3389 ;;  tmp             1   10[COMRAM] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  2    0[COMRAM] PTR void 
  3392 ;; Registers used:
  3393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3399 ;;      Params:         6       0       0       0       0       0       0       0       0
  3400 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3402 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3403 ;;Total ram usage:       11 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_efgtoa
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text13
  3413   002DE4                     __ptext13:
  3414                           	callstack 0
  3415   002DE4                     _memcpy:
  3416                           	callstack 26
  3417   002DE4  C003  F009         	movff	memcpy@s1,memcpy@s
  3418   002DE8  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3419   002DEC  C001  F007         	movff	memcpy@d1,memcpy@d
  3420   002DF0  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3421   002DF4  EF0C  F017         	goto	l2848
  3422   002DF8                     l2840:
  3423   002DF8  C009  FFD9         	movff	memcpy@s,fsr2l
  3424   002DFC  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3425   002E00  50DF               	movf	indf2,w,c
  3426   002E02  6E0B               	movwf	memcpy@tmp^0,c
  3427   002E04  4A09               	infsnz	memcpy@s^0,f,c
  3428   002E06  2A0A               	incf	(memcpy@s+1)^0,f,c
  3429   002E08  C007  FFD9         	movff	memcpy@d,fsr2l
  3430   002E0C  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3431   002E10  C00B  FFDF         	movff	memcpy@tmp,indf2
  3432   002E14  4A07               	infsnz	memcpy@d^0,f,c
  3433   002E16  2A08               	incf	(memcpy@d+1)^0,f,c
  3434   002E18                     l2848:
  3435   002E18  0605               	decf	memcpy@n^0,f,c
  3436   002E1A  A0D8               	btfss	status,0,c
  3437   002E1C  0606               	decf	(memcpy@n+1)^0,f,c
  3438   002E1E  2805               	incf	memcpy@n^0,w,c
  3439   002E20  E106               	bnz	u3031
  3440   002E22  2806               	incf	(memcpy@n+1)^0,w,c
  3441   002E24  A4D8               	btfss	status,2,c
  3442   002E26  EF17  F017         	goto	u3031
  3443   002E2A  EF19  F017         	goto	u3030
  3444   002E2E                     u3031:
  3445   002E2E  EFFC  F016         	goto	l2840
  3446   002E32                     u3030:
  3447   002E32  0012               	return		;funcret
  3448   002E34                     __end_of_memcpy:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _labs *****************
  3452 ;; Defined at:
  3453 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  a               4    0[COMRAM] long 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  4    0[COMRAM] long 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3467 ;;      Params:         4       0       0       0       0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3469 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3470 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3471 ;;Total ram usage:        8 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_efgtoa
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text14
  3481   002CDA                     __ptext14:
  3482                           	callstack 0
  3483   002CDA                     _labs:
  3484                           	callstack 26
  3485   002CDA  BE04               	btfsc	(labs@a+3)^0,7,c
  3486   002CDC  EF7C  F016         	goto	u2920
  3487   002CE0  5004               	movf	(labs@a+3)^0,w,c
  3488   002CE2  1003               	iorwf	(labs@a+2)^0,w,c
  3489   002CE4  1002               	iorwf	(labs@a+1)^0,w,c
  3490   002CE6  E106               	bnz	u2921
  3491   002CE8  0401               	decf	labs@a^0,w,c
  3492   002CEA  B0D8               	btfsc	status,0,c
  3493   002CEC  EF7A  F016         	goto	u2921
  3494   002CF0  EF7C  F016         	goto	u2920
  3495   002CF4                     u2921:
  3496   002CF4  EF97  F016         	goto	l907
  3497   002CF8                     u2920:
  3498   002CF8  C001  F005         	movff	labs@a,??_labs
  3499   002CFC  C002  F006         	movff	labs@a+1,??_labs+1
  3500   002D00  C003  F007         	movff	labs@a+2,??_labs+2
  3501   002D04  C004  F008         	movff	labs@a+3,??_labs+3
  3502   002D08  1E05               	comf	??_labs^0,f,c
  3503   002D0A  1E06               	comf	(??_labs+1)^0,f,c
  3504   002D0C  1E07               	comf	(??_labs+2)^0,f,c
  3505   002D0E  1E08               	comf	(??_labs+3)^0,f,c
  3506   002D10  2A05               	incf	??_labs^0,f,c
  3507   002D12  0E00               	movlw	0
  3508   002D14  2206               	addwfc	(??_labs+1)^0,f,c
  3509   002D16  2207               	addwfc	(??_labs+2)^0,f,c
  3510   002D18  2208               	addwfc	(??_labs+3)^0,f,c
  3511   002D1A  C005  F001         	movff	??_labs,?_labs
  3512   002D1E  C006  F002         	movff	??_labs+1,?_labs+1
  3513   002D22  C007  F003         	movff	??_labs+2,?_labs+2
  3514   002D26  C008  F004         	movff	??_labs+3,?_labs+3
  3515   002D2A  EF9F  F016         	goto	l910
  3516   002D2E                     l907:
  3517   002D2E  C001  F001         	movff	labs@a,?_labs
  3518   002D32  C002  F002         	movff	labs@a+1,?_labs+1
  3519   002D36  C003  F003         	movff	labs@a+2,?_labs+2
  3520   002D3A  C004  F004         	movff	labs@a+3,?_labs+3
  3521   002D3E                     l910:
  3522   002D3E  0012               	return		;funcret
  3523   002D40                     __end_of_labs:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _floorf *****************
  3527 ;; Defined at:
  3528 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  x               4   50[COMRAM] float 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  u               4   66[COMRAM] struct .
  3533 ;;  m               4   60[COMRAM] unsigned long 
  3534 ;;  e               2   64[COMRAM] int 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  4   50[COMRAM] float 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3544 ;;      Params:         4       0       0       0       0       0       0       0       0
  3545 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3546 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3547 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3548 ;;Total ram usage:       20 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_efgtoa
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text15
  3558   002136                     __ptext15:
  3559                           	callstack 0
  3560   002136                     _floorf:
  3561                           	callstack 26
  3562   002136  C060  F043         	movff	floorf@F526,floorf@u
  3563   00213A  C061  F044         	movff	floorf@F526+1,floorf@u+1
  3564   00213E  C062  F045         	movff	floorf@F526+2,floorf@u+2
  3565   002142  C063  F046         	movff	floorf@F526+3,floorf@u+3
  3566   002146  C033  F043         	movff	floorf@x,floorf@u
  3567   00214A  C034  F044         	movff	floorf@x+1,floorf@u+1
  3568   00214E  C035  F045         	movff	floorf@x+2,floorf@u+2
  3569   002152  C036  F046         	movff	floorf@x+3,floorf@u+3
  3570   002156  0E81               	movlw	129
  3571   002158  6E37               	movwf	??_floorf^0,c
  3572   00215A  0EFF               	movlw	255
  3573   00215C  6E38               	movwf	(??_floorf+1)^0,c
  3574   00215E  C043  F039         	movff	floorf@u,??_floorf+2
  3575   002162  C044  F03A         	movff	floorf@u+1,??_floorf+3
  3576   002166  C045  F03B         	movff	floorf@u+2,??_floorf+4
  3577   00216A  C046  F03C         	movff	floorf@u+3,??_floorf+5
  3578   00216E  0E18               	movlw	24
  3579   002170  EFBF  F010         	goto	u2930
  3580   002174                     u2935:
  3581   002174  90D8               	bcf	status,0,c
  3582   002176  323C               	rrcf	(??_floorf+5)^0,f,c
  3583   002178  323B               	rrcf	(??_floorf+4)^0,f,c
  3584   00217A  323A               	rrcf	(??_floorf+3)^0,f,c
  3585   00217C  3239               	rrcf	(??_floorf+2)^0,f,c
  3586   00217E                     u2930:
  3587   00217E  2EE8               	decfsz	wreg,f,c
  3588   002180  EFBA  F010         	goto	u2935
  3589   002184  5039               	movf	(??_floorf+2)^0,w,c
  3590   002186  2437               	addwf	??_floorf^0,w,c
  3591   002188  6E41               	movwf	floorf@e^0,c
  3592   00218A  0E00               	movlw	0
  3593   00218C  2038               	addwfc	(??_floorf+1)^0,w,c
  3594   00218E  6E42               	movwf	(floorf@e+1)^0,c
  3595   002190  BE42               	btfsc	(floorf@e+1)^0,7,c
  3596   002192  EFD4  F010         	goto	u2941
  3597   002196  5042               	movf	(floorf@e+1)^0,w,c
  3598   002198  E109               	bnz	u2940
  3599   00219A  0E17               	movlw	23
  3600   00219C  5C41               	subwf	floorf@e^0,w,c
  3601   00219E  A0D8               	btfss	status,0,c
  3602   0021A0  EFD4  F010         	goto	u2941
  3603   0021A4  EFD6  F010         	goto	u2940
  3604   0021A8                     u2941:
  3605   0021A8  EFE0  F010         	goto	l2816
  3606   0021AC                     u2940:
  3607   0021AC                     l2814:
  3608   0021AC  C033  F033         	movff	floorf@x,?_floorf
  3609   0021B0  C034  F034         	movff	floorf@x+1,?_floorf+1
  3610   0021B4  C035  F035         	movff	floorf@x+2,?_floorf+2
  3611   0021B8  C036  F036         	movff	floorf@x+3,?_floorf+3
  3612   0021BC  EFA3  F011         	goto	l896
  3613   0021C0                     l2816:
  3614   0021C0  BE42               	btfsc	(floorf@e+1)^0,7,c
  3615   0021C2  EFE5  F010         	goto	u2951
  3616   0021C6  EFE7  F010         	goto	u2950
  3617   0021CA                     u2951:
  3618   0021CA  EF57  F011         	goto	l2826
  3619   0021CE                     u2950:
  3620   0021CE  C041  F037         	movff	floorf@e,??_floorf
  3621   0021D2  0EFF               	movlw	255
  3622   0021D4  6E38               	movwf	(??_floorf+1)^0,c
  3623   0021D6  0EFF               	movlw	255
  3624   0021D8  6E39               	movwf	(??_floorf+2)^0,c
  3625   0021DA  0E7F               	movlw	127
  3626   0021DC  6E3A               	movwf	(??_floorf+3)^0,c
  3627   0021DE  0E00               	movlw	0
  3628   0021E0  6E3B               	movwf	(??_floorf+4)^0,c
  3629   0021E2                     u2965:
  3630   0021E2  6637               	tstfsz	??_floorf^0,c
  3631   0021E4  EFF6  F010         	goto	u2966
  3632   0021E8  EFFE  F010         	goto	u2967
  3633   0021EC                     u2966:
  3634   0021EC  343B               	rlcf	(??_floorf+4)^0,w,c
  3635   0021EE  323B               	rrcf	(??_floorf+4)^0,f,c
  3636   0021F0  323A               	rrcf	(??_floorf+3)^0,f,c
  3637   0021F2  3239               	rrcf	(??_floorf+2)^0,f,c
  3638   0021F4  3238               	rrcf	(??_floorf+1)^0,f,c
  3639   0021F6  2E37               	decfsz	??_floorf^0,f,c
  3640   0021F8  EFF1  F010         	goto	u2965
  3641   0021FC                     u2967:
  3642   0021FC  C038  F03D         	movff	??_floorf+1,floorf@m
  3643   002200  C039  F03E         	movff	??_floorf+2,floorf@m+1
  3644   002204  C03A  F03F         	movff	??_floorf+3,floorf@m+2
  3645   002208  C03B  F040         	movff	??_floorf+4,floorf@m+3
  3646   00220C  503D               	movf	floorf@m^0,w,c
  3647   00220E  1443               	andwf	floorf@u^0,w,c
  3648   002210  6E37               	movwf	??_floorf^0,c
  3649   002212  503E               	movf	(floorf@m+1)^0,w,c
  3650   002214  1444               	andwf	(floorf@u+1)^0,w,c
  3651   002216  6E38               	movwf	(??_floorf+1)^0,c
  3652   002218  503F               	movf	(floorf@m+2)^0,w,c
  3653   00221A  1445               	andwf	(floorf@u+2)^0,w,c
  3654   00221C  6E39               	movwf	(??_floorf+2)^0,c
  3655   00221E  5040               	movf	(floorf@m+3)^0,w,c
  3656   002220  1446               	andwf	(floorf@u+3)^0,w,c
  3657   002222  6E3A               	movwf	(??_floorf+3)^0,c
  3658   002224  5037               	movf	??_floorf^0,w,c
  3659   002226  1038               	iorwf	(??_floorf+1)^0,w,c
  3660   002228  1039               	iorwf	(??_floorf+2)^0,w,c
  3661   00222A  103A               	iorwf	(??_floorf+3)^0,w,c
  3662   00222C  A4D8               	btfss	status,2,c
  3663   00222E  EF1B  F011         	goto	u2971
  3664   002232  EF1D  F011         	goto	u2970
  3665   002236                     u2971:
  3666   002236  EF1F  F011         	goto	l2822
  3667   00223A                     u2970:
  3668   00223A  EFD6  F010         	goto	l2814
  3669   00223E                     l2822:
  3670   00223E  C043  F037         	movff	floorf@u,??_floorf
  3671   002242  C044  F038         	movff	floorf@u+1,??_floorf+1
  3672   002246  C045  F039         	movff	floorf@u+2,??_floorf+2
  3673   00224A  C046  F03A         	movff	floorf@u+3,??_floorf+3
  3674   00224E  0E20               	movlw	32
  3675   002250  EF2F  F011         	goto	u2980
  3676   002254                     u2985:
  3677   002254  90D8               	bcf	status,0,c
  3678   002256  323A               	rrcf	(??_floorf+3)^0,f,c
  3679   002258  3239               	rrcf	(??_floorf+2)^0,f,c
  3680   00225A  3238               	rrcf	(??_floorf+1)^0,f,c
  3681   00225C  3237               	rrcf	??_floorf^0,f,c
  3682   00225E                     u2980:
  3683   00225E  2EE8               	decfsz	wreg,f,c
  3684   002260  EF2A  F011         	goto	u2985
  3685   002264  5037               	movf	??_floorf^0,w,c
  3686   002266  1038               	iorwf	(??_floorf+1)^0,w,c
  3687   002268  1039               	iorwf	(??_floorf+2)^0,w,c
  3688   00226A  103A               	iorwf	(??_floorf+3)^0,w,c
  3689   00226C  B4D8               	btfsc	status,2,c
  3690   00226E  EF3B  F011         	goto	u2991
  3691   002272  EF3D  F011         	goto	u2990
  3692   002276                     u2991:
  3693   002276  EF45  F011         	goto	l899
  3694   00227A                     u2990:
  3695   00227A  503D               	movf	floorf@m^0,w,c
  3696   00227C  2643               	addwf	floorf@u^0,f,c
  3697   00227E  503E               	movf	(floorf@m+1)^0,w,c
  3698   002280  2244               	addwfc	(floorf@u+1)^0,f,c
  3699   002282  503F               	movf	(floorf@m+2)^0,w,c
  3700   002284  2245               	addwfc	(floorf@u+2)^0,f,c
  3701   002286  5040               	movf	(floorf@m+3)^0,w,c
  3702   002288  2246               	addwfc	(floorf@u+3)^0,f,c
  3703   00228A                     l899:
  3704   00228A  1C3D               	comf	floorf@m^0,w,c
  3705   00228C  6E37               	movwf	??_floorf^0,c
  3706   00228E  1C3E               	comf	(floorf@m+1)^0,w,c
  3707   002290  6E38               	movwf	(??_floorf+1)^0,c
  3708   002292  1C3F               	comf	(floorf@m+2)^0,w,c
  3709   002294  6E39               	movwf	(??_floorf+2)^0,c
  3710   002296  1C40               	comf	(floorf@m+3)^0,w,c
  3711   002298  6E3A               	movwf	(??_floorf+3)^0,c
  3712   00229A  5037               	movf	??_floorf^0,w,c
  3713   00229C  1643               	andwf	floorf@u^0,f,c
  3714   00229E  5038               	movf	(??_floorf+1)^0,w,c
  3715   0022A0  1644               	andwf	(floorf@u+1)^0,f,c
  3716   0022A2  5039               	movf	(??_floorf+2)^0,w,c
  3717   0022A4  1645               	andwf	(floorf@u+2)^0,f,c
  3718   0022A6  503A               	movf	(??_floorf+3)^0,w,c
  3719   0022A8  1646               	andwf	(floorf@u+3)^0,f,c
  3720   0022AA  EF9B  F011         	goto	l2834
  3721   0022AE                     l2826:
  3722   0022AE  C043  F037         	movff	floorf@u,??_floorf
  3723   0022B2  C044  F038         	movff	floorf@u+1,??_floorf+1
  3724   0022B6  C045  F039         	movff	floorf@u+2,??_floorf+2
  3725   0022BA  C046  F03A         	movff	floorf@u+3,??_floorf+3
  3726   0022BE  0E20               	movlw	32
  3727   0022C0  EF67  F011         	goto	u3000
  3728   0022C4                     u3005:
  3729   0022C4  90D8               	bcf	status,0,c
  3730   0022C6  323A               	rrcf	(??_floorf+3)^0,f,c
  3731   0022C8  3239               	rrcf	(??_floorf+2)^0,f,c
  3732   0022CA  3238               	rrcf	(??_floorf+1)^0,f,c
  3733   0022CC  3237               	rrcf	??_floorf^0,f,c
  3734   0022CE                     u3000:
  3735   0022CE  2EE8               	decfsz	wreg,f,c
  3736   0022D0  EF62  F011         	goto	u3005
  3737   0022D4  5037               	movf	??_floorf^0,w,c
  3738   0022D6  1038               	iorwf	(??_floorf+1)^0,w,c
  3739   0022D8  1039               	iorwf	(??_floorf+2)^0,w,c
  3740   0022DA  103A               	iorwf	(??_floorf+3)^0,w,c
  3741   0022DC  A4D8               	btfss	status,2,c
  3742   0022DE  EF73  F011         	goto	u3011
  3743   0022E2  EF75  F011         	goto	u3010
  3744   0022E6                     u3011:
  3745   0022E6  EF7F  F011         	goto	l2830
  3746   0022EA                     u3010:
  3747   0022EA  0E00               	movlw	0
  3748   0022EC  6E43               	movwf	floorf@u^0,c
  3749   0022EE  0E00               	movlw	0
  3750   0022F0  6E44               	movwf	(floorf@u+1)^0,c
  3751   0022F2  0E00               	movlw	0
  3752   0022F4  6E45               	movwf	(floorf@u+2)^0,c
  3753   0022F6  0E00               	movlw	0
  3754   0022F8  6E46               	movwf	(floorf@u+3)^0,c
  3755   0022FA  EF9B  F011         	goto	l2834
  3756   0022FE                     l2830:
  3757   0022FE  90D8               	bcf	status,0,c
  3758   002300  3443               	rlcf	floorf@u^0,w,c
  3759   002302  6E37               	movwf	??_floorf^0,c
  3760   002304  3444               	rlcf	(floorf@u+1)^0,w,c
  3761   002306  6E38               	movwf	(??_floorf+1)^0,c
  3762   002308  3445               	rlcf	(floorf@u+2)^0,w,c
  3763   00230A  6E39               	movwf	(??_floorf+2)^0,c
  3764   00230C  3446               	rlcf	(floorf@u+3)^0,w,c
  3765   00230E  6E3A               	movwf	(??_floorf+3)^0,c
  3766   002310  5037               	movf	??_floorf^0,w,c
  3767   002312  1038               	iorwf	(??_floorf+1)^0,w,c
  3768   002314  1039               	iorwf	(??_floorf+2)^0,w,c
  3769   002316  103A               	iorwf	(??_floorf+3)^0,w,c
  3770   002318  B4D8               	btfsc	status,2,c
  3771   00231A  EF91  F011         	goto	u3021
  3772   00231E  EF93  F011         	goto	u3020
  3773   002322                     u3021:
  3774   002322  EF9B  F011         	goto	l2834
  3775   002326                     u3020:
  3776   002326  0E00               	movlw	0
  3777   002328  6E43               	movwf	floorf@u^0,c
  3778   00232A  0E00               	movlw	0
  3779   00232C  6E44               	movwf	(floorf@u+1)^0,c
  3780   00232E  0E80               	movlw	128
  3781   002330  6E45               	movwf	(floorf@u+2)^0,c
  3782   002332  0EBF               	movlw	191
  3783   002334  6E46               	movwf	(floorf@u+3)^0,c
  3784   002336                     l2834:
  3785   002336  C043  F033         	movff	floorf@u,?_floorf
  3786   00233A  C044  F034         	movff	floorf@u+1,?_floorf+1
  3787   00233E  C045  F035         	movff	floorf@u+2,?_floorf+2
  3788   002342  C046  F036         	movff	floorf@u+3,?_floorf+3
  3789   002346                     l896:
  3790   002346  0012               	return		;funcret
  3791   002348                     __end_of_floorf:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function ___fpclassifyf *****************
  3795 ;; Defined at:
  3796 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  x               4    0[COMRAM] float 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  u               4   10[COMRAM] struct .
  3801 ;;  e               2    8[COMRAM] int 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  2    0[COMRAM] int 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3811 ;;      Params:         4       0       0       0       0       0       0       0       0
  3812 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3813 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3814 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3815 ;;Total ram usage:       14 bytes
  3816 ;; Hardware stack levels used: 1
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_efgtoa
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text16
  3825   002706                     __ptext16:
  3826                           	callstack 0
  3827   002706                     ___fpclassifyf:
  3828                           	callstack 26
  3829   002706  C064  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3830   00270A  C065  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3831   00270E  C066  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3832   002712  C067  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3833   002716  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  3834   00271A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3835   00271E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3836   002722  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3837   002726  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3838   00272A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3839   00272E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3840   002732  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3841   002736  0E18               	movlw	24
  3842   002738  EFA3  F013         	goto	u2840
  3843   00273C                     u2845:
  3844   00273C  90D8               	bcf	status,0,c
  3845   00273E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  3846   002740  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  3847   002742  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  3848   002744  3205               	rrcf	??___fpclassifyf^0,f,c
  3849   002746                     u2840:
  3850   002746  2EE8               	decfsz	wreg,f,c
  3851   002748  EF9E  F013         	goto	u2845
  3852   00274C  5005               	movf	??___fpclassifyf^0,w,c
  3853   00274E  6E09               	movwf	___fpclassifyf@e^0,c
  3854   002750  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  3855   002752  5009               	movf	___fpclassifyf@e^0,w,c
  3856   002754  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3857   002756  A4D8               	btfss	status,2,c
  3858   002758  EFB0  F013         	goto	u2851
  3859   00275C  EFB2  F013         	goto	u2850
  3860   002760                     u2851:
  3861   002760  EFD2  F013         	goto	l2792
  3862   002764                     u2850:
  3863   002764  90D8               	bcf	status,0,c
  3864   002766  340B               	rlcf	___fpclassifyf@u^0,w,c
  3865   002768  6E05               	movwf	??___fpclassifyf^0,c
  3866   00276A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3867   00276C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  3868   00276E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3869   002770  6E07               	movwf	(??___fpclassifyf+2)^0,c
  3870   002772  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3871   002774  6E08               	movwf	(??___fpclassifyf+3)^0,c
  3872   002776  5005               	movf	??___fpclassifyf^0,w,c
  3873   002778  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3874   00277A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3875   00277C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3876   00277E  A4D8               	btfss	status,2,c
  3877   002780  EFC4  F013         	goto	u2861
  3878   002784  EFC6  F013         	goto	u2860
  3879   002788                     u2861:
  3880   002788  EFCC  F013         	goto	l2788
  3881   00278C                     u2860:
  3882   00278C  0E00               	movlw	0
  3883   00278E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3884   002790  0E02               	movlw	2
  3885   002792  6E01               	movwf	?___fpclassifyf^0,c
  3886   002794  EF01  F014         	goto	l889
  3887   002798                     l2788:
  3888   002798  0E00               	movlw	0
  3889   00279A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3890   00279C  0E03               	movlw	3
  3891   00279E  6E01               	movwf	?___fpclassifyf^0,c
  3892   0027A0  EF01  F014         	goto	l889
  3893   0027A4                     l2792:
  3894   0027A4  2809               	incf	___fpclassifyf@e^0,w,c
  3895   0027A6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3896   0027A8  A4D8               	btfss	status,2,c
  3897   0027AA  EFD9  F013         	goto	u2871
  3898   0027AE  EFDB  F013         	goto	u2870
  3899   0027B2                     u2871:
  3900   0027B2  EFFD  F013         	goto	l2798
  3901   0027B6                     u2870:
  3902   0027B6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  3903   0027BA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3904   0027BE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3905   0027C2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3906   0027C6  0E09               	movlw	9
  3907   0027C8                     u2885:
  3908   0027C8  90D8               	bcf	status,0,c
  3909   0027CA  3605               	rlcf	??___fpclassifyf^0,f,c
  3910   0027CC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  3911   0027CE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  3912   0027D0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  3913   0027D2  2EE8               	decfsz	wreg,f,c
  3914   0027D4  EFE4  F013         	goto	u2885
  3915   0027D8  5005               	movf	??___fpclassifyf^0,w,c
  3916   0027DA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  3917   0027DC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  3918   0027DE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  3919   0027E0  B4D8               	btfsc	status,2,c
  3920   0027E2  EFF5  F013         	goto	u2891
  3921   0027E6  EFF8  F013         	goto	u2890
  3922   0027EA                     u2891:
  3923   0027EA  0E01               	movlw	1
  3924   0027EC  EFF9  F013         	goto	u2900
  3925   0027F0                     u2890:
  3926   0027F0  0E00               	movlw	0
  3927   0027F2                     u2900:
  3928   0027F2  6E01               	movwf	?___fpclassifyf^0,c
  3929   0027F4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  3930   0027F6  EF01  F014         	goto	l889
  3931   0027FA                     l2798:
  3932   0027FA  0E00               	movlw	0
  3933   0027FC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  3934   0027FE  0E04               	movlw	4
  3935   002800  6E01               	movwf	?___fpclassifyf^0,c
  3936   002802                     l889:
  3937   002802  0012               	return		;funcret
  3938   002804                     __end_of___fpclassifyf:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function ___fltol *****************
  3942 ;; Defined at:
  3943 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  f1              4    0[COMRAM] int 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  exp1            1    9[COMRAM] unsigned char 
  3948 ;;  sign1           1    8[COMRAM] unsigned char 
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  4    0[COMRAM] long 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3958 ;;      Params:         4       0       0       0       0       0       0       0       0
  3959 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3960 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3961 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3962 ;;Total ram usage:       10 bytes
  3963 ;; Hardware stack levels used: 1
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_efgtoa
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text17
  3972   0024FC                     __ptext17:
  3973                           	callstack 0
  3974   0024FC                     ___fltol:
  3975                           	callstack 26
  3976   0024FC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3977   0024FE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3978   002500  6E0A               	movwf	___fltol@exp1^0,c
  3979   002502  500A               	movf	___fltol@exp1^0,w,c
  3980   002504  A4D8               	btfss	status,2,c
  3981   002506  EF87  F012         	goto	u2751
  3982   00250A  EF89  F012         	goto	u2750
  3983   00250E                     u2751:
  3984   00250E  EF93  F012         	goto	l2728
  3985   002512                     u2750:
  3986   002512                     l2724:
  3987   002512  0E00               	movlw	0
  3988   002514  6E01               	movwf	?___fltol^0,c
  3989   002516  0E00               	movlw	0
  3990   002518  6E02               	movwf	(?___fltol+1)^0,c
  3991   00251A  0E00               	movlw	0
  3992   00251C  6E03               	movwf	(?___fltol+2)^0,c
  3993   00251E  0E00               	movlw	0
  3994   002520  6E04               	movwf	(?___fltol+3)^0,c
  3995   002522  EF00  F013         	goto	l377
  3996   002526                     l2728:
  3997   002526  C001  F005         	movff	___fltol@f1,??___fltol
  3998   00252A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3999   00252E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4000   002532  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4001   002536  0E20               	movlw	32
  4002   002538  EFA3  F012         	goto	u2760
  4003   00253C                     u2765:
  4004   00253C  90D8               	bcf	status,0,c
  4005   00253E  3208               	rrcf	(??___fltol+3)^0,f,c
  4006   002540  3207               	rrcf	(??___fltol+2)^0,f,c
  4007   002542  3206               	rrcf	(??___fltol+1)^0,f,c
  4008   002544  3205               	rrcf	??___fltol^0,f,c
  4009   002546                     u2760:
  4010   002546  2EE8               	decfsz	wreg,f,c
  4011   002548  EF9E  F012         	goto	u2765
  4012   00254C  5005               	movf	??___fltol^0,w,c
  4013   00254E  6E09               	movwf	___fltol@sign1^0,c
  4014   002550  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4015   002552  0EFF               	movlw	255
  4016   002554  1601               	andwf	___fltol@f1^0,f,c
  4017   002556  0EFF               	movlw	255
  4018   002558  1602               	andwf	(___fltol@f1+1)^0,f,c
  4019   00255A  0EFF               	movlw	255
  4020   00255C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4021   00255E  0E00               	movlw	0
  4022   002560  1604               	andwf	(___fltol@f1+3)^0,f,c
  4023   002562  0E96               	movlw	150
  4024   002564  5E0A               	subwf	___fltol@exp1^0,f,c
  4025   002566  BE0A               	btfsc	___fltol@exp1^0,7,c
  4026   002568  EFBA  F012         	goto	u2770
  4027   00256C  EFB8  F012         	goto	u2771
  4028   002570                     u2771:
  4029   002570  EFD0  F012         	goto	l2748
  4030   002574                     u2770:
  4031   002574  500A               	movf	___fltol@exp1^0,w,c
  4032   002576  0A80               	xorlw	128
  4033   002578  0F97               	addlw	151
  4034   00257A  B0D8               	btfsc	status,0,c
  4035   00257C  EFC2  F012         	goto	u2781
  4036   002580  EFC4  F012         	goto	u2780
  4037   002584                     u2781:
  4038   002584  EFC6  F012         	goto	l2744
  4039   002588                     u2780:
  4040   002588  EF89  F012         	goto	l2724
  4041   00258C                     l2744:
  4042   00258C  90D8               	bcf	status,0,c
  4043   00258E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4044   002590  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4045   002592  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4046   002594  3201               	rrcf	___fltol@f1^0,f,c
  4047   002596  3E0A               	incfsz	___fltol@exp1^0,f,c
  4048   002598  EFC6  F012         	goto	l2744
  4049   00259C  EFE8  F012         	goto	l2758
  4050   0025A0                     l2748:
  4051   0025A0  0E1F               	movlw	31
  4052   0025A2  640A               	cpfsgt	___fltol@exp1^0,c
  4053   0025A4  EFD6  F012         	goto	u2791
  4054   0025A8  EFD8  F012         	goto	u2790
  4055   0025AC                     u2791:
  4056   0025AC  EFE0  F012         	goto	l2756
  4057   0025B0                     u2790:
  4058   0025B0  EF89  F012         	goto	l2724
  4059   0025B4                     l2754:
  4060   0025B4  90D8               	bcf	status,0,c
  4061   0025B6  3601               	rlcf	___fltol@f1^0,f,c
  4062   0025B8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4063   0025BA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4064   0025BC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4065   0025BE  060A               	decf	___fltol@exp1^0,f,c
  4066   0025C0                     l2756:
  4067   0025C0  500A               	movf	___fltol@exp1^0,w,c
  4068   0025C2  A4D8               	btfss	status,2,c
  4069   0025C4  EFE6  F012         	goto	u2801
  4070   0025C8  EFE8  F012         	goto	u2800
  4071   0025CC                     u2801:
  4072   0025CC  EFDA  F012         	goto	l2754
  4073   0025D0                     u2800:
  4074   0025D0                     l2758:
  4075   0025D0  5009               	movf	___fltol@sign1^0,w,c
  4076   0025D2  B4D8               	btfsc	status,2,c
  4077   0025D4  EFEE  F012         	goto	u2811
  4078   0025D8  EFF0  F012         	goto	u2810
  4079   0025DC                     u2811:
  4080   0025DC  EFF8  F012         	goto	l2762
  4081   0025E0                     u2810:
  4082   0025E0  1E04               	comf	(___fltol@f1+3)^0,f,c
  4083   0025E2  1E03               	comf	(___fltol@f1+2)^0,f,c
  4084   0025E4  1E02               	comf	(___fltol@f1+1)^0,f,c
  4085   0025E6  6C01               	negf	___fltol@f1^0,c
  4086   0025E8  0E00               	movlw	0
  4087   0025EA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4088   0025EC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4089   0025EE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4090   0025F0                     l2762:
  4091   0025F0  C001  F001         	movff	___fltol@f1,?___fltol
  4092   0025F4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4093   0025F8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4094   0025FC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4095   002600                     l377:
  4096   002600  0012               	return		;funcret
  4097   002602                     __end_of___fltol:
  4098                           	callstack 0
  4099                           
  4100 ;; *************** function ___flsub *****************
  4101 ;; Defined at:
  4102 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  b               4   25[COMRAM] long 
  4105 ;;  a               4   29[COMRAM] long 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  4   25[COMRAM] long 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4117 ;;      Params:         8       0       0       0       0       0       0       0       0
  4118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4120 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4121 ;;Total ram usage:        8 bytes
  4122 ;; Hardware stack levels used: 1
  4123 ;; Hardware stack levels required when called: 1
  4124 ;; This function calls:
  4125 ;;		___fladd
  4126 ;; This function is called by:
  4127 ;;		_efgtoa
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text18
  4132   002E34                     __ptext18:
  4133                           	callstack 0
  4134   002E34                     ___flsub:
  4135                           	callstack 25
  4136   002E34  0E00               	movlw	0
  4137   002E36  1A1E               	xorwf	___flsub@a^0,f,c
  4138   002E38  0E00               	movlw	0
  4139   002E3A  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4140   002E3C  0E00               	movlw	0
  4141   002E3E  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4142   002E40  0E80               	movlw	128
  4143   002E42  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4144   002E44  C01A  F001         	movff	___flsub@b,___fladd@b
  4145   002E48  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4146   002E4C  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4147   002E50  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4148   002E54  C01E  F005         	movff	___flsub@a,___fladd@a
  4149   002E58  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4150   002E5C  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4151   002E60  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4152   002E64  EC26  F009         	call	___fladd	;wreg free
  4153   002E68  C001  F01A         	movff	?___fladd,?___flsub
  4154   002E6C  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4155   002E70  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4156   002E74  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4157   002E78  0012               	return		;funcret
  4158   002E7A                     __end_of___flsub:
  4159                           	callstack 0
  4160                           
  4161 ;; *************** function ___fladd *****************
  4162 ;; Defined at:
  4163 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  b               4    0[COMRAM] long 
  4166 ;;  a               4    4[COMRAM] long 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  grs             1   15[COMRAM] unsigned char 
  4169 ;;  bexp            1   14[COMRAM] unsigned char 
  4170 ;;  aexp            1   13[COMRAM] unsigned char 
  4171 ;;  signs           1   12[COMRAM] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  4    0[COMRAM] unsigned char 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4181 ;;      Params:         8       0       0       0       0       0       0       0       0
  4182 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4183 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4184 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4185 ;;Total ram usage:       16 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		___flsub
  4191 ;;		_efgtoa
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text19
  4196   00124C                     __ptext19:
  4197                           	callstack 0
  4198   00124C                     ___fladd:
  4199                           	callstack 25
  4200   00124C  5004               	movf	(___fladd@b+3)^0,w,c
  4201   00124E  0B80               	andlw	128
  4202   001250  6E0D               	movwf	___fladd@signs^0,c
  4203   001252  5004               	movf	(___fladd@b+3)^0,w,c
  4204   001254  2404               	addwf	(___fladd@b+3)^0,w,c
  4205   001256  6E0F               	movwf	___fladd@bexp^0,c
  4206   001258  AE03               	btfss	(___fladd@b+2)^0,7,c
  4207   00125A  EF31  F009         	goto	u1841
  4208   00125E  EF33  F009         	goto	u1840
  4209   001262                     u1841:
  4210   001262  EF34  F009         	goto	l2192
  4211   001266                     u1840:
  4212   001266  800F               	bsf	___fladd@bexp^0,0,c
  4213   001268                     l2192:
  4214   001268  500F               	movf	___fladd@bexp^0,w,c
  4215   00126A  B4D8               	btfsc	status,2,c
  4216   00126C  EF3A  F009         	goto	u1851
  4217   001270  EF3C  F009         	goto	u1850
  4218   001274                     u1851:
  4219   001274  EF51  F009         	goto	l2202
  4220   001278                     u1850:
  4221   001278  280F               	incf	___fladd@bexp^0,w,c
  4222   00127A  A4D8               	btfss	status,2,c
  4223   00127C  EF42  F009         	goto	u1861
  4224   001280  EF44  F009         	goto	u1860
  4225   001284                     u1861:
  4226   001284  EF4C  F009         	goto	l2198
  4227   001288                     u1860:
  4228   001288  0E00               	movlw	0
  4229   00128A  6E01               	movwf	___fladd@b^0,c
  4230   00128C  0E00               	movlw	0
  4231   00128E  6E02               	movwf	(___fladd@b+1)^0,c
  4232   001290  0E00               	movlw	0
  4233   001292  6E03               	movwf	(___fladd@b+2)^0,c
  4234   001294  0E00               	movlw	0
  4235   001296  6E04               	movwf	(___fladd@b+3)^0,c
  4236   001298                     l2198:
  4237   001298  8E03               	bsf	(___fladd@b+2)^0,7,c
  4238   00129A  0E00               	movlw	0
  4239   00129C  6E04               	movwf	(___fladd@b+3)^0,c
  4240   00129E  EF59  F009         	goto	l2204
  4241   0012A2                     l2202:
  4242   0012A2  0E00               	movlw	0
  4243   0012A4  6E01               	movwf	___fladd@b^0,c
  4244   0012A6  0E00               	movlw	0
  4245   0012A8  6E02               	movwf	(___fladd@b+1)^0,c
  4246   0012AA  0E00               	movlw	0
  4247   0012AC  6E03               	movwf	(___fladd@b+2)^0,c
  4248   0012AE  0E00               	movlw	0
  4249   0012B0  6E04               	movwf	(___fladd@b+3)^0,c
  4250   0012B2                     l2204:
  4251   0012B2  5008               	movf	(___fladd@a+3)^0,w,c
  4252   0012B4  0B80               	andlw	128
  4253   0012B6  6E0E               	movwf	___fladd@aexp^0,c
  4254   0012B8  500D               	movf	___fladd@signs^0,w,c
  4255   0012BA  180E               	xorwf	___fladd@aexp^0,w,c
  4256   0012BC  B4D8               	btfsc	status,2,c
  4257   0012BE  EF63  F009         	goto	u1871
  4258   0012C2  EF65  F009         	goto	u1870
  4259   0012C6                     u1871:
  4260   0012C6  EF66  F009         	goto	l2210
  4261   0012CA                     u1870:
  4262   0012CA  8C0D               	bsf	___fladd@signs^0,6,c
  4263   0012CC                     l2210:
  4264   0012CC  5008               	movf	(___fladd@a+3)^0,w,c
  4265   0012CE  2408               	addwf	(___fladd@a+3)^0,w,c
  4266   0012D0  6E0E               	movwf	___fladd@aexp^0,c
  4267   0012D2  AE07               	btfss	(___fladd@a+2)^0,7,c
  4268   0012D4  EF6E  F009         	goto	u1881
  4269   0012D8  EF70  F009         	goto	u1880
  4270   0012DC                     u1881:
  4271   0012DC  EF71  F009         	goto	l2216
  4272   0012E0                     u1880:
  4273   0012E0  800E               	bsf	___fladd@aexp^0,0,c
  4274   0012E2                     l2216:
  4275   0012E2  500E               	movf	___fladd@aexp^0,w,c
  4276   0012E4  B4D8               	btfsc	status,2,c
  4277   0012E6  EF77  F009         	goto	u1891
  4278   0012EA  EF79  F009         	goto	u1890
  4279   0012EE                     u1891:
  4280   0012EE  EF8E  F009         	goto	l2226
  4281   0012F2                     u1890:
  4282   0012F2  280E               	incf	___fladd@aexp^0,w,c
  4283   0012F4  A4D8               	btfss	status,2,c
  4284   0012F6  EF7F  F009         	goto	u1901
  4285   0012FA  EF81  F009         	goto	u1900
  4286   0012FE                     u1901:
  4287   0012FE  EF89  F009         	goto	l2222
  4288   001302                     u1900:
  4289   001302  0E00               	movlw	0
  4290   001304  6E05               	movwf	___fladd@a^0,c
  4291   001306  0E00               	movlw	0
  4292   001308  6E06               	movwf	(___fladd@a+1)^0,c
  4293   00130A  0E00               	movlw	0
  4294   00130C  6E07               	movwf	(___fladd@a+2)^0,c
  4295   00130E  0E00               	movlw	0
  4296   001310  6E08               	movwf	(___fladd@a+3)^0,c
  4297   001312                     l2222:
  4298   001312  8E07               	bsf	(___fladd@a+2)^0,7,c
  4299   001314  0E00               	movlw	0
  4300   001316  6E08               	movwf	(___fladd@a+3)^0,c
  4301   001318  EF96  F009         	goto	l2228
  4302   00131C                     l2226:
  4303   00131C  0E00               	movlw	0
  4304   00131E  6E05               	movwf	___fladd@a^0,c
  4305   001320  0E00               	movlw	0
  4306   001322  6E06               	movwf	(___fladd@a+1)^0,c
  4307   001324  0E00               	movlw	0
  4308   001326  6E07               	movwf	(___fladd@a+2)^0,c
  4309   001328  0E00               	movlw	0
  4310   00132A  6E08               	movwf	(___fladd@a+3)^0,c
  4311   00132C                     l2228:
  4312   00132C  500F               	movf	___fladd@bexp^0,w,c
  4313   00132E  5C0E               	subwf	___fladd@aexp^0,w,c
  4314   001330  B0D8               	btfsc	status,0,c
  4315   001332  EF9D  F009         	goto	u1911
  4316   001336  EF9F  F009         	goto	u1910
  4317   00133A                     u1911:
  4318   00133A  EFC6  F009         	goto	l2264
  4319   00133E                     u1910:
  4320   00133E  AC0D               	btfss	___fladd@signs^0,6,c
  4321   001340  EFA4  F009         	goto	u1921
  4322   001344  EFA6  F009         	goto	u1920
  4323   001348                     u1921:
  4324   001348  EFA8  F009         	goto	l2234
  4325   00134C                     u1920:
  4326   00134C  0E80               	movlw	128
  4327   00134E  1A0D               	xorwf	___fladd@signs^0,f,c
  4328   001350                     l2234:
  4329   001350  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4330   001354  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4331   001358  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4332   00135C  C001  F010         	movff	___fladd@b,___fladd@grs
  4333   001360  C005  F001         	movff	___fladd@a,___fladd@b
  4334   001364  C010  F005         	movff	___fladd@grs,___fladd@a
  4335   001368  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4336   00136C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4337   001370  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4338   001374  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4339   001378  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4340   00137C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4341   001380  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4342   001384  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4343   001388  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4344   00138C                     l2264:
  4345   00138C  0E00               	movlw	0
  4346   00138E  6E10               	movwf	___fladd@grs^0,c
  4347   001390  500F               	movf	___fladd@bexp^0,w,c
  4348   001392  C00E  F009         	movff	___fladd@aexp,??___fladd
  4349   001396  6A0A               	clrf	(??___fladd+1)^0,c
  4350   001398  5E09               	subwf	??___fladd^0,f,c
  4351   00139A  0E00               	movlw	0
  4352   00139C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4353   00139E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4354   0013A0  EFDB  F009         	goto	u1931
  4355   0013A4  500A               	movf	(??___fladd+1)^0,w,c
  4356   0013A6  E109               	bnz	u1930
  4357   0013A8  0E1A               	movlw	26
  4358   0013AA  5C09               	subwf	??___fladd^0,w,c
  4359   0013AC  A0D8               	btfss	status,0,c
  4360   0013AE  EFDB  F009         	goto	u1931
  4361   0013B2  EFDD  F009         	goto	u1930
  4362   0013B6                     u1931:
  4363   0013B6  EF14  F00A         	goto	l609
  4364   0013BA                     u1930:
  4365   0013BA  5001               	movf	___fladd@b^0,w,c
  4366   0013BC  1002               	iorwf	(___fladd@b+1)^0,w,c
  4367   0013BE  1003               	iorwf	(___fladd@b+2)^0,w,c
  4368   0013C0  1004               	iorwf	(___fladd@b+3)^0,w,c
  4369   0013C2  A4D8               	btfss	status,2,c
  4370   0013C4  EFE6  F009         	goto	u1941
  4371   0013C8  EFE9  F009         	goto	u1940
  4372   0013CC                     u1941:
  4373   0013CC  0E01               	movlw	1
  4374   0013CE  EFEA  F009         	goto	u1950
  4375   0013D2                     u1940:
  4376   0013D2  0E00               	movlw	0
  4377   0013D4                     u1950:
  4378   0013D4  6E10               	movwf	___fladd@grs^0,c
  4379   0013D6  0E00               	movlw	0
  4380   0013D8  6E01               	movwf	___fladd@b^0,c
  4381   0013DA  0E00               	movlw	0
  4382   0013DC  6E02               	movwf	(___fladd@b+1)^0,c
  4383   0013DE  0E00               	movlw	0
  4384   0013E0  6E03               	movwf	(___fladd@b+2)^0,c
  4385   0013E2  0E00               	movlw	0
  4386   0013E4  6E04               	movwf	(___fladd@b+3)^0,c
  4387   0013E6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4388   0013EA  EF1D  F00A         	goto	l608
  4389   0013EE                     l610:
  4390   0013EE  A010               	btfss	___fladd@grs^0,0,c
  4391   0013F0  EFFC  F009         	goto	u1961
  4392   0013F4  EFFE  F009         	goto	u1960
  4393   0013F8                     u1961:
  4394   0013F8  EF04  F00A         	goto	l2276
  4395   0013FC                     u1960:
  4396   0013FC  90D8               	bcf	status,0,c
  4397   0013FE  3010               	rrcf	___fladd@grs^0,w,c
  4398   001400  0901               	iorlw	1
  4399   001402  6E10               	movwf	___fladd@grs^0,c
  4400   001404  EF06  F00A         	goto	l2278
  4401   001408                     l2276:
  4402   001408  90D8               	bcf	status,0,c
  4403   00140A  3210               	rrcf	___fladd@grs^0,f,c
  4404   00140C                     l2278:
  4405   00140C  A001               	btfss	___fladd@b^0,0,c
  4406   00140E  EF0B  F00A         	goto	u1971
  4407   001412  EF0D  F00A         	goto	u1970
  4408   001416                     u1971:
  4409   001416  EF0E  F00A         	goto	l2282
  4410   00141A                     u1970:
  4411   00141A  8E10               	bsf	___fladd@grs^0,7,c
  4412   00141C                     l2282:
  4413   00141C  3404               	rlcf	(___fladd@b+3)^0,w,c
  4414   00141E  3204               	rrcf	(___fladd@b+3)^0,f,c
  4415   001420  3203               	rrcf	(___fladd@b+2)^0,f,c
  4416   001422  3202               	rrcf	(___fladd@b+1)^0,f,c
  4417   001424  3201               	rrcf	___fladd@b^0,f,c
  4418   001426  2A0F               	incf	___fladd@bexp^0,f,c
  4419   001428                     l609:
  4420   001428  500E               	movf	___fladd@aexp^0,w,c
  4421   00142A  5C0F               	subwf	___fladd@bexp^0,w,c
  4422   00142C  A0D8               	btfss	status,0,c
  4423   00142E  EF1B  F00A         	goto	u1981
  4424   001432  EF1D  F00A         	goto	u1980
  4425   001436                     u1981:
  4426   001436  EFF7  F009         	goto	l610
  4427   00143A                     u1980:
  4428   00143A                     l608:
  4429   00143A  BC0D               	btfsc	___fladd@signs^0,6,c
  4430   00143C  EF22  F00A         	goto	u1991
  4431   001440  EF24  F00A         	goto	u1990
  4432   001444                     u1991:
  4433   001444  EF64  F00A         	goto	l2310
  4434   001448                     u1990:
  4435   001448  500F               	movf	___fladd@bexp^0,w,c
  4436   00144A  A4D8               	btfss	status,2,c
  4437   00144C  EF2A  F00A         	goto	u2001
  4438   001450  EF2C  F00A         	goto	u2000
  4439   001454                     u2001:
  4440   001454  EF36  F00A         	goto	l2292
  4441   001458                     u2000:
  4442   001458  0E00               	movlw	0
  4443   00145A  6E01               	movwf	?___fladd^0,c
  4444   00145C  0E00               	movlw	0
  4445   00145E  6E02               	movwf	(?___fladd+1)^0,c
  4446   001460  0E00               	movlw	0
  4447   001462  6E03               	movwf	(?___fladd+2)^0,c
  4448   001464  0E00               	movlw	0
  4449   001466  6E04               	movwf	(?___fladd+3)^0,c
  4450   001468  EF85  F00B         	goto	l617
  4451   00146C                     l2292:
  4452   00146C  5005               	movf	___fladd@a^0,w,c
  4453   00146E  2601               	addwf	___fladd@b^0,f,c
  4454   001470  5006               	movf	(___fladd@a+1)^0,w,c
  4455   001472  2202               	addwfc	(___fladd@b+1)^0,f,c
  4456   001474  5007               	movf	(___fladd@a+2)^0,w,c
  4457   001476  2203               	addwfc	(___fladd@b+2)^0,f,c
  4458   001478  5008               	movf	(___fladd@a+3)^0,w,c
  4459   00147A  2204               	addwfc	(___fladd@b+3)^0,f,c
  4460   00147C  A004               	btfss	(___fladd@b+3)^0,0,c
  4461   00147E  EF43  F00A         	goto	u2011
  4462   001482  EF45  F00A         	goto	u2010
  4463   001486                     u2011:
  4464   001486  EFF1  F00A         	goto	l2346
  4465   00148A                     u2010:
  4466   00148A  A010               	btfss	___fladd@grs^0,0,c
  4467   00148C  EF4A  F00A         	goto	u2021
  4468   001490  EF4C  F00A         	goto	u2020
  4469   001494                     u2021:
  4470   001494  EF52  F00A         	goto	l2300
  4471   001498                     u2020:
  4472   001498  90D8               	bcf	status,0,c
  4473   00149A  3010               	rrcf	___fladd@grs^0,w,c
  4474   00149C  0901               	iorlw	1
  4475   00149E  6E10               	movwf	___fladd@grs^0,c
  4476   0014A0  EF54  F00A         	goto	l2302
  4477   0014A4                     l2300:
  4478   0014A4  90D8               	bcf	status,0,c
  4479   0014A6  3210               	rrcf	___fladd@grs^0,f,c
  4480   0014A8                     l2302:
  4481   0014A8  A001               	btfss	___fladd@b^0,0,c
  4482   0014AA  EF59  F00A         	goto	u2031
  4483   0014AE  EF5B  F00A         	goto	u2030
  4484   0014B2                     u2031:
  4485   0014B2  EF5C  F00A         	goto	l2306
  4486   0014B6                     u2030:
  4487   0014B6  8E10               	bsf	___fladd@grs^0,7,c
  4488   0014B8                     l2306:
  4489   0014B8  3404               	rlcf	(___fladd@b+3)^0,w,c
  4490   0014BA  3204               	rrcf	(___fladd@b+3)^0,f,c
  4491   0014BC  3203               	rrcf	(___fladd@b+2)^0,f,c
  4492   0014BE  3202               	rrcf	(___fladd@b+1)^0,f,c
  4493   0014C0  3201               	rrcf	___fladd@b^0,f,c
  4494   0014C2  2A0F               	incf	___fladd@bexp^0,f,c
  4495   0014C4  EFF1  F00A         	goto	l2346
  4496   0014C8                     l2310:
  4497   0014C8  5005               	movf	___fladd@a^0,w,c
  4498   0014CA  5C01               	subwf	___fladd@b^0,w,c
  4499   0014CC  5006               	movf	(___fladd@a+1)^0,w,c
  4500   0014CE  5802               	subwfb	(___fladd@b+1)^0,w,c
  4501   0014D0  5007               	movf	(___fladd@a+2)^0,w,c
  4502   0014D2  5803               	subwfb	(___fladd@b+2)^0,w,c
  4503   0014D4  5004               	movf	(___fladd@b+3)^0,w,c
  4504   0014D6  0A80               	xorlw	128
  4505   0014D8  6E09               	movwf	??___fladd^0,c
  4506   0014DA  5008               	movf	(___fladd@a+3)^0,w,c
  4507   0014DC  0A80               	xorlw	128
  4508   0014DE  5809               	subwfb	??___fladd^0,w,c
  4509   0014E0  B0D8               	btfsc	status,0,c
  4510   0014E2  EF75  F00A         	goto	u2041
  4511   0014E6  EF77  F00A         	goto	u2040
  4512   0014EA                     u2041:
  4513   0014EA  EFA2  F00A         	goto	l2320
  4514   0014EE                     u2040:
  4515   0014EE  5001               	movf	___fladd@b^0,w,c
  4516   0014F0  5C05               	subwf	___fladd@a^0,w,c
  4517   0014F2  6E09               	movwf	??___fladd^0,c
  4518   0014F4  5002               	movf	(___fladd@b+1)^0,w,c
  4519   0014F6  5806               	subwfb	(___fladd@a+1)^0,w,c
  4520   0014F8  6E0A               	movwf	(??___fladd+1)^0,c
  4521   0014FA  5003               	movf	(___fladd@b+2)^0,w,c
  4522   0014FC  5807               	subwfb	(___fladd@a+2)^0,w,c
  4523   0014FE  6E0B               	movwf	(??___fladd+2)^0,c
  4524   001500  5004               	movf	(___fladd@b+3)^0,w,c
  4525   001502  5808               	subwfb	(___fladd@a+3)^0,w,c
  4526   001504  6E0C               	movwf	(??___fladd+3)^0,c
  4527   001506  0EFF               	movlw	255
  4528   001508  2409               	addwf	??___fladd^0,w,c
  4529   00150A  6E01               	movwf	___fladd@b^0,c
  4530   00150C  0EFF               	movlw	255
  4531   00150E  200A               	addwfc	(??___fladd+1)^0,w,c
  4532   001510  6E02               	movwf	(___fladd@b+1)^0,c
  4533   001512  0EFF               	movlw	255
  4534   001514  200B               	addwfc	(??___fladd+2)^0,w,c
  4535   001516  6E03               	movwf	(___fladd@b+2)^0,c
  4536   001518  0EFF               	movlw	255
  4537   00151A  200C               	addwfc	(??___fladd+3)^0,w,c
  4538   00151C  6E04               	movwf	(___fladd@b+3)^0,c
  4539   00151E  0E80               	movlw	128
  4540   001520  1A0D               	xorwf	___fladd@signs^0,f,c
  4541   001522  6C10               	negf	___fladd@grs^0,c
  4542   001524  5010               	movf	___fladd@grs^0,w,c
  4543   001526  A4D8               	btfss	status,2,c
  4544   001528  EF98  F00A         	goto	u2051
  4545   00152C  EF9A  F00A         	goto	u2050
  4546   001530                     u2051:
  4547   001530  EFAA  F00A         	goto	l625
  4548   001534                     u2050:
  4549   001534  0E01               	movlw	1
  4550   001536  2601               	addwf	___fladd@b^0,f,c
  4551   001538  0E00               	movlw	0
  4552   00153A  2202               	addwfc	(___fladd@b+1)^0,f,c
  4553   00153C  2203               	addwfc	(___fladd@b+2)^0,f,c
  4554   00153E  2204               	addwfc	(___fladd@b+3)^0,f,c
  4555   001540  EFAA  F00A         	goto	l625
  4556   001544                     l2320:
  4557   001544  5005               	movf	___fladd@a^0,w,c
  4558   001546  5E01               	subwf	___fladd@b^0,f,c
  4559   001548  5006               	movf	(___fladd@a+1)^0,w,c
  4560   00154A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4561   00154C  5007               	movf	(___fladd@a+2)^0,w,c
  4562   00154E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4563   001550  5008               	movf	(___fladd@a+3)^0,w,c
  4564   001552  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4565   001554                     l625:
  4566   001554  5001               	movf	___fladd@b^0,w,c
  4567   001556  1002               	iorwf	(___fladd@b+1)^0,w,c
  4568   001558  1003               	iorwf	(___fladd@b+2)^0,w,c
  4569   00155A  1004               	iorwf	(___fladd@b+3)^0,w,c
  4570   00155C  A4D8               	btfss	status,2,c
  4571   00155E  EFB3  F00A         	goto	u2061
  4572   001562  EFB5  F00A         	goto	u2060
  4573   001566                     u2061:
  4574   001566  EFEA  F00A         	goto	l2344
  4575   00156A                     u2060:
  4576   00156A  5010               	movf	___fladd@grs^0,w,c
  4577   00156C  A4D8               	btfss	status,2,c
  4578   00156E  EFBB  F00A         	goto	u2071
  4579   001572  EFBD  F00A         	goto	u2070
  4580   001576                     u2071:
  4581   001576  EFEA  F00A         	goto	l2344
  4582   00157A                     u2070:
  4583   00157A  0E00               	movlw	0
  4584   00157C  6E01               	movwf	?___fladd^0,c
  4585   00157E  0E00               	movlw	0
  4586   001580  6E02               	movwf	(?___fladd+1)^0,c
  4587   001582  0E00               	movlw	0
  4588   001584  6E03               	movwf	(?___fladd+2)^0,c
  4589   001586  0E00               	movlw	0
  4590   001588  6E04               	movwf	(?___fladd+3)^0,c
  4591   00158A  EF85  F00B         	goto	l617
  4592   00158E                     l2328:
  4593   00158E  90D8               	bcf	status,0,c
  4594   001590  3601               	rlcf	___fladd@b^0,f,c
  4595   001592  3602               	rlcf	(___fladd@b+1)^0,f,c
  4596   001594  3603               	rlcf	(___fladd@b+2)^0,f,c
  4597   001596  3604               	rlcf	(___fladd@b+3)^0,f,c
  4598   001598  AE10               	btfss	___fladd@grs^0,7,c
  4599   00159A  EFD1  F00A         	goto	u2081
  4600   00159E  EFD3  F00A         	goto	u2080
  4601   0015A2                     u2081:
  4602   0015A2  EFD4  F00A         	goto	l2334
  4603   0015A6                     u2080:
  4604   0015A6  8001               	bsf	___fladd@b^0,0,c
  4605   0015A8                     l2334:
  4606   0015A8  A010               	btfss	___fladd@grs^0,0,c
  4607   0015AA  EFD9  F00A         	goto	u2091
  4608   0015AE  EFDB  F00A         	goto	u2090
  4609   0015B2                     u2091:
  4610   0015B2  EFDF  F00A         	goto	l2338
  4611   0015B6                     u2090:
  4612   0015B6  80D8               	bsf	status,0,c
  4613   0015B8  3610               	rlcf	___fladd@grs^0,f,c
  4614   0015BA  EFE1  F00A         	goto	l2340
  4615   0015BE                     l2338:
  4616   0015BE  90D8               	bcf	status,0,c
  4617   0015C0  3610               	rlcf	___fladd@grs^0,f,c
  4618   0015C2                     l2340:
  4619   0015C2  500F               	movf	___fladd@bexp^0,w,c
  4620   0015C4  B4D8               	btfsc	status,2,c
  4621   0015C6  EFE7  F00A         	goto	u2101
  4622   0015CA  EFE9  F00A         	goto	u2100
  4623   0015CE                     u2101:
  4624   0015CE  EFEA  F00A         	goto	l2344
  4625   0015D2                     u2100:
  4626   0015D2  060F               	decf	___fladd@bexp^0,f,c
  4627   0015D4                     l2344:
  4628   0015D4  AE03               	btfss	(___fladd@b+2)^0,7,c
  4629   0015D6  EFEF  F00A         	goto	u2111
  4630   0015DA  EFF1  F00A         	goto	u2110
  4631   0015DE                     u2111:
  4632   0015DE  EFC7  F00A         	goto	l2328
  4633   0015E2                     u2110:
  4634   0015E2                     l2346:
  4635   0015E2  0E00               	movlw	0
  4636   0015E4  6E0E               	movwf	___fladd@aexp^0,c
  4637   0015E6  AE10               	btfss	___fladd@grs^0,7,c
  4638   0015E8  EFF8  F00A         	goto	u2121
  4639   0015EC  EFFA  F00A         	goto	u2120
  4640   0015F0                     u2121:
  4641   0015F0  EF12  F00B         	goto	l634
  4642   0015F4                     u2120:
  4643   0015F4  C010  F009         	movff	___fladd@grs,??___fladd
  4644   0015F8  0E7F               	movlw	127
  4645   0015FA  1609               	andwf	??___fladd^0,f,c
  4646   0015FC  B4D8               	btfsc	status,2,c
  4647   0015FE  EF03  F00B         	goto	u2131
  4648   001602  EF05  F00B         	goto	u2130
  4649   001606                     u2131:
  4650   001606  EF09  F00B         	goto	l635
  4651   00160A                     u2130:
  4652   00160A                     l2352:
  4653   00160A  0E01               	movlw	1
  4654   00160C  6E0E               	movwf	___fladd@aexp^0,c
  4655   00160E  EF12  F00B         	goto	l634
  4656   001612                     l635:
  4657   001612  A001               	btfss	___fladd@b^0,0,c
  4658   001614  EF0E  F00B         	goto	u2141
  4659   001618  EF10  F00B         	goto	u2140
  4660   00161C                     u2141:
  4661   00161C  EF12  F00B         	goto	l634
  4662   001620                     u2140:
  4663   001620  EF05  F00B         	goto	l2352
  4664   001624                     l634:
  4665   001624  500E               	movf	___fladd@aexp^0,w,c
  4666   001626  B4D8               	btfsc	status,2,c
  4667   001628  EF18  F00B         	goto	u2151
  4668   00162C  EF1A  F00B         	goto	u2150
  4669   001630                     u2151:
  4670   001630  EF45  F00B         	goto	l2364
  4671   001634                     u2150:
  4672   001634  0E01               	movlw	1
  4673   001636  2601               	addwf	___fladd@b^0,f,c
  4674   001638  0E00               	movlw	0
  4675   00163A  2202               	addwfc	(___fladd@b+1)^0,f,c
  4676   00163C  2203               	addwfc	(___fladd@b+2)^0,f,c
  4677   00163E  2204               	addwfc	(___fladd@b+3)^0,f,c
  4678   001640  A004               	btfss	(___fladd@b+3)^0,0,c
  4679   001642  EF25  F00B         	goto	u2161
  4680   001646  EF27  F00B         	goto	u2160
  4681   00164A                     u2161:
  4682   00164A  EF45  F00B         	goto	l2364
  4683   00164E                     u2160:
  4684   00164E  C001  F009         	movff	___fladd@b,??___fladd
  4685   001652  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4686   001656  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4687   00165A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4688   00165E  340C               	rlcf	(??___fladd+3)^0,w,c
  4689   001660  320C               	rrcf	(??___fladd+3)^0,f,c
  4690   001662  320B               	rrcf	(??___fladd+2)^0,f,c
  4691   001664  320A               	rrcf	(??___fladd+1)^0,f,c
  4692   001666  3209               	rrcf	??___fladd^0,f,c
  4693   001668  C009  F001         	movff	??___fladd,___fladd@b
  4694   00166C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4695   001670  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4696   001674  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4697   001678  280F               	incf	___fladd@bexp^0,w,c
  4698   00167A  B4D8               	btfsc	status,2,c
  4699   00167C  EF42  F00B         	goto	u2171
  4700   001680  EF44  F00B         	goto	u2170
  4701   001684                     u2171:
  4702   001684  EF45  F00B         	goto	l2364
  4703   001688                     u2170:
  4704   001688  2A0F               	incf	___fladd@bexp^0,f,c
  4705   00168A                     l2364:
  4706   00168A  280F               	incf	___fladd@bexp^0,w,c
  4707   00168C  B4D8               	btfsc	status,2,c
  4708   00168E  EF4B  F00B         	goto	u2181
  4709   001692  EF4D  F00B         	goto	u2180
  4710   001696                     u2181:
  4711   001696  EF55  F00B         	goto	l2368
  4712   00169A                     u2180:
  4713   00169A  500F               	movf	___fladd@bexp^0,w,c
  4714   00169C  A4D8               	btfss	status,2,c
  4715   00169E  EF53  F00B         	goto	u2191
  4716   0016A2  EF55  F00B         	goto	u2190
  4717   0016A6                     u2191:
  4718   0016A6  EF67  F00B         	goto	l2372
  4719   0016AA                     u2190:
  4720   0016AA                     l2368:
  4721   0016AA  0E00               	movlw	0
  4722   0016AC  6E01               	movwf	___fladd@b^0,c
  4723   0016AE  0E00               	movlw	0
  4724   0016B0  6E02               	movwf	(___fladd@b+1)^0,c
  4725   0016B2  0E00               	movlw	0
  4726   0016B4  6E03               	movwf	(___fladd@b+2)^0,c
  4727   0016B6  0E00               	movlw	0
  4728   0016B8  6E04               	movwf	(___fladd@b+3)^0,c
  4729   0016BA  500F               	movf	___fladd@bexp^0,w,c
  4730   0016BC  A4D8               	btfss	status,2,c
  4731   0016BE  EF63  F00B         	goto	u2201
  4732   0016C2  EF65  F00B         	goto	u2200
  4733   0016C6                     u2201:
  4734   0016C6  EF67  F00B         	goto	l2372
  4735   0016CA                     u2200:
  4736   0016CA  0E00               	movlw	0
  4737   0016CC  6E0D               	movwf	___fladd@signs^0,c
  4738   0016CE                     l2372:
  4739   0016CE  A00F               	btfss	___fladd@bexp^0,0,c
  4740   0016D0  EF6C  F00B         	goto	u2211
  4741   0016D4  EF6E  F00B         	goto	u2210
  4742   0016D8                     u2211:
  4743   0016D8  EF71  F00B         	goto	l2376
  4744   0016DC                     u2210:
  4745   0016DC  8E03               	bsf	(___fladd@b+2)^0,7,c
  4746   0016DE  EF72  F00B         	goto	l2378
  4747   0016E2                     l2376:
  4748   0016E2  9E03               	bcf	(___fladd@b+2)^0,7,c
  4749   0016E4                     l2378:
  4750   0016E4  90D8               	bcf	status,0,c
  4751   0016E6  300F               	rrcf	___fladd@bexp^0,w,c
  4752   0016E8  6E04               	movwf	(___fladd@b+3)^0,c
  4753   0016EA  AE0D               	btfss	___fladd@signs^0,7,c
  4754   0016EC  EF7A  F00B         	goto	u2221
  4755   0016F0  EF7C  F00B         	goto	u2220
  4756   0016F4                     u2221:
  4757   0016F4  EF7D  F00B         	goto	l2384
  4758   0016F8                     u2220:
  4759   0016F8  8E04               	bsf	(___fladd@b+3)^0,7,c
  4760   0016FA                     l2384:
  4761   0016FA  C001  F001         	movff	___fladd@b,?___fladd
  4762   0016FE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4763   001702  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4764   001706  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4765   00170A                     l617:
  4766   00170A  0012               	return		;funcret
  4767   00170C                     __end_of___fladd:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function ___flneg *****************
  4771 ;; Defined at:
  4772 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  f1              4    0[COMRAM] unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;		None
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  4    0[COMRAM] unsigned char 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4786 ;;      Params:         4       0       0       0       0       0       0       0       0
  4787 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4789 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4790 ;;Total ram usage:        4 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_efgtoa
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text20
  4800   002F40                     __ptext20:
  4801                           	callstack 0
  4802   002F40                     ___flneg:
  4803                           	callstack 26
  4804   002F40  5001               	movf	___flneg@f1^0,w,c
  4805   002F42  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4806   002F44  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4807   002F46  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4808   002F48  B4D8               	btfsc	status,2,c
  4809   002F4A  EFA9  F017         	goto	u2741
  4810   002F4E  EFAB  F017         	goto	u2740
  4811   002F52                     u2741:
  4812   002F52  EFB3  F017         	goto	l2718
  4813   002F56                     u2740:
  4814   002F56  0E00               	movlw	0
  4815   002F58  1A01               	xorwf	___flneg@f1^0,f,c
  4816   002F5A  0E00               	movlw	0
  4817   002F5C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4818   002F5E  0E00               	movlw	0
  4819   002F60  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4820   002F62  0E80               	movlw	128
  4821   002F64  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4822   002F66                     l2718:
  4823   002F66  C001  F001         	movff	___flneg@f1,?___flneg
  4824   002F6A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4825   002F6E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4826   002F72  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4827   002F76  0012               	return		;funcret
  4828   002F78                     __end_of___flneg:
  4829                           	callstack 0
  4830                           
  4831 ;; *************** function ___flge *****************
  4832 ;; Defined at:
  4833 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  ff1             4   25[COMRAM] unsigned char 
  4836 ;;  ff2             4   29[COMRAM] unsigned char 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;		None               void
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4848 ;;      Params:         8       0       0       0       0       0       0       0       0
  4849 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4850 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4851 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4852 ;;Total ram usage:       12 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; This function calls:
  4855 ;;		Nothing
  4856 ;; This function is called by:
  4857 ;;		_efgtoa
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text21
  4862   002602                     __ptext21:
  4863                           	callstack 0
  4864   002602                     ___flge:
  4865                           	callstack 26
  4866   002602  0E00               	movlw	0
  4867   002604  141A               	andwf	___flge@ff1^0,w,c
  4868   002606  6E22               	movwf	??___flge^0,c
  4869   002608  0E00               	movlw	0
  4870   00260A  141B               	andwf	(___flge@ff1+1)^0,w,c
  4871   00260C  6E23               	movwf	(??___flge+1)^0,c
  4872   00260E  0E80               	movlw	128
  4873   002610  141C               	andwf	(___flge@ff1+2)^0,w,c
  4874   002612  6E24               	movwf	(??___flge+2)^0,c
  4875   002614  0E7F               	movlw	127
  4876   002616  141D               	andwf	(___flge@ff1+3)^0,w,c
  4877   002618  6E25               	movwf	(??___flge+3)^0,c
  4878   00261A  5022               	movf	??___flge^0,w,c
  4879   00261C  1023               	iorwf	(??___flge+1)^0,w,c
  4880   00261E  1024               	iorwf	(??___flge+2)^0,w,c
  4881   002620  1025               	iorwf	(??___flge+3)^0,w,c
  4882   002622  A4D8               	btfss	status,2,c
  4883   002624  EF16  F013         	goto	u2691
  4884   002628  EF18  F013         	goto	u2690
  4885   00262C                     u2691:
  4886   00262C  EF20  F013         	goto	l2696
  4887   002630                     u2690:
  4888   002630  0E00               	movlw	0
  4889   002632  6E1A               	movwf	___flge@ff1^0,c
  4890   002634  0E00               	movlw	0
  4891   002636  6E1B               	movwf	(___flge@ff1+1)^0,c
  4892   002638  0E00               	movlw	0
  4893   00263A  6E1C               	movwf	(___flge@ff1+2)^0,c
  4894   00263C  0E00               	movlw	0
  4895   00263E  6E1D               	movwf	(___flge@ff1+3)^0,c
  4896   002640                     l2696:
  4897   002640  0E00               	movlw	0
  4898   002642  141E               	andwf	___flge@ff2^0,w,c
  4899   002644  6E22               	movwf	??___flge^0,c
  4900   002646  0E00               	movlw	0
  4901   002648  141F               	andwf	(___flge@ff2+1)^0,w,c
  4902   00264A  6E23               	movwf	(??___flge+1)^0,c
  4903   00264C  0E80               	movlw	128
  4904   00264E  1420               	andwf	(___flge@ff2+2)^0,w,c
  4905   002650  6E24               	movwf	(??___flge+2)^0,c
  4906   002652  0E7F               	movlw	127
  4907   002654  1421               	andwf	(___flge@ff2+3)^0,w,c
  4908   002656  6E25               	movwf	(??___flge+3)^0,c
  4909   002658  5022               	movf	??___flge^0,w,c
  4910   00265A  1023               	iorwf	(??___flge+1)^0,w,c
  4911   00265C  1024               	iorwf	(??___flge+2)^0,w,c
  4912   00265E  1025               	iorwf	(??___flge+3)^0,w,c
  4913   002660  A4D8               	btfss	status,2,c
  4914   002662  EF35  F013         	goto	u2701
  4915   002666  EF37  F013         	goto	u2700
  4916   00266A                     u2701:
  4917   00266A  EF3F  F013         	goto	l2700
  4918   00266E                     u2700:
  4919   00266E  0E00               	movlw	0
  4920   002670  6E1E               	movwf	___flge@ff2^0,c
  4921   002672  0E00               	movlw	0
  4922   002674  6E1F               	movwf	(___flge@ff2+1)^0,c
  4923   002676  0E00               	movlw	0
  4924   002678  6E20               	movwf	(___flge@ff2+2)^0,c
  4925   00267A  0E00               	movlw	0
  4926   00267C  6E21               	movwf	(___flge@ff2+3)^0,c
  4927   00267E                     l2700:
  4928   00267E  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  4929   002680  EF44  F013         	goto	u2711
  4930   002684  EF46  F013         	goto	u2710
  4931   002688                     u2711:
  4932   002688  EF4F  F013         	goto	l2704
  4933   00268C                     u2710:
  4934   00268C  6C1A               	negf	___flge@ff1^0,c
  4935   00268E  1E1B               	comf	(___flge@ff1+1)^0,f,c
  4936   002690  B0D8               	btfsc	status,0,c
  4937   002692  2A1B               	incf	(___flge@ff1+1)^0,f,c
  4938   002694  1E1C               	comf	(___flge@ff1+2)^0,f,c
  4939   002696  B0D8               	btfsc	status,0,c
  4940   002698  2A1C               	incf	(___flge@ff1+2)^0,f,c
  4941   00269A  0E80               	movlw	128
  4942   00269C  561D               	subfwb	(___flge@ff1+3)^0,f,c
  4943   00269E                     l2704:
  4944   00269E  AE21               	btfss	(___flge@ff2+3)^0,7,c
  4945   0026A0  EF54  F013         	goto	u2721
  4946   0026A4  EF56  F013         	goto	u2720
  4947   0026A8                     u2721:
  4948   0026A8  EF5F  F013         	goto	l345
  4949   0026AC                     u2720:
  4950   0026AC  6C1E               	negf	___flge@ff2^0,c
  4951   0026AE  1E1F               	comf	(___flge@ff2+1)^0,f,c
  4952   0026B0  B0D8               	btfsc	status,0,c
  4953   0026B2  2A1F               	incf	(___flge@ff2+1)^0,f,c
  4954   0026B4  1E20               	comf	(___flge@ff2+2)^0,f,c
  4955   0026B6  B0D8               	btfsc	status,0,c
  4956   0026B8  2A20               	incf	(___flge@ff2+2)^0,f,c
  4957   0026BA  0E80               	movlw	128
  4958   0026BC  5621               	subfwb	(___flge@ff2+3)^0,f,c
  4959   0026BE                     l345:
  4960   0026BE  0E00               	movlw	0
  4961   0026C0  1A1A               	xorwf	___flge@ff1^0,f,c
  4962   0026C2  0E00               	movlw	0
  4963   0026C4  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  4964   0026C6  0E00               	movlw	0
  4965   0026C8  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  4966   0026CA  0E80               	movlw	128
  4967   0026CC  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  4968   0026CE  0E00               	movlw	0
  4969   0026D0  1A1E               	xorwf	___flge@ff2^0,f,c
  4970   0026D2  0E00               	movlw	0
  4971   0026D4  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  4972   0026D6  0E00               	movlw	0
  4973   0026D8  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  4974   0026DA  0E80               	movlw	128
  4975   0026DC  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  4976   0026DE  501E               	movf	___flge@ff2^0,w,c
  4977   0026E0  5C1A               	subwf	___flge@ff1^0,w,c
  4978   0026E2  501F               	movf	(___flge@ff2+1)^0,w,c
  4979   0026E4  581B               	subwfb	(___flge@ff1+1)^0,w,c
  4980   0026E6  5020               	movf	(___flge@ff2+2)^0,w,c
  4981   0026E8  581C               	subwfb	(___flge@ff1+2)^0,w,c
  4982   0026EA  5021               	movf	(___flge@ff2+3)^0,w,c
  4983   0026EC  581D               	subwfb	(___flge@ff1+3)^0,w,c
  4984   0026EE  B0D8               	btfsc	status,0,c
  4985   0026F0  EF7C  F013         	goto	u2731
  4986   0026F4  EF7E  F013         	goto	u2730
  4987   0026F8                     u2731:
  4988   0026F8  EF81  F013         	goto	l2710
  4989   0026FC                     u2730:
  4990   0026FC  90D8               	bcf	status,0,c
  4991   0026FE  EF82  F013         	goto	l350
  4992   002702                     l2710:
  4993   002702  80D8               	bsf	status,0,c
  4994   002704                     l350:
  4995   002704  0012               	return		;funcret
  4996   002706                     __end_of___flge:
  4997                           	callstack 0
  4998                           
  4999 ;; *************** function ___fleq *****************
  5000 ;; Defined at:
  5001 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  ff1             4    0[COMRAM] unsigned char 
  5004 ;;  ff2             4    4[COMRAM] unsigned char 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;		None               void
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5016 ;;      Params:         8       0       0       0       0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5018 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5019 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5020 ;;Total ram usage:       12 bytes
  5021 ;; Hardware stack levels used: 1
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_efgtoa
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text22
  5030   002994                     __ptext22:
  5031                           	callstack 0
  5032   002994                     ___fleq:
  5033                           	callstack 26
  5034   002994  0E00               	movlw	0
  5035   002996  1401               	andwf	___fleq@ff1^0,w,c
  5036   002998  6E09               	movwf	??___fleq^0,c
  5037   00299A  0E00               	movlw	0
  5038   00299C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5039   00299E  6E0A               	movwf	(??___fleq+1)^0,c
  5040   0029A0  0E80               	movlw	128
  5041   0029A2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5042   0029A4  6E0B               	movwf	(??___fleq+2)^0,c
  5043   0029A6  0E7F               	movlw	127
  5044   0029A8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5045   0029AA  6E0C               	movwf	(??___fleq+3)^0,c
  5046   0029AC  5009               	movf	??___fleq^0,w,c
  5047   0029AE  100A               	iorwf	(??___fleq+1)^0,w,c
  5048   0029B0  100B               	iorwf	(??___fleq+2)^0,w,c
  5049   0029B2  100C               	iorwf	(??___fleq+3)^0,w,c
  5050   0029B4  A4D8               	btfss	status,2,c
  5051   0029B6  EFDF  F014         	goto	u2661
  5052   0029BA  EFE1  F014         	goto	u2660
  5053   0029BE                     u2661:
  5054   0029BE  EFE9  F014         	goto	l2680
  5055   0029C2                     u2660:
  5056   0029C2  0E00               	movlw	0
  5057   0029C4  6E01               	movwf	___fleq@ff1^0,c
  5058   0029C6  0E00               	movlw	0
  5059   0029C8  6E02               	movwf	(___fleq@ff1+1)^0,c
  5060   0029CA  0E00               	movlw	0
  5061   0029CC  6E03               	movwf	(___fleq@ff1+2)^0,c
  5062   0029CE  0E00               	movlw	0
  5063   0029D0  6E04               	movwf	(___fleq@ff1+3)^0,c
  5064   0029D2                     l2680:
  5065   0029D2  0E00               	movlw	0
  5066   0029D4  1405               	andwf	___fleq@ff2^0,w,c
  5067   0029D6  6E09               	movwf	??___fleq^0,c
  5068   0029D8  0E00               	movlw	0
  5069   0029DA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5070   0029DC  6E0A               	movwf	(??___fleq+1)^0,c
  5071   0029DE  0E80               	movlw	128
  5072   0029E0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5073   0029E2  6E0B               	movwf	(??___fleq+2)^0,c
  5074   0029E4  0E7F               	movlw	127
  5075   0029E6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5076   0029E8  6E0C               	movwf	(??___fleq+3)^0,c
  5077   0029EA  5009               	movf	??___fleq^0,w,c
  5078   0029EC  100A               	iorwf	(??___fleq+1)^0,w,c
  5079   0029EE  100B               	iorwf	(??___fleq+2)^0,w,c
  5080   0029F0  100C               	iorwf	(??___fleq+3)^0,w,c
  5081   0029F2  A4D8               	btfss	status,2,c
  5082   0029F4  EFFE  F014         	goto	u2671
  5083   0029F8  EF00  F015         	goto	u2670
  5084   0029FC                     u2671:
  5085   0029FC  EF08  F015         	goto	l2684
  5086   002A00                     u2670:
  5087   002A00  0E00               	movlw	0
  5088   002A02  6E05               	movwf	___fleq@ff2^0,c
  5089   002A04  0E00               	movlw	0
  5090   002A06  6E06               	movwf	(___fleq@ff2+1)^0,c
  5091   002A08  0E00               	movlw	0
  5092   002A0A  6E07               	movwf	(___fleq@ff2+2)^0,c
  5093   002A0C  0E00               	movlw	0
  5094   002A0E  6E08               	movwf	(___fleq@ff2+3)^0,c
  5095   002A10                     l2684:
  5096   002A10  5005               	movf	___fleq@ff2^0,w,c
  5097   002A12  1801               	xorwf	___fleq@ff1^0,w,c
  5098   002A14  E10F               	bnz	u2680
  5099   002A16  5006               	movf	(___fleq@ff2+1)^0,w,c
  5100   002A18  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5101   002A1A  E10C               	bnz	u2680
  5102   002A1C  5007               	movf	(___fleq@ff2+2)^0,w,c
  5103   002A1E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5104   002A20  E109               	bnz	u2680
  5105   002A22  5008               	movf	(___fleq@ff2+3)^0,w,c
  5106   002A24  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5107   002A26  B4D8               	btfsc	status,2,c
  5108   002A28  EF18  F015         	goto	u2681
  5109   002A2C  EF1A  F015         	goto	u2680
  5110   002A30                     u2681:
  5111   002A30  EF1D  F015         	goto	l2688
  5112   002A34                     u2680:
  5113   002A34  90D8               	bcf	status,0,c
  5114   002A36  EF1E  F015         	goto	l339
  5115   002A3A                     l2688:
  5116   002A3A  80D8               	bsf	status,0,c
  5117   002A3C                     l339:
  5118   002A3C  0012               	return		;funcret
  5119   002A3E                     __end_of___fleq:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _inicializa_lcd *****************
  5123 ;; Defined at:
  5124 ;;		line 43 in file "lcd.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5138 ;;      Params:         0       0       0       0       0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5140 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5141 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5142 ;;Total ram usage:        1 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 3
  5145 ;; This function calls:
  5146 ;;		_envia_byte_lcd
  5147 ;;		_envia_nibble_lcd
  5148 ;;		_limpa_lcd
  5149 ;; This function is called by:
  5150 ;;		_main
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text23
  5155   002C64                     __ptext23:
  5156                           	callstack 0
  5157   002C64                     _inicializa_lcd:
  5158                           	callstack 27
  5159   002C64                     
  5160                           ;lcd.c: 45:  PORTDbits.RD4 = 0;
  5161   002C64  9883               	bcf	131,4,c	;volatile
  5162                           
  5163                           ;lcd.c: 46:  PORTDbits.RD5 = 0;
  5164   002C66  9A83               	bcf	131,5,c	;volatile
  5165                           
  5166                           ;lcd.c: 47:  PORTDbits.RD6 = 0;
  5167   002C68  9C83               	bcf	131,6,c	;volatile
  5168                           
  5169                           ;lcd.c: 48:  PORTDbits.RD7 = 0;
  5170   002C6A  9E83               	bcf	131,7,c	;volatile
  5171   002C6C                     
  5172                           ;lcd.c: 49:  _delay((unsigned long)((5)*(4000000/4000.0)));
  5173   002C6C  0E07               	movlw	7
  5174   002C6E  6E06               	movwf	??_inicializa_lcd^0,c
  5175   002C70  0E7D               	movlw	125
  5176   002C72                     u3587:
  5177   002C72  2EE8               	decfsz	wreg,f,c
  5178   002C74  D7FE               	bra	u3587
  5179   002C76  2E06               	decfsz	??_inicializa_lcd^0,f,c
  5180   002C78  D7FC               	bra	u3587
  5181   002C7A  F000               	nop	
  5182   002C7C                     
  5183                           ;lcd.c: 50:  envia_nibble_lcd(0x03);
  5184   002C7C  0E03               	movlw	3
  5185   002C7E  ECB5  F015         	call	_envia_nibble_lcd
  5186   002C82                     
  5187                           ;lcd.c: 51:  _delay((unsigned long)((5)*(4000000/4000.0)));
  5188   002C82  0E07               	movlw	7
  5189   002C84  6E06               	movwf	??_inicializa_lcd^0,c
  5190   002C86  0E7D               	movlw	125
  5191   002C88                     u3597:
  5192   002C88  2EE8               	decfsz	wreg,f,c
  5193   002C8A  D7FE               	bra	u3597
  5194   002C8C  2E06               	decfsz	??_inicializa_lcd^0,f,c
  5195   002C8E  D7FC               	bra	u3597
  5196   002C90  F000               	nop	
  5197                           
  5198                           ;lcd.c: 52:  envia_nibble_lcd(0x03);
  5199   002C92  0E03               	movlw	3
  5200   002C94  ECB5  F015         	call	_envia_nibble_lcd
  5201   002C98                     
  5202                           ;lcd.c: 53:  _delay((unsigned long)((5)*(4000000/4000.0)));
  5203   002C98  0E07               	movlw	7
  5204   002C9A  6E06               	movwf	??_inicializa_lcd^0,c
  5205   002C9C  0E7D               	movlw	125
  5206   002C9E                     u3607:
  5207   002C9E  2EE8               	decfsz	wreg,f,c
  5208   002CA0  D7FE               	bra	u3607
  5209   002CA2  2E06               	decfsz	??_inicializa_lcd^0,f,c
  5210   002CA4  D7FC               	bra	u3607
  5211   002CA6  F000               	nop	
  5212   002CA8                     
  5213                           ;lcd.c: 54:  envia_nibble_lcd(0x02);
  5214   002CA8  0E02               	movlw	2
  5215   002CAA  ECB5  F015         	call	_envia_nibble_lcd
  5216                           
  5217                           ;lcd.c: 56:  _delay((unsigned long)((1)*(4000000/4000.0)));
  5218   002CAE  0EC8               	movlw	200
  5219   002CB0                     u3617:
  5220   002CB0  D000               	nop2	
  5221   002CB2  2EE8               	decfsz	wreg,f,c
  5222   002CB4  D7FD               	bra	u3617
  5223   002CB6                     
  5224                           ;lcd.c: 57:  envia_byte_lcd(0,0x28);
  5225   002CB6  0E28               	movlw	40
  5226   002CB8  6E03               	movwf	envia_byte_lcd@dado^0,c
  5227   002CBA  0E00               	movlw	0
  5228   002CBC  ECBC  F017         	call	_envia_byte_lcd
  5229   002CC0                     
  5230                           ;lcd.c: 59:  envia_byte_lcd(0,0x0c);
  5231   002CC0  0E0C               	movlw	12
  5232   002CC2  6E03               	movwf	envia_byte_lcd@dado^0,c
  5233   002CC4  0E00               	movlw	0
  5234   002CC6  ECBC  F017         	call	_envia_byte_lcd
  5235   002CCA                     
  5236                           ;lcd.c: 60:  limpa_lcd();
  5237   002CCA  ECFB  F017         	call	_limpa_lcd	;wreg free
  5238   002CCE                     
  5239                           ;lcd.c: 61:  envia_byte_lcd(0,0x06);
  5240   002CCE  0E06               	movlw	6
  5241   002CD0  6E03               	movwf	envia_byte_lcd@dado^0,c
  5242   002CD2  0E00               	movlw	0
  5243   002CD4  ECBC  F017         	call	_envia_byte_lcd
  5244   002CD8  0012               	return		;funcret
  5245   002CDA                     __end_of_inicializa_lcd:
  5246                           	callstack 0
  5247                           
  5248 ;; *************** function _limpa_lcd *****************
  5249 ;; Defined at:
  5250 ;;		line 36 in file "lcd.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5266 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5267 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5268 ;;Total ram usage:        1 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 2
  5271 ;; This function calls:
  5272 ;;		_envia_byte_lcd
  5273 ;; This function is called by:
  5274 ;;		_inicializa_lcd
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text24
  5279   002FF6                     __ptext24:
  5280                           	callstack 0
  5281   002FF6                     _limpa_lcd:
  5282                           	callstack 27
  5283   002FF6                     
  5284                           ;lcd.c: 38:   envia_byte_lcd(0,0x01);
  5285   002FF6  0E01               	movlw	1
  5286   002FF8  6E03               	movwf	envia_byte_lcd@dado^0,c
  5287   002FFA  0E00               	movlw	0
  5288   002FFC  ECBC  F017         	call	_envia_byte_lcd
  5289   003000                     
  5290                           ;lcd.c: 39:   _delay((unsigned long)((2)*(4000000/4000.0)));
  5291   003000  0E03               	movlw	3
  5292   003002  6E05               	movwf	??_limpa_lcd^0,c
  5293   003004  0E98               	movlw	152
  5294   003006                     u3627:
  5295   003006  2EE8               	decfsz	wreg,f,c
  5296   003008  D7FE               	bra	u3627
  5297   00300A  2E05               	decfsz	??_limpa_lcd^0,f,c
  5298   00300C  D7FC               	bra	u3627
  5299   00300E  0012               	return		;funcret
  5300   003010                     __end_of_limpa_lcd:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function _caracter_inicio *****************
  5304 ;; Defined at:
  5305 ;;		line 67 in file "lcd.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  linha           1    wreg     unsigned char 
  5308 ;;  coluna          1    4[COMRAM] unsigned char 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  linha           1    5[COMRAM] unsigned char 
  5311 ;;  posicao         1    6[COMRAM] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5321 ;;      Params:         1       0       0       0       0       0       0       0       0
  5322 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5324 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5325 ;;Total ram usage:        3 bytes
  5326 ;; Hardware stack levels used: 1
  5327 ;; Hardware stack levels required when called: 2
  5328 ;; This function calls:
  5329 ;;		_envia_byte_lcd
  5330 ;; This function is called by:
  5331 ;;		_main
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text25
  5336   002EBE                     __ptext25:
  5337                           	callstack 0
  5338   002EBE                     _caracter_inicio:
  5339                           	callstack 28
  5340                           
  5341                           ;incstack = 0
  5342                           ;caracter_inicio@linha stored from wreg
  5343   002EBE  6E06               	movwf	caracter_inicio@linha^0,c
  5344   002EC0                     
  5345                           ;lcd.c: 67:  void caracter_inicio(char linha,char coluna);lcd.c: 68: {;lcd.c: 69:  char 
      +                          posicao=0;
  5346   002EC0  0E00               	movlw	0
  5347   002EC2  6E07               	movwf	caracter_inicio@posicao^0,c
  5348   002EC4                     
  5349                           ;lcd.c: 70:  if(linha == 1)
  5350   002EC4  0406               	decf	caracter_inicio@linha^0,w,c
  5351   002EC6  A4D8               	btfss	status,2,c
  5352   002EC8  EF68  F017         	goto	u3551
  5353   002ECC  EF6A  F017         	goto	u3550
  5354   002ED0                     u3551:
  5355   002ED0  EF6C  F017         	goto	l3250
  5356   002ED4                     u3550:
  5357   002ED4                     
  5358                           ;lcd.c: 71: {;lcd.c: 72:  posicao=0x80;
  5359   002ED4  0E80               	movlw	128
  5360   002ED6  6E07               	movwf	caracter_inicio@posicao^0,c
  5361   002ED8                     l3250:
  5362                           
  5363                           ;lcd.c: 74:  if(linha == 2)
  5364   002ED8  0E02               	movlw	2
  5365   002EDA  1806               	xorwf	caracter_inicio@linha^0,w,c
  5366   002EDC  A4D8               	btfss	status,2,c
  5367   002EDE  EF73  F017         	goto	u3561
  5368   002EE2  EF75  F017         	goto	u3560
  5369   002EE6                     u3561:
  5370   002EE6  EF77  F017         	goto	l3254
  5371   002EEA                     u3560:
  5372   002EEA                     
  5373                           ;lcd.c: 75: {;lcd.c: 76:  posicao=0xc0;
  5374   002EEA  0EC0               	movlw	192
  5375   002EEC  6E07               	movwf	caracter_inicio@posicao^0,c
  5376   002EEE                     l3254:
  5377                           
  5378                           ;lcd.c: 79: posicao=posicao+coluna;
  5379   002EEE  5007               	movf	caracter_inicio@posicao^0,w,c
  5380   002EF0  2405               	addwf	caracter_inicio@coluna^0,w,c
  5381   002EF2  6E07               	movwf	caracter_inicio@posicao^0,c
  5382   002EF4                     
  5383                           ;lcd.c: 81: envia_byte_lcd(0,posicao);
  5384   002EF4  C007  F003         	movff	caracter_inicio@posicao,envia_byte_lcd@dado
  5385   002EF8  0E00               	movlw	0
  5386   002EFA  ECBC  F017         	call	_envia_byte_lcd
  5387   002EFE  0012               	return		;funcret
  5388   002F00                     __end_of_caracter_inicio:
  5389                           	callstack 0
  5390                           
  5391 ;; *************** function _envia_byte_lcd *****************
  5392 ;; Defined at:
  5393 ;;		line 20 in file "lcd.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  endereco        1    wreg     unsigned char 
  5396 ;;  dado            1    2[COMRAM] unsigned char 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  endereco        1    3[COMRAM] unsigned char 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, status,2, status,0, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5408 ;;      Params:         1       0       0       0       0       0       0       0       0
  5409 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5411 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5412 ;;Total ram usage:        2 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 1
  5415 ;; This function calls:
  5416 ;;		_envia_nibble_lcd
  5417 ;; This function is called by:
  5418 ;;		_escreve_lcd
  5419 ;;		_limpa_lcd
  5420 ;;		_inicializa_lcd
  5421 ;;		_caracter_inicio
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text26
  5426   002F78                     __ptext26:
  5427                           	callstack 0
  5428   002F78                     _envia_byte_lcd:
  5429                           	callstack 23
  5430                           
  5431                           ;incstack = 0
  5432                           ;envia_byte_lcd@endereco stored from wreg
  5433   002F78  6E04               	movwf	envia_byte_lcd@endereco^0,c
  5434   002F7A                     
  5435                           ;lcd.c: 20:  void envia_byte_lcd(char endereco,char dado);lcd.c: 21: {;lcd.c: 22:  PORTD
      +                          bits.RD0 = endereco;
  5436   002F7A  B004               	btfsc	envia_byte_lcd@endereco^0,0,c
  5437   002F7C  D002               	bra	u1795
  5438   002F7E  9083               	bcf	131,0,c	;volatile
  5439   002F80  D001               	bra	u1796
  5440   002F82                     u1795:
  5441   002F82  8083               	bsf	131,0,c	;volatile
  5442   002F84                     u1796:
  5443   002F84                     
  5444                           ;lcd.c: 23:  _delay((unsigned long)((100)*(4000000/4000000.0)));
  5445   002F84  0E21               	movlw	33
  5446   002F86                     u3637:
  5447   002F86  2EE8               	decfsz	wreg,f,c
  5448   002F88  D7FE               	bra	u3637
  5449   002F8A  F000               	nop	
  5450   002F8C                     
  5451                           ;lcd.c: 24:  PORTDbits.RD1 = 0;
  5452   002F8C  9283               	bcf	131,1,c	;volatile
  5453   002F8E                     
  5454                           ;lcd.c: 25:  envia_nibble_lcd(dado>>4);
  5455   002F8E  3803               	swapf	envia_byte_lcd@dado^0,w,c
  5456   002F90  0B0F               	andlw	15
  5457   002F92  ECB5  F015         	call	_envia_nibble_lcd
  5458   002F96                     
  5459                           ;lcd.c: 26:  envia_nibble_lcd(dado & 0x0f);
  5460   002F96  5003               	movf	envia_byte_lcd@dado^0,w,c
  5461   002F98  0B0F               	andlw	15
  5462   002F9A  ECB5  F015         	call	_envia_nibble_lcd
  5463   002F9E                     
  5464                           ;lcd.c: 27:  _delay((unsigned long)((40)*(4000000/4000000.0)));
  5465   002F9E  0E0D               	movlw	13
  5466   002FA0                     u3647:
  5467   002FA0  2EE8               	decfsz	wreg,f,c
  5468   002FA2  D7FE               	bra	u3647
  5469   002FA4  F000               	nop	
  5470   002FA6  0012               	return		;funcret
  5471   002FA8                     __end_of_envia_byte_lcd:
  5472                           	callstack 0
  5473                           
  5474 ;; *************** function _envia_nibble_lcd *****************
  5475 ;; Defined at:
  5476 ;;		line 4 in file "lcd.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  dado            1    wreg     unsigned char 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  dado            1    1[COMRAM] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2, status,0
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0
  5491 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5492 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5493 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5494 ;;Total ram usage:        2 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_envia_byte_lcd
  5500 ;;		_inicializa_lcd
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text27
  5505   002B6A                     __ptext27:
  5506                           	callstack 0
  5507   002B6A                     _envia_nibble_lcd:
  5508                           	callstack 23
  5509                           
  5510                           ;incstack = 0
  5511                           ;envia_nibble_lcd@dado stored from wreg
  5512   002B6A  6E02               	movwf	envia_nibble_lcd@dado^0,c
  5513   002B6C                     
  5514                           ;lcd.c: 4: void envia_nibble_lcd(char dado);lcd.c: 5: {;lcd.c: 6:   PORTDbits.RD4 = dado
      +                           & 0x01;
  5515   002B6C  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  5516   002B70  0E01               	movlw	1
  5517   002B72  1601               	andwf	??_envia_nibble_lcd^0,f,c
  5518   002B74  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  5519   002B76  5083               	movf	131,w,c	;volatile
  5520   002B78  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  5521   002B7A  0BEF               	andlw	-17
  5522   002B7C  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  5523   002B7E  6E83               	movwf	131,c	;volatile
  5524                           
  5525                           ;lcd.c: 7:   PORTDbits.RD5 = (dado >> 1) & 0x01;
  5526   002B80  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  5527   002B84  90D8               	bcf	status,0,c
  5528   002B86  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  5529   002B88  0E01               	movlw	1
  5530   002B8A  1601               	andwf	??_envia_nibble_lcd^0,f,c
  5531   002B8C  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  5532   002B8E  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  5533   002B90  5083               	movf	131,w,c	;volatile
  5534   002B92  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  5535   002B94  0BDF               	andlw	-33
  5536   002B96  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  5537   002B98  6E83               	movwf	131,c	;volatile
  5538                           
  5539                           ;lcd.c: 8:   PORTDbits.RD6 = (dado >> 2) & 0x01;
  5540   002B9A  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  5541   002B9E  90D8               	bcf	status,0,c
  5542   002BA0  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  5543   002BA2  90D8               	bcf	status,0,c
  5544   002BA4  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  5545   002BA6  0E01               	movlw	1
  5546   002BA8  1601               	andwf	??_envia_nibble_lcd^0,f,c
  5547   002BAA  3A01               	swapf	??_envia_nibble_lcd^0,f,c
  5548   002BAC  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  5549   002BAE  4601               	rlncf	??_envia_nibble_lcd^0,f,c
  5550   002BB0  5083               	movf	131,w,c	;volatile
  5551   002BB2  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  5552   002BB4  0BBF               	andlw	-65
  5553   002BB6  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  5554   002BB8  6E83               	movwf	131,c	;volatile
  5555                           
  5556                           ;lcd.c: 9:   PORTDbits.RD7 = (dado >> 3) & 0x01;
  5557   002BBA  C002  F001         	movff	envia_nibble_lcd@dado,??_envia_nibble_lcd
  5558   002BBE  90D8               	bcf	status,0,c
  5559   002BC0  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  5560   002BC2  90D8               	bcf	status,0,c
  5561   002BC4  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  5562   002BC6  90D8               	bcf	status,0,c
  5563   002BC8  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  5564   002BCA  0E01               	movlw	1
  5565   002BCC  1601               	andwf	??_envia_nibble_lcd^0,f,c
  5566   002BCE  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  5567   002BD0  3201               	rrcf	??_envia_nibble_lcd^0,f,c
  5568   002BD2  5083               	movf	131,w,c	;volatile
  5569   002BD4  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  5570   002BD6  0B7F               	andlw	-129
  5571   002BD8  1801               	xorwf	??_envia_nibble_lcd^0,w,c
  5572   002BDA  6E83               	movwf	131,c	;volatile
  5573   002BDC                     
  5574                           ;lcd.c: 11:   PORTDbits.RD1 = 1;
  5575   002BDC  8283               	bsf	131,1,c	;volatile
  5576   002BDE                     
  5577                           ;lcd.c: 12:   _delay((unsigned long)((25)*(4000000/4000000.0)));
  5578   002BDE  0E08               	movlw	8
  5579   002BE0                     u3657:
  5580   002BE0  2EE8               	decfsz	wreg,f,c
  5581   002BE2  D7FE               	bra	u3657
  5582   002BE4  F000               	nop	
  5583   002BE6                     
  5584                           ;lcd.c: 13:   PORTDbits.RD1 = 0;
  5585   002BE6  9283               	bcf	131,1,c	;volatile
  5586   002BE8  0012               	return		;funcret
  5587   002BEA                     __end_of_envia_nibble_lcd:
  5588                           	callstack 0
  5589                           
  5590 ;; *************** function _Tensao *****************
  5591 ;; Defined at:
  5592 ;;		line 77 in file "Voltimetro.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  porta           1    wreg     unsigned char 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  porta           1   54[COMRAM] unsigned char 
  5597 ;;  V               4   55[COMRAM] float 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  4   50[COMRAM] float 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5607 ;;      Params:         4       0       0       0       0       0       0       0       0
  5608 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5610 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5611 ;;Total ram usage:        9 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 1
  5614 ;; This function calls:
  5615 ;;		_Valor_AD
  5616 ;;		___fldiv
  5617 ;;		___flmul
  5618 ;;		___xxtofl
  5619 ;; This function is called by:
  5620 ;;		_main
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text28
  5625   002AD6                     __ptext28:
  5626                           	callstack 0
  5627   002AD6                     _Tensao:
  5628                           	callstack 29
  5629                           
  5630                           ;incstack = 0
  5631                           ;Tensao@porta stored from wreg
  5632   002AD6  6E37               	movwf	Tensao@porta^0,c
  5633   002AD8  5037               	movf	Tensao@porta^0,w,c
  5634   002ADA  ECA0  F016         	call	_Valor_AD
  5635   002ADE  C001  F006         	movff	?_Valor_AD,___xxtofl@val
  5636   002AE2  C002  F007         	movff	?_Valor_AD+1,___xxtofl@val+1
  5637   002AE6  6A08               	clrf	(___xxtofl@val+2)^0,c
  5638   002AE8  6A09               	clrf	(___xxtofl@val+3)^0,c
  5639   002AEA  0E00               	movlw	0
  5640   002AEC  ECA4  F011         	call	___xxtofl
  5641   002AF0  C006  F038         	movff	?___xxtofl,Tensao@V
  5642   002AF4  C007  F039         	movff	?___xxtofl+1,Tensao@V+1
  5643   002AF8  C008  F03A         	movff	?___xxtofl+2,Tensao@V+2
  5644   002AFC  C009  F03B         	movff	?___xxtofl+3,Tensao@V+3
  5645   002B00  0E00               	movlw	0
  5646   002B02  6E05               	movwf	___flmul@a^0,c
  5647   002B04  0E00               	movlw	0
  5648   002B06  6E06               	movwf	(___flmul@a+1)^0,c
  5649   002B08  0EA0               	movlw	160
  5650   002B0A  6E07               	movwf	(___flmul@a+2)^0,c
  5651   002B0C  0E40               	movlw	64
  5652   002B0E  6E08               	movwf	(___flmul@a+3)^0,c
  5653   002B10  C038  F001         	movff	Tensao@V,___flmul@b
  5654   002B14  C039  F002         	movff	Tensao@V+1,___flmul@b+1
  5655   002B18  C03A  F003         	movff	Tensao@V+2,___flmul@b+2
  5656   002B1C  C03B  F004         	movff	Tensao@V+3,___flmul@b+3
  5657   002B20  EC86  F00B         	call	___flmul	;wreg free
  5658   002B24  C001  F01A         	movff	?___flmul,___fldiv@b
  5659   002B28  C002  F01B         	movff	?___flmul+1,___fldiv@b+1
  5660   002B2C  C003  F01C         	movff	?___flmul+2,___fldiv@b+2
  5661   002B30  C004  F01D         	movff	?___flmul+3,___fldiv@b+3
  5662   002B34  0E00               	movlw	0
  5663   002B36  6E1E               	movwf	___fldiv@a^0,c
  5664   002B38  0EC0               	movlw	192
  5665   002B3A  6E1F               	movwf	(___fldiv@a+1)^0,c
  5666   002B3C  0E7F               	movlw	127
  5667   002B3E  6E20               	movwf	(___fldiv@a+2)^0,c
  5668   002B40  0E44               	movlw	68
  5669   002B42  6E21               	movwf	(___fldiv@a+3)^0,c
  5670   002B44  EC9B  F00D         	call	___fldiv	;wreg free
  5671   002B48  C01A  F038         	movff	?___fldiv,Tensao@V
  5672   002B4C  C01B  F039         	movff	?___fldiv+1,Tensao@V+1
  5673   002B50  C01C  F03A         	movff	?___fldiv+2,Tensao@V+2
  5674   002B54  C01D  F03B         	movff	?___fldiv+3,Tensao@V+3
  5675   002B58  C038  F033         	movff	Tensao@V,?_Tensao
  5676   002B5C  C039  F034         	movff	Tensao@V+1,?_Tensao+1
  5677   002B60  C03A  F035         	movff	Tensao@V+2,?_Tensao+2
  5678   002B64  C03B  F036         	movff	Tensao@V+3,?_Tensao+3
  5679   002B68  0012               	return		;funcret
  5680   002B6A                     __end_of_Tensao:
  5681                           	callstack 0
  5682                           
  5683 ;; *************** function ___xxtofl *****************
  5684 ;; Defined at:
  5685 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  sign            1    wreg     unsigned char 
  5688 ;;  val             4    5[COMRAM] long 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  sign            1   13[COMRAM] unsigned char 
  5691 ;;  arg             4   15[COMRAM] unsigned long 
  5692 ;;  exp             1   14[COMRAM] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  4    5[COMRAM] unsigned char 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5702 ;;      Params:         4       0       0       0       0       0       0       0       0
  5703 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5704 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5705 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5706 ;;Total ram usage:       14 bytes
  5707 ;; Hardware stack levels used: 1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_Tensao
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text29
  5716   002348                     __ptext29:
  5717                           	callstack 0
  5718   002348                     ___xxtofl:
  5719                           	callstack 29
  5720                           
  5721                           ;incstack = 0
  5722                           ;___xxtofl@sign stored from wreg
  5723   002348  6E0E               	movwf	___xxtofl@sign^0,c
  5724   00234A  500E               	movf	___xxtofl@sign^0,w,c
  5725   00234C  B4D8               	btfsc	status,2,c
  5726   00234E  EFAB  F011         	goto	u3441
  5727   002352  EFAD  F011         	goto	u3440
  5728   002356                     u3441:
  5729   002356  EFCF  F011         	goto	l735
  5730   00235A                     u3440:
  5731   00235A  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5732   00235C  EFB4  F011         	goto	u3450
  5733   002360  EFB2  F011         	goto	u3451
  5734   002364                     u3451:
  5735   002364  EFCF  F011         	goto	l735
  5736   002368                     u3450:
  5737   002368  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5738   00236C  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5739   002370  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5740   002374  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5741   002378  1E0A               	comf	??___xxtofl^0,f,c
  5742   00237A  1E0B               	comf	(??___xxtofl+1)^0,f,c
  5743   00237C  1E0C               	comf	(??___xxtofl+2)^0,f,c
  5744   00237E  1E0D               	comf	(??___xxtofl+3)^0,f,c
  5745   002380  2A0A               	incf	??___xxtofl^0,f,c
  5746   002382  0E00               	movlw	0
  5747   002384  220B               	addwfc	(??___xxtofl+1)^0,f,c
  5748   002386  220C               	addwfc	(??___xxtofl+2)^0,f,c
  5749   002388  220D               	addwfc	(??___xxtofl+3)^0,f,c
  5750   00238A  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5751   00238E  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5752   002392  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5753   002396  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5754   00239A  EFD7  F011         	goto	l3174
  5755   00239E                     l735:
  5756   00239E  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5757   0023A2  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5758   0023A6  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5759   0023AA  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5760   0023AE                     l3174:
  5761   0023AE  5006               	movf	___xxtofl@val^0,w,c
  5762   0023B0  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  5763   0023B2  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  5764   0023B4  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  5765   0023B6  A4D8               	btfss	status,2,c
  5766   0023B8  EFE0  F011         	goto	u3461
  5767   0023BC  EFE2  F011         	goto	u3460
  5768   0023C0                     u3461:
  5769   0023C0  EFEC  F011         	goto	l3180
  5770   0023C4                     u3460:
  5771   0023C4  0E00               	movlw	0
  5772   0023C6  6E06               	movwf	?___xxtofl^0,c
  5773   0023C8  0E00               	movlw	0
  5774   0023CA  6E07               	movwf	(?___xxtofl+1)^0,c
  5775   0023CC  0E00               	movlw	0
  5776   0023CE  6E08               	movwf	(?___xxtofl+2)^0,c
  5777   0023D0  0E00               	movlw	0
  5778   0023D2  6E09               	movwf	(?___xxtofl+3)^0,c
  5779   0023D4  EF7D  F012         	goto	l738
  5780   0023D8                     l3180:
  5781   0023D8  0E96               	movlw	150
  5782   0023DA  6E0F               	movwf	___xxtofl@exp^0,c
  5783   0023DC  EFF6  F011         	goto	l3184
  5784   0023E0                     l3182:
  5785   0023E0  2A0F               	incf	___xxtofl@exp^0,f,c
  5786   0023E2  90D8               	bcf	status,0,c
  5787   0023E4  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5788   0023E6  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5789   0023E8  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5790   0023EA  3210               	rrcf	___xxtofl@arg^0,f,c
  5791   0023EC                     l3184:
  5792   0023EC  0E00               	movlw	0
  5793   0023EE  1410               	andwf	___xxtofl@arg^0,w,c
  5794   0023F0  6E0A               	movwf	??___xxtofl^0,c
  5795   0023F2  0E00               	movlw	0
  5796   0023F4  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5797   0023F6  6E0B               	movwf	(??___xxtofl+1)^0,c
  5798   0023F8  0E00               	movlw	0
  5799   0023FA  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5800   0023FC  6E0C               	movwf	(??___xxtofl+2)^0,c
  5801   0023FE  0EFE               	movlw	254
  5802   002400  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5803   002402  6E0D               	movwf	(??___xxtofl+3)^0,c
  5804   002404  500A               	movf	??___xxtofl^0,w,c
  5805   002406  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5806   002408  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5807   00240A  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5808   00240C  A4D8               	btfss	status,2,c
  5809   00240E  EF0B  F012         	goto	u3471
  5810   002412  EF0D  F012         	goto	u3470
  5811   002416                     u3471:
  5812   002416  EFF0  F011         	goto	l3182
  5813   00241A                     u3470:
  5814   00241A  EF1B  F012         	goto	l742
  5815   00241E                     l3186:
  5816   00241E  2A0F               	incf	___xxtofl@exp^0,f,c
  5817   002420  0E01               	movlw	1
  5818   002422  2610               	addwf	___xxtofl@arg^0,f,c
  5819   002424  0E00               	movlw	0
  5820   002426  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  5821   002428  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  5822   00242A  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  5823   00242C  90D8               	bcf	status,0,c
  5824   00242E  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5825   002430  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5826   002432  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5827   002434  3210               	rrcf	___xxtofl@arg^0,f,c
  5828   002436                     l742:
  5829   002436  0E00               	movlw	0
  5830   002438  1410               	andwf	___xxtofl@arg^0,w,c
  5831   00243A  6E0A               	movwf	??___xxtofl^0,c
  5832   00243C  0E00               	movlw	0
  5833   00243E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5834   002440  6E0B               	movwf	(??___xxtofl+1)^0,c
  5835   002442  0E00               	movlw	0
  5836   002444  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5837   002446  6E0C               	movwf	(??___xxtofl+2)^0,c
  5838   002448  0EFF               	movlw	255
  5839   00244A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5840   00244C  6E0D               	movwf	(??___xxtofl+3)^0,c
  5841   00244E  500A               	movf	??___xxtofl^0,w,c
  5842   002450  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5843   002452  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5844   002454  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5845   002456  A4D8               	btfss	status,2,c
  5846   002458  EF30  F012         	goto	u3481
  5847   00245C  EF32  F012         	goto	u3480
  5848   002460                     u3481:
  5849   002460  EF0F  F012         	goto	l3186
  5850   002464                     u3480:
  5851   002464  EF3A  F012         	goto	l3194
  5852   002468                     l3192:
  5853   002468  060F               	decf	___xxtofl@exp^0,f,c
  5854   00246A  90D8               	bcf	status,0,c
  5855   00246C  3610               	rlcf	___xxtofl@arg^0,f,c
  5856   00246E  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  5857   002470  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  5858   002472  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  5859   002474                     l3194:
  5860   002474  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  5861   002476  EF3F  F012         	goto	u3491
  5862   00247A  EF41  F012         	goto	u3490
  5863   00247E                     u3491:
  5864   00247E  EF49  F012         	goto	l749
  5865   002482                     u3490:
  5866   002482  0E02               	movlw	2
  5867   002484  600F               	cpfslt	___xxtofl@exp^0,c
  5868   002486  EF47  F012         	goto	u3501
  5869   00248A  EF49  F012         	goto	u3500
  5870   00248E                     u3501:
  5871   00248E  EF34  F012         	goto	l3192
  5872   002492                     u3500:
  5873   002492                     l749:
  5874   002492  B00F               	btfsc	___xxtofl@exp^0,0,c
  5875   002494  EF4E  F012         	goto	u3511
  5876   002498  EF50  F012         	goto	u3510
  5877   00249C                     u3511:
  5878   00249C  EF51  F012         	goto	l3200
  5879   0024A0                     u3510:
  5880   0024A0  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  5881   0024A2                     l3200:
  5882   0024A2  90D8               	bcf	status,0,c
  5883   0024A4  320F               	rrcf	___xxtofl@exp^0,f,c
  5884   0024A6  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  5885   0024AA  6A0B               	clrf	(??___xxtofl+1)^0,c
  5886   0024AC  6A0C               	clrf	(??___xxtofl+2)^0,c
  5887   0024AE  6A0D               	clrf	(??___xxtofl+3)^0,c
  5888   0024B0  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  5889   0024B4  6A0C               	clrf	(??___xxtofl+2)^0,c
  5890   0024B6  6A0B               	clrf	(??___xxtofl+1)^0,c
  5891   0024B8  6A0A               	clrf	??___xxtofl^0,c
  5892   0024BA  500A               	movf	??___xxtofl^0,w,c
  5893   0024BC  1210               	iorwf	___xxtofl@arg^0,f,c
  5894   0024BE  500B               	movf	(??___xxtofl+1)^0,w,c
  5895   0024C0  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  5896   0024C2  500C               	movf	(??___xxtofl+2)^0,w,c
  5897   0024C4  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  5898   0024C6  500D               	movf	(??___xxtofl+3)^0,w,c
  5899   0024C8  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  5900   0024CA  500E               	movf	___xxtofl@sign^0,w,c
  5901   0024CC  B4D8               	btfsc	status,2,c
  5902   0024CE  EF6B  F012         	goto	u3521
  5903   0024D2  EF6D  F012         	goto	u3520
  5904   0024D6                     u3521:
  5905   0024D6  EF75  F012         	goto	l3210
  5906   0024DA                     u3520:
  5907   0024DA  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5908   0024DC  EF74  F012         	goto	u3530
  5909   0024E0  EF72  F012         	goto	u3531
  5910   0024E4                     u3531:
  5911   0024E4  EF75  F012         	goto	l3210
  5912   0024E8                     u3530:
  5913   0024E8  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  5914   0024EA                     l3210:
  5915   0024EA  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  5916   0024EE  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  5917   0024F2  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  5918   0024F6  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  5919   0024FA                     l738:
  5920   0024FA  0012               	return		;funcret
  5921   0024FC                     __end_of___xxtofl:
  5922                           	callstack 0
  5923                           
  5924 ;; *************** function ___flmul *****************
  5925 ;; Defined at:
  5926 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  b               4    0[COMRAM] unsigned char 
  5929 ;;  a               4    4[COMRAM] unsigned char 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  prod            4   19[COMRAM] struct .
  5932 ;;  grs             4   13[COMRAM] unsigned long 
  5933 ;;  temp            2   23[COMRAM] struct .
  5934 ;;  bexp            1   18[COMRAM] unsigned char 
  5935 ;;  aexp            1   17[COMRAM] unsigned char 
  5936 ;;  sign            1   12[COMRAM] unsigned char 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  4    0[COMRAM] unsigned char 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0, prodl, prodh
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5946 ;;      Params:         8       0       0       0       0       0       0       0       0
  5947 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5948 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5949 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5950 ;;Total ram usage:       25 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; This function calls:
  5953 ;;		Nothing
  5954 ;; This function is called by:
  5955 ;;		_Tensao
  5956 ;;		_efgtoa
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text30
  5961   00170C                     __ptext30:
  5962                           	callstack 0
  5963   00170C                     ___flmul:
  5964                           	callstack 26
  5965   00170C  5004               	movf	(___flmul@b+3)^0,w,c
  5966   00170E  0B80               	andlw	128
  5967   001710  6E0D               	movwf	___flmul@sign^0,c
  5968   001712  5004               	movf	(___flmul@b+3)^0,w,c
  5969   001714  2404               	addwf	(___flmul@b+3)^0,w,c
  5970   001716  6E13               	movwf	___flmul@bexp^0,c
  5971   001718  AE03               	btfss	(___flmul@b+2)^0,7,c
  5972   00171A  EF91  F00B         	goto	u2471
  5973   00171E  EF93  F00B         	goto	u2470
  5974   001722                     u2471:
  5975   001722  EF94  F00B         	goto	l2546
  5976   001726                     u2470:
  5977   001726  8013               	bsf	___flmul@bexp^0,0,c
  5978   001728                     l2546:
  5979   001728  5013               	movf	___flmul@bexp^0,w,c
  5980   00172A  B4D8               	btfsc	status,2,c
  5981   00172C  EF9A  F00B         	goto	u2481
  5982   001730  EF9C  F00B         	goto	u2480
  5983   001734                     u2481:
  5984   001734  EFAF  F00B         	goto	l2554
  5985   001738                     u2480:
  5986   001738  2813               	incf	___flmul@bexp^0,w,c
  5987   00173A  A4D8               	btfss	status,2,c
  5988   00173C  EFA2  F00B         	goto	u2491
  5989   001740  EFA4  F00B         	goto	u2490
  5990   001744                     u2491:
  5991   001744  EFAC  F00B         	goto	l2552
  5992   001748                     u2490:
  5993   001748  0E00               	movlw	0
  5994   00174A  6E01               	movwf	___flmul@b^0,c
  5995   00174C  0E00               	movlw	0
  5996   00174E  6E02               	movwf	(___flmul@b+1)^0,c
  5997   001750  0E00               	movlw	0
  5998   001752  6E03               	movwf	(___flmul@b+2)^0,c
  5999   001754  0E00               	movlw	0
  6000   001756  6E04               	movwf	(___flmul@b+3)^0,c
  6001   001758                     l2552:
  6002   001758  8E03               	bsf	(___flmul@b+2)^0,7,c
  6003   00175A  EFB7  F00B         	goto	l2556
  6004   00175E                     l2554:
  6005   00175E  0E00               	movlw	0
  6006   001760  6E01               	movwf	___flmul@b^0,c
  6007   001762  0E00               	movlw	0
  6008   001764  6E02               	movwf	(___flmul@b+1)^0,c
  6009   001766  0E00               	movlw	0
  6010   001768  6E03               	movwf	(___flmul@b+2)^0,c
  6011   00176A  0E00               	movlw	0
  6012   00176C  6E04               	movwf	(___flmul@b+3)^0,c
  6013   00176E                     l2556:
  6014   00176E  5008               	movf	(___flmul@a+3)^0,w,c
  6015   001770  0B80               	andlw	128
  6016   001772  1A0D               	xorwf	___flmul@sign^0,f,c
  6017   001774  5008               	movf	(___flmul@a+3)^0,w,c
  6018   001776  2408               	addwf	(___flmul@a+3)^0,w,c
  6019   001778  6E12               	movwf	___flmul@aexp^0,c
  6020   00177A  AE07               	btfss	(___flmul@a+2)^0,7,c
  6021   00177C  EFC2  F00B         	goto	u2501
  6022   001780  EFC4  F00B         	goto	u2500
  6023   001784                     u2501:
  6024   001784  EFC5  F00B         	goto	l2564
  6025   001788                     u2500:
  6026   001788  8012               	bsf	___flmul@aexp^0,0,c
  6027   00178A                     l2564:
  6028   00178A  5012               	movf	___flmul@aexp^0,w,c
  6029   00178C  B4D8               	btfsc	status,2,c
  6030   00178E  EFCB  F00B         	goto	u2511
  6031   001792  EFCD  F00B         	goto	u2510
  6032   001796                     u2511:
  6033   001796  EFE0  F00B         	goto	l2572
  6034   00179A                     u2510:
  6035   00179A  2812               	incf	___flmul@aexp^0,w,c
  6036   00179C  A4D8               	btfss	status,2,c
  6037   00179E  EFD3  F00B         	goto	u2521
  6038   0017A2  EFD5  F00B         	goto	u2520
  6039   0017A6                     u2521:
  6040   0017A6  EFDD  F00B         	goto	l2570
  6041   0017AA                     u2520:
  6042   0017AA  0E00               	movlw	0
  6043   0017AC  6E05               	movwf	___flmul@a^0,c
  6044   0017AE  0E00               	movlw	0
  6045   0017B0  6E06               	movwf	(___flmul@a+1)^0,c
  6046   0017B2  0E00               	movlw	0
  6047   0017B4  6E07               	movwf	(___flmul@a+2)^0,c
  6048   0017B6  0E00               	movlw	0
  6049   0017B8  6E08               	movwf	(___flmul@a+3)^0,c
  6050   0017BA                     l2570:
  6051   0017BA  8E07               	bsf	(___flmul@a+2)^0,7,c
  6052   0017BC  EFE8  F00B         	goto	l694
  6053   0017C0                     l2572:
  6054   0017C0  0E00               	movlw	0
  6055   0017C2  6E05               	movwf	___flmul@a^0,c
  6056   0017C4  0E00               	movlw	0
  6057   0017C6  6E06               	movwf	(___flmul@a+1)^0,c
  6058   0017C8  0E00               	movlw	0
  6059   0017CA  6E07               	movwf	(___flmul@a+2)^0,c
  6060   0017CC  0E00               	movlw	0
  6061   0017CE  6E08               	movwf	(___flmul@a+3)^0,c
  6062   0017D0                     l694:
  6063   0017D0  5012               	movf	___flmul@aexp^0,w,c
  6064   0017D2  B4D8               	btfsc	status,2,c
  6065   0017D4  EFEE  F00B         	goto	u2531
  6066   0017D8  EFF0  F00B         	goto	u2530
  6067   0017DC                     u2531:
  6068   0017DC  EFF8  F00B         	goto	l2576
  6069   0017E0                     u2530:
  6070   0017E0  5013               	movf	___flmul@bexp^0,w,c
  6071   0017E2  A4D8               	btfss	status,2,c
  6072   0017E4  EFF6  F00B         	goto	u2541
  6073   0017E8  EFF8  F00B         	goto	u2540
  6074   0017EC                     u2541:
  6075   0017EC  EF02  F00C         	goto	l2580
  6076   0017F0                     u2540:
  6077   0017F0                     l2576:
  6078   0017F0  0E00               	movlw	0
  6079   0017F2  6E01               	movwf	?___flmul^0,c
  6080   0017F4  0E00               	movlw	0
  6081   0017F6  6E02               	movwf	(?___flmul+1)^0,c
  6082   0017F8  0E00               	movlw	0
  6083   0017FA  6E03               	movwf	(?___flmul+2)^0,c
  6084   0017FC  0E00               	movlw	0
  6085   0017FE  6E04               	movwf	(?___flmul+3)^0,c
  6086   001800  EF9A  F00D         	goto	l698
  6087   001804                     l2580:
  6088   001804  5007               	movf	(___flmul@a+2)^0,w,c
  6089   001806  0201               	mulwf	___flmul@b^0,c
  6090   001808  CFF3 F018          	movff	prodl,___flmul@temp
  6091   00180C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6092   001810  5018               	movf	___flmul@temp^0,w,c
  6093   001812  6E0E               	movwf	___flmul@grs^0,c
  6094   001814  6A0F               	clrf	(___flmul@grs+1)^0,c
  6095   001816  6A10               	clrf	(___flmul@grs+2)^0,c
  6096   001818  6A11               	clrf	(___flmul@grs+3)^0,c
  6097   00181A  5019               	movf	(___flmul@temp+1)^0,w,c
  6098   00181C  6E14               	movwf	___flmul@prod^0,c
  6099   00181E  6A15               	clrf	(___flmul@prod+1)^0,c
  6100   001820  6A16               	clrf	(___flmul@prod+2)^0,c
  6101   001822  6A17               	clrf	(___flmul@prod+3)^0,c
  6102   001824  5006               	movf	(___flmul@a+1)^0,w,c
  6103   001826  0202               	mulwf	(___flmul@b+1)^0,c
  6104   001828  CFF3 F018          	movff	prodl,___flmul@temp
  6105   00182C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6106   001830  5018               	movf	___flmul@temp^0,w,c
  6107   001832  260E               	addwf	___flmul@grs^0,f,c
  6108   001834  0E00               	movlw	0
  6109   001836  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6110   001838  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6111   00183A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6112   00183C  5019               	movf	(___flmul@temp+1)^0,w,c
  6113   00183E  2614               	addwf	___flmul@prod^0,f,c
  6114   001840  0E00               	movlw	0
  6115   001842  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6116   001844  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6117   001846  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6118   001848  5005               	movf	___flmul@a^0,w,c
  6119   00184A  0203               	mulwf	(___flmul@b+2)^0,c
  6120   00184C  CFF3 F018          	movff	prodl,___flmul@temp
  6121   001850  CFF4 F019          	movff	prodh,___flmul@temp+1
  6122   001854  5018               	movf	___flmul@temp^0,w,c
  6123   001856  260E               	addwf	___flmul@grs^0,f,c
  6124   001858  0E00               	movlw	0
  6125   00185A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6126   00185C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6127   00185E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6128   001860  5019               	movf	(___flmul@temp+1)^0,w,c
  6129   001862  2614               	addwf	___flmul@prod^0,f,c
  6130   001864  0E00               	movlw	0
  6131   001866  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6132   001868  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6133   00186A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6134   00186C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6135   001870  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6136   001874  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6137   001878  6A0E               	clrf	___flmul@grs^0,c
  6138   00187A  5005               	movf	___flmul@a^0,w,c
  6139   00187C  0202               	mulwf	(___flmul@b+1)^0,c
  6140   00187E  CFF3 F018          	movff	prodl,___flmul@temp
  6141   001882  CFF4 F019          	movff	prodh,___flmul@temp+1
  6142   001886  5018               	movf	___flmul@temp^0,w,c
  6143   001888  260E               	addwf	___flmul@grs^0,f,c
  6144   00188A  5019               	movf	(___flmul@temp+1)^0,w,c
  6145   00188C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6146   00188E  0E00               	movlw	0
  6147   001890  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6148   001892  0E00               	movlw	0
  6149   001894  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6150   001896  5006               	movf	(___flmul@a+1)^0,w,c
  6151   001898  0201               	mulwf	___flmul@b^0,c
  6152   00189A  CFF3 F018          	movff	prodl,___flmul@temp
  6153   00189E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6154   0018A2  5018               	movf	___flmul@temp^0,w,c
  6155   0018A4  260E               	addwf	___flmul@grs^0,f,c
  6156   0018A6  5019               	movf	(___flmul@temp+1)^0,w,c
  6157   0018A8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6158   0018AA  0E00               	movlw	0
  6159   0018AC  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6160   0018AE  0E00               	movlw	0
  6161   0018B0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6162   0018B2  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6163   0018B6  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6164   0018BA  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6165   0018BE  6A0E               	clrf	___flmul@grs^0,c
  6166   0018C0  5005               	movf	___flmul@a^0,w,c
  6167   0018C2  0201               	mulwf	___flmul@b^0,c
  6168   0018C4  CFF3 F018          	movff	prodl,___flmul@temp
  6169   0018C8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6170   0018CC  5018               	movf	___flmul@temp^0,w,c
  6171   0018CE  260E               	addwf	___flmul@grs^0,f,c
  6172   0018D0  5019               	movf	(___flmul@temp+1)^0,w,c
  6173   0018D2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6174   0018D4  0E00               	movlw	0
  6175   0018D6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6176   0018D8  0E00               	movlw	0
  6177   0018DA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6178   0018DC  5007               	movf	(___flmul@a+2)^0,w,c
  6179   0018DE  0202               	mulwf	(___flmul@b+1)^0,c
  6180   0018E0  CFF3 F018          	movff	prodl,___flmul@temp
  6181   0018E4  CFF4 F019          	movff	prodh,___flmul@temp+1
  6182   0018E8  5018               	movf	___flmul@temp^0,w,c
  6183   0018EA  2614               	addwf	___flmul@prod^0,f,c
  6184   0018EC  5019               	movf	(___flmul@temp+1)^0,w,c
  6185   0018EE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6186   0018F0  0E00               	movlw	0
  6187   0018F2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6188   0018F4  0E00               	movlw	0
  6189   0018F6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6190   0018F8  5006               	movf	(___flmul@a+1)^0,w,c
  6191   0018FA  0203               	mulwf	(___flmul@b+2)^0,c
  6192   0018FC  CFF3 F018          	movff	prodl,___flmul@temp
  6193   001900  CFF4 F019          	movff	prodh,___flmul@temp+1
  6194   001904  5018               	movf	___flmul@temp^0,w,c
  6195   001906  2614               	addwf	___flmul@prod^0,f,c
  6196   001908  5019               	movf	(___flmul@temp+1)^0,w,c
  6197   00190A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6198   00190C  0E00               	movlw	0
  6199   00190E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6200   001910  0E00               	movlw	0
  6201   001912  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6202   001914  5007               	movf	(___flmul@a+2)^0,w,c
  6203   001916  0203               	mulwf	(___flmul@b+2)^0,c
  6204   001918  CFF3 F018          	movff	prodl,___flmul@temp
  6205   00191C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6206   001920  5018               	movf	___flmul@temp^0,w,c
  6207   001922  6E09               	movwf	??___flmul^0,c
  6208   001924  5019               	movf	(___flmul@temp+1)^0,w,c
  6209   001926  6E0A               	movwf	(??___flmul+1)^0,c
  6210   001928  6A0B               	clrf	(??___flmul+2)^0,c
  6211   00192A  6A0C               	clrf	(??___flmul+3)^0,c
  6212   00192C  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6213   001930  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6214   001934  C009  F00A         	movff	??___flmul,??___flmul+1
  6215   001938  6A09               	clrf	??___flmul^0,c
  6216   00193A  5009               	movf	??___flmul^0,w,c
  6217   00193C  2614               	addwf	___flmul@prod^0,f,c
  6218   00193E  500A               	movf	(??___flmul+1)^0,w,c
  6219   001940  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6220   001942  500B               	movf	(??___flmul+2)^0,w,c
  6221   001944  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6222   001946  500C               	movf	(??___flmul+3)^0,w,c
  6223   001948  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6224   00194A  C00E  F009         	movff	___flmul@grs,??___flmul
  6225   00194E  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6226   001952  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6227   001956  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6228   00195A  0E19               	movlw	25
  6229   00195C  EFB5  F00C         	goto	u2550
  6230   001960                     u2555:
  6231   001960  90D8               	bcf	status,0,c
  6232   001962  320C               	rrcf	(??___flmul+3)^0,f,c
  6233   001964  320B               	rrcf	(??___flmul+2)^0,f,c
  6234   001966  320A               	rrcf	(??___flmul+1)^0,f,c
  6235   001968  3209               	rrcf	??___flmul^0,f,c
  6236   00196A                     u2550:
  6237   00196A  2EE8               	decfsz	wreg,f,c
  6238   00196C  EFB0  F00C         	goto	u2555
  6239   001970  5009               	movf	??___flmul^0,w,c
  6240   001972  2614               	addwf	___flmul@prod^0,f,c
  6241   001974  500A               	movf	(??___flmul+1)^0,w,c
  6242   001976  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6243   001978  500B               	movf	(??___flmul+2)^0,w,c
  6244   00197A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6245   00197C  500C               	movf	(??___flmul+3)^0,w,c
  6246   00197E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6247   001980  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6248   001984  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6249   001988  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6250   00198C  6A0E               	clrf	___flmul@grs^0,c
  6251   00198E  5012               	movf	___flmul@aexp^0,w,c
  6252   001990  C013  F009         	movff	___flmul@bexp,??___flmul
  6253   001994  6A0A               	clrf	(??___flmul+1)^0,c
  6254   001996  2609               	addwf	??___flmul^0,f,c
  6255   001998  0E00               	movlw	0
  6256   00199A  220A               	addwfc	(??___flmul+1)^0,f,c
  6257   00199C  0E82               	movlw	130
  6258   00199E  2409               	addwf	??___flmul^0,w,c
  6259   0019A0  6E18               	movwf	___flmul@temp^0,c
  6260   0019A2  0EFF               	movlw	255
  6261   0019A4  200A               	addwfc	(??___flmul+1)^0,w,c
  6262   0019A6  6E19               	movwf	(___flmul@temp+1)^0,c
  6263   0019A8  EFEB  F00C         	goto	l2628
  6264   0019AC                     l2622:
  6265   0019AC  90D8               	bcf	status,0,c
  6266   0019AE  3614               	rlcf	___flmul@prod^0,f,c
  6267   0019B0  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6268   0019B2  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6269   0019B4  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6270   0019B6  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6271   0019B8  EFE0  F00C         	goto	u2561
  6272   0019BC  EFE2  F00C         	goto	u2560
  6273   0019C0                     u2561:
  6274   0019C0  EFE3  F00C         	goto	l701
  6275   0019C4                     u2560:
  6276   0019C4  8014               	bsf	___flmul@prod^0,0,c
  6277   0019C6                     l701:
  6278   0019C6  90D8               	bcf	status,0,c
  6279   0019C8  360E               	rlcf	___flmul@grs^0,f,c
  6280   0019CA  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6281   0019CC  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6282   0019CE  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6283   0019D0  0618               	decf	___flmul@temp^0,f,c
  6284   0019D2  A0D8               	btfss	status,0,c
  6285   0019D4  0619               	decf	(___flmul@temp+1)^0,f,c
  6286   0019D6                     l2628:
  6287   0019D6  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6288   0019D8  EFF0  F00C         	goto	u2571
  6289   0019DC  EFF2  F00C         	goto	u2570
  6290   0019E0                     u2571:
  6291   0019E0  EFD6  F00C         	goto	l2622
  6292   0019E4                     u2570:
  6293   0019E4  0E00               	movlw	0
  6294   0019E6  6E12               	movwf	___flmul@aexp^0,c
  6295   0019E8  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6296   0019EA  EFF9  F00C         	goto	u2581
  6297   0019EE  EFFB  F00C         	goto	u2580
  6298   0019F2                     u2581:
  6299   0019F2  EF1F  F00D         	goto	l703
  6300   0019F6                     u2580:
  6301   0019F6  0EFF               	movlw	255
  6302   0019F8  140E               	andwf	___flmul@grs^0,w,c
  6303   0019FA  6E09               	movwf	??___flmul^0,c
  6304   0019FC  0EFF               	movlw	255
  6305   0019FE  140F               	andwf	(___flmul@grs+1)^0,w,c
  6306   001A00  6E0A               	movwf	(??___flmul+1)^0,c
  6307   001A02  0EFF               	movlw	255
  6308   001A04  1410               	andwf	(___flmul@grs+2)^0,w,c
  6309   001A06  6E0B               	movwf	(??___flmul+2)^0,c
  6310   001A08  0E7F               	movlw	127
  6311   001A0A  1411               	andwf	(___flmul@grs+3)^0,w,c
  6312   001A0C  6E0C               	movwf	(??___flmul+3)^0,c
  6313   001A0E  5009               	movf	??___flmul^0,w,c
  6314   001A10  100A               	iorwf	(??___flmul+1)^0,w,c
  6315   001A12  100B               	iorwf	(??___flmul+2)^0,w,c
  6316   001A14  100C               	iorwf	(??___flmul+3)^0,w,c
  6317   001A16  B4D8               	btfsc	status,2,c
  6318   001A18  EF10  F00D         	goto	u2591
  6319   001A1C  EF12  F00D         	goto	u2590
  6320   001A20                     u2591:
  6321   001A20  EF16  F00D         	goto	l704
  6322   001A24                     u2590:
  6323   001A24                     l2636:
  6324   001A24  0E01               	movlw	1
  6325   001A26  6E12               	movwf	___flmul@aexp^0,c
  6326   001A28  EF1F  F00D         	goto	l703
  6327   001A2C                     l704:
  6328   001A2C  A014               	btfss	___flmul@prod^0,0,c
  6329   001A2E  EF1B  F00D         	goto	u2601
  6330   001A32  EF1D  F00D         	goto	u2600
  6331   001A36                     u2601:
  6332   001A36  EF1F  F00D         	goto	l703
  6333   001A3A                     u2600:
  6334   001A3A  EF12  F00D         	goto	l2636
  6335   001A3E                     l703:
  6336   001A3E  5012               	movf	___flmul@aexp^0,w,c
  6337   001A40  B4D8               	btfsc	status,2,c
  6338   001A42  EF25  F00D         	goto	u2611
  6339   001A46  EF27  F00D         	goto	u2610
  6340   001A4A                     u2611:
  6341   001A4A  EF4B  F00D         	goto	l2648
  6342   001A4E                     u2610:
  6343   001A4E  0E01               	movlw	1
  6344   001A50  2614               	addwf	___flmul@prod^0,f,c
  6345   001A52  0E00               	movlw	0
  6346   001A54  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6347   001A56  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6348   001A58  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6349   001A5A  A017               	btfss	(___flmul@prod+3)^0,0,c
  6350   001A5C  EF32  F00D         	goto	u2621
  6351   001A60  EF34  F00D         	goto	u2620
  6352   001A64                     u2621:
  6353   001A64  EF4B  F00D         	goto	l2648
  6354   001A68                     u2620:
  6355   001A68  C014  F009         	movff	___flmul@prod,??___flmul
  6356   001A6C  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6357   001A70  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6358   001A74  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6359   001A78  340C               	rlcf	(??___flmul+3)^0,w,c
  6360   001A7A  320C               	rrcf	(??___flmul+3)^0,f,c
  6361   001A7C  320B               	rrcf	(??___flmul+2)^0,f,c
  6362   001A7E  320A               	rrcf	(??___flmul+1)^0,f,c
  6363   001A80  3209               	rrcf	??___flmul^0,f,c
  6364   001A82  C009  F014         	movff	??___flmul,___flmul@prod
  6365   001A86  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6366   001A8A  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6367   001A8E  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6368   001A92  4A18               	infsnz	___flmul@temp^0,f,c
  6369   001A94  2A19               	incf	(___flmul@temp+1)^0,f,c
  6370   001A96                     l2648:
  6371   001A96  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6372   001A98  EF56  F00D         	goto	u2631
  6373   001A9C  5019               	movf	(___flmul@temp+1)^0,w,c
  6374   001A9E  E108               	bnz	u2630
  6375   001AA0  2818               	incf	___flmul@temp^0,w,c
  6376   001AA2  A0D8               	btfss	status,0,c
  6377   001AA4  EF56  F00D         	goto	u2631
  6378   001AA8  EF58  F00D         	goto	u2630
  6379   001AAC                     u2631:
  6380   001AAC  EF62  F00D         	goto	l2652
  6381   001AB0                     u2630:
  6382   001AB0  0E00               	movlw	0
  6383   001AB2  6E14               	movwf	___flmul@prod^0,c
  6384   001AB4  0E00               	movlw	0
  6385   001AB6  6E15               	movwf	(___flmul@prod+1)^0,c
  6386   001AB8  0E80               	movlw	128
  6387   001ABA  6E16               	movwf	(___flmul@prod+2)^0,c
  6388   001ABC  0E7F               	movlw	127
  6389   001ABE  6E17               	movwf	(___flmul@prod+3)^0,c
  6390   001AC0  EF90  F00D         	goto	l2664
  6391   001AC4                     l2652:
  6392   001AC4  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6393   001AC6  EF6F  F00D         	goto	u2640
  6394   001ACA  5019               	movf	(___flmul@temp+1)^0,w,c
  6395   001ACC  E106               	bnz	u2641
  6396   001ACE  0418               	decf	___flmul@temp^0,w,c
  6397   001AD0  B0D8               	btfsc	status,0,c
  6398   001AD2  EF6D  F00D         	goto	u2641
  6399   001AD6  EF6F  F00D         	goto	u2640
  6400   001ADA                     u2641:
  6401   001ADA  EF7B  F00D         	goto	l711
  6402   001ADE                     u2640:
  6403   001ADE  0E00               	movlw	0
  6404   001AE0  6E14               	movwf	___flmul@prod^0,c
  6405   001AE2  0E00               	movlw	0
  6406   001AE4  6E15               	movwf	(___flmul@prod+1)^0,c
  6407   001AE6  0E00               	movlw	0
  6408   001AE8  6E16               	movwf	(___flmul@prod+2)^0,c
  6409   001AEA  0E00               	movlw	0
  6410   001AEC  6E17               	movwf	(___flmul@prod+3)^0,c
  6411   001AEE  0E00               	movlw	0
  6412   001AF0  6E0D               	movwf	___flmul@sign^0,c
  6413   001AF2  EF90  F00D         	goto	l2664
  6414   001AF6                     l711:
  6415   001AF6  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6416   001AFA  0EFF               	movlw	255
  6417   001AFC  1614               	andwf	___flmul@prod^0,f,c
  6418   001AFE  0EFF               	movlw	255
  6419   001B00  1615               	andwf	(___flmul@prod+1)^0,f,c
  6420   001B02  0E7F               	movlw	127
  6421   001B04  1616               	andwf	(___flmul@prod+2)^0,f,c
  6422   001B06  0E00               	movlw	0
  6423   001B08  1617               	andwf	(___flmul@prod+3)^0,f,c
  6424   001B0A  A013               	btfss	___flmul@bexp^0,0,c
  6425   001B0C  EF8A  F00D         	goto	u2651
  6426   001B10  EF8C  F00D         	goto	u2650
  6427   001B14                     u2651:
  6428   001B14  EF8D  F00D         	goto	l2662
  6429   001B18                     u2650:
  6430   001B18  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6431   001B1A                     l2662:
  6432   001B1A  90D8               	bcf	status,0,c
  6433   001B1C  3013               	rrcf	___flmul@bexp^0,w,c
  6434   001B1E  6E17               	movwf	(___flmul@prod+3)^0,c
  6435   001B20                     l2664:
  6436   001B20  500D               	movf	___flmul@sign^0,w,c
  6437   001B22  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6438   001B24  C014  F001         	movff	___flmul@prod,?___flmul
  6439   001B28  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6440   001B2C  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6441   001B30  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6442   001B34                     l698:
  6443   001B34  0012               	return		;funcret
  6444   001B36                     __end_of___flmul:
  6445                           	callstack 0
  6446                           
  6447 ;; *************** function ___fldiv *****************
  6448 ;; Defined at:
  6449 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  b               4   25[COMRAM] unsigned char 
  6452 ;;  a               4   29[COMRAM] unsigned char 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;  grs             4   44[COMRAM] unsigned long 
  6455 ;;  rem             4   37[COMRAM] unsigned long 
  6456 ;;  new_exp         2   42[COMRAM] short 
  6457 ;;  aexp            1   49[COMRAM] unsigned char 
  6458 ;;  bexp            1   48[COMRAM] unsigned char 
  6459 ;;  sign            1   41[COMRAM] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  4   25[COMRAM] unsigned char 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6469 ;;      Params:         8       0       0       0       0       0       0       0       0
  6470 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6471 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6472 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6473 ;;Total ram usage:       25 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_Tensao
  6479 ;;		_efgtoa
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text31
  6484   001B36                     __ptext31:
  6485                           	callstack 0
  6486   001B36                     ___fldiv:
  6487                           	callstack 26
  6488   001B36  501D               	movf	(___fldiv@b+3)^0,w,c
  6489   001B38  0B80               	andlw	128
  6490   001B3A  6E2A               	movwf	___fldiv@sign^0,c
  6491   001B3C  501D               	movf	(___fldiv@b+3)^0,w,c
  6492   001B3E  241D               	addwf	(___fldiv@b+3)^0,w,c
  6493   001B40  6E31               	movwf	___fldiv@bexp^0,c
  6494   001B42  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  6495   001B44  EFA6  F00D         	goto	u2241
  6496   001B48  EFA8  F00D         	goto	u2240
  6497   001B4C                     u2241:
  6498   001B4C  EFA9  F00D         	goto	l2408
  6499   001B50                     u2240:
  6500   001B50  8031               	bsf	___fldiv@bexp^0,0,c
  6501   001B52                     l2408:
  6502   001B52  5031               	movf	___fldiv@bexp^0,w,c
  6503   001B54  B4D8               	btfsc	status,2,c
  6504   001B56  EFAF  F00D         	goto	u2251
  6505   001B5A  EFB1  F00D         	goto	u2250
  6506   001B5E                     u2251:
  6507   001B5E  EFC6  F00D         	goto	l2418
  6508   001B62                     u2250:
  6509   001B62  2831               	incf	___fldiv@bexp^0,w,c
  6510   001B64  A4D8               	btfss	status,2,c
  6511   001B66  EFB7  F00D         	goto	u2261
  6512   001B6A  EFB9  F00D         	goto	u2260
  6513   001B6E                     u2261:
  6514   001B6E  EFC1  F00D         	goto	l2414
  6515   001B72                     u2260:
  6516   001B72  0E00               	movlw	0
  6517   001B74  6E1A               	movwf	___fldiv@b^0,c
  6518   001B76  0E00               	movlw	0
  6519   001B78  6E1B               	movwf	(___fldiv@b+1)^0,c
  6520   001B7A  0E00               	movlw	0
  6521   001B7C  6E1C               	movwf	(___fldiv@b+2)^0,c
  6522   001B7E  0E00               	movlw	0
  6523   001B80  6E1D               	movwf	(___fldiv@b+3)^0,c
  6524   001B82                     l2414:
  6525   001B82  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  6526   001B84  0E00               	movlw	0
  6527   001B86  6E1D               	movwf	(___fldiv@b+3)^0,c
  6528   001B88  EFCE  F00D         	goto	l2420
  6529   001B8C                     l2418:
  6530   001B8C  0E00               	movlw	0
  6531   001B8E  6E1A               	movwf	___fldiv@b^0,c
  6532   001B90  0E00               	movlw	0
  6533   001B92  6E1B               	movwf	(___fldiv@b+1)^0,c
  6534   001B94  0E00               	movlw	0
  6535   001B96  6E1C               	movwf	(___fldiv@b+2)^0,c
  6536   001B98  0E00               	movlw	0
  6537   001B9A  6E1D               	movwf	(___fldiv@b+3)^0,c
  6538   001B9C                     l2420:
  6539   001B9C  5021               	movf	(___fldiv@a+3)^0,w,c
  6540   001B9E  0B80               	andlw	128
  6541   001BA0  1A2A               	xorwf	___fldiv@sign^0,f,c
  6542   001BA2  5021               	movf	(___fldiv@a+3)^0,w,c
  6543   001BA4  2421               	addwf	(___fldiv@a+3)^0,w,c
  6544   001BA6  6E32               	movwf	___fldiv@aexp^0,c
  6545   001BA8  AE20               	btfss	(___fldiv@a+2)^0,7,c
  6546   001BAA  EFD9  F00D         	goto	u2271
  6547   001BAE  EFDB  F00D         	goto	u2270
  6548   001BB2                     u2271:
  6549   001BB2  EFDC  F00D         	goto	l2428
  6550   001BB6                     u2270:
  6551   001BB6  8032               	bsf	___fldiv@aexp^0,0,c
  6552   001BB8                     l2428:
  6553   001BB8  5032               	movf	___fldiv@aexp^0,w,c
  6554   001BBA  B4D8               	btfsc	status,2,c
  6555   001BBC  EFE2  F00D         	goto	u2281
  6556   001BC0  EFE4  F00D         	goto	u2280
  6557   001BC4                     u2281:
  6558   001BC4  EFF9  F00D         	goto	l2438
  6559   001BC8                     u2280:
  6560   001BC8  2832               	incf	___fldiv@aexp^0,w,c
  6561   001BCA  A4D8               	btfss	status,2,c
  6562   001BCC  EFEA  F00D         	goto	u2291
  6563   001BD0  EFEC  F00D         	goto	u2290
  6564   001BD4                     u2291:
  6565   001BD4  EFF4  F00D         	goto	l2434
  6566   001BD8                     u2290:
  6567   001BD8  0E00               	movlw	0
  6568   001BDA  6E1E               	movwf	___fldiv@a^0,c
  6569   001BDC  0E00               	movlw	0
  6570   001BDE  6E1F               	movwf	(___fldiv@a+1)^0,c
  6571   001BE0  0E00               	movlw	0
  6572   001BE2  6E20               	movwf	(___fldiv@a+2)^0,c
  6573   001BE4  0E00               	movlw	0
  6574   001BE6  6E21               	movwf	(___fldiv@a+3)^0,c
  6575   001BE8                     l2434:
  6576   001BE8  8E20               	bsf	(___fldiv@a+2)^0,7,c
  6577   001BEA  0E00               	movlw	0
  6578   001BEC  6E21               	movwf	(___fldiv@a+3)^0,c
  6579   001BEE  EF01  F00E         	goto	l2440
  6580   001BF2                     l2438:
  6581   001BF2  0E00               	movlw	0
  6582   001BF4  6E1E               	movwf	___fldiv@a^0,c
  6583   001BF6  0E00               	movlw	0
  6584   001BF8  6E1F               	movwf	(___fldiv@a+1)^0,c
  6585   001BFA  0E00               	movlw	0
  6586   001BFC  6E20               	movwf	(___fldiv@a+2)^0,c
  6587   001BFE  0E00               	movlw	0
  6588   001C00  6E21               	movwf	(___fldiv@a+3)^0,c
  6589   001C02                     l2440:
  6590   001C02  501E               	movf	___fldiv@a^0,w,c
  6591   001C04  101F               	iorwf	(___fldiv@a+1)^0,w,c
  6592   001C06  1020               	iorwf	(___fldiv@a+2)^0,w,c
  6593   001C08  1021               	iorwf	(___fldiv@a+3)^0,w,c
  6594   001C0A  A4D8               	btfss	status,2,c
  6595   001C0C  EF0A  F00E         	goto	u2301
  6596   001C10  EF0C  F00E         	goto	u2300
  6597   001C14                     u2301:
  6598   001C14  EF24  F00E         	goto	l2452
  6599   001C18                     u2300:
  6600   001C18  0E00               	movlw	0
  6601   001C1A  6E1A               	movwf	___fldiv@b^0,c
  6602   001C1C  0E00               	movlw	0
  6603   001C1E  6E1B               	movwf	(___fldiv@b+1)^0,c
  6604   001C20  0E00               	movlw	0
  6605   001C22  6E1C               	movwf	(___fldiv@b+2)^0,c
  6606   001C24  0E00               	movlw	0
  6607   001C26  6E1D               	movwf	(___fldiv@b+3)^0,c
  6608   001C28  0E80               	movlw	128
  6609   001C2A  121C               	iorwf	(___fldiv@b+2)^0,f,c
  6610   001C2C  0E7F               	movlw	127
  6611   001C2E  121D               	iorwf	(___fldiv@b+3)^0,f,c
  6612   001C30                     l2446:
  6613   001C30  502A               	movf	___fldiv@sign^0,w,c
  6614   001C32  121D               	iorwf	(___fldiv@b+3)^0,f,c
  6615   001C34  C01A  F01A         	movff	___fldiv@b,?___fldiv
  6616   001C38  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  6617   001C3C  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  6618   001C40  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  6619   001C44  EF67  F00F         	goto	l662
  6620   001C48                     l2452:
  6621   001C48  5031               	movf	___fldiv@bexp^0,w,c
  6622   001C4A  A4D8               	btfss	status,2,c
  6623   001C4C  EF2A  F00E         	goto	u2311
  6624   001C50  EF2C  F00E         	goto	u2310
  6625   001C54                     u2311:
  6626   001C54  EF36  F00E         	goto	l2460
  6627   001C58                     u2310:
  6628   001C58  0E00               	movlw	0
  6629   001C5A  6E1A               	movwf	?___fldiv^0,c
  6630   001C5C  0E00               	movlw	0
  6631   001C5E  6E1B               	movwf	(?___fldiv+1)^0,c
  6632   001C60  0E00               	movlw	0
  6633   001C62  6E1C               	movwf	(?___fldiv+2)^0,c
  6634   001C64  0E00               	movlw	0
  6635   001C66  6E1D               	movwf	(?___fldiv+3)^0,c
  6636   001C68  EF67  F00F         	goto	l662
  6637   001C6C                     l2460:
  6638   001C6C  5032               	movf	___fldiv@aexp^0,w,c
  6639   001C6E  C031  F022         	movff	___fldiv@bexp,??___fldiv
  6640   001C72  6A23               	clrf	(??___fldiv+1)^0,c
  6641   001C74  5E22               	subwf	??___fldiv^0,f,c
  6642   001C76  0E00               	movlw	0
  6643   001C78  5A23               	subwfb	(??___fldiv+1)^0,f,c
  6644   001C7A  0E7F               	movlw	127
  6645   001C7C  2422               	addwf	??___fldiv^0,w,c
  6646   001C7E  6E2B               	movwf	___fldiv@new_exp^0,c
  6647   001C80  0E00               	movlw	0
  6648   001C82  2023               	addwfc	(??___fldiv+1)^0,w,c
  6649   001C84  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  6650   001C86  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  6651   001C8A  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  6652   001C8E  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  6653   001C92  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  6654   001C96  0E00               	movlw	0
  6655   001C98  6E1A               	movwf	___fldiv@b^0,c
  6656   001C9A  0E00               	movlw	0
  6657   001C9C  6E1B               	movwf	(___fldiv@b+1)^0,c
  6658   001C9E  0E00               	movlw	0
  6659   001CA0  6E1C               	movwf	(___fldiv@b+2)^0,c
  6660   001CA2  0E00               	movlw	0
  6661   001CA4  6E1D               	movwf	(___fldiv@b+3)^0,c
  6662   001CA6  0E00               	movlw	0
  6663   001CA8  6E2D               	movwf	___fldiv@grs^0,c
  6664   001CAA  0E00               	movlw	0
  6665   001CAC  6E2E               	movwf	(___fldiv@grs+1)^0,c
  6666   001CAE  0E00               	movlw	0
  6667   001CB0  6E2F               	movwf	(___fldiv@grs+2)^0,c
  6668   001CB2  0E00               	movlw	0
  6669   001CB4  6E30               	movwf	(___fldiv@grs+3)^0,c
  6670   001CB6  0E00               	movlw	0
  6671   001CB8  6E32               	movwf	___fldiv@aexp^0,c
  6672   001CBA  EF97  F00E         	goto	l664
  6673   001CBE                     l2470:
  6674   001CBE  5032               	movf	___fldiv@aexp^0,w,c
  6675   001CC0  B4D8               	btfsc	status,2,c
  6676   001CC2  EF65  F00E         	goto	u2321
  6677   001CC6  EF67  F00E         	goto	u2320
  6678   001CCA                     u2321:
  6679   001CCA  EF7E  F00E         	goto	l2478
  6680   001CCE                     u2320:
  6681   001CCE  90D8               	bcf	status,0,c
  6682   001CD0  3626               	rlcf	___fldiv@rem^0,f,c
  6683   001CD2  3627               	rlcf	(___fldiv@rem+1)^0,f,c
  6684   001CD4  3628               	rlcf	(___fldiv@rem+2)^0,f,c
  6685   001CD6  3629               	rlcf	(___fldiv@rem+3)^0,f,c
  6686   001CD8  90D8               	bcf	status,0,c
  6687   001CDA  361A               	rlcf	___fldiv@b^0,f,c
  6688   001CDC  361B               	rlcf	(___fldiv@b+1)^0,f,c
  6689   001CDE  361C               	rlcf	(___fldiv@b+2)^0,f,c
  6690   001CE0  361D               	rlcf	(___fldiv@b+3)^0,f,c
  6691   001CE2  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  6692   001CE4  EF76  F00E         	goto	u2331
  6693   001CE8  EF78  F00E         	goto	u2330
  6694   001CEC                     u2331:
  6695   001CEC  EF79  F00E         	goto	l667
  6696   001CF0                     u2330:
  6697   001CF0  801A               	bsf	___fldiv@b^0,0,c
  6698   001CF2                     l667:
  6699   001CF2  90D8               	bcf	status,0,c
  6700   001CF4  362D               	rlcf	___fldiv@grs^0,f,c
  6701   001CF6  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  6702   001CF8  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  6703   001CFA  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  6704   001CFC                     l2478:
  6705   001CFC  501E               	movf	___fldiv@a^0,w,c
  6706   001CFE  5C26               	subwf	___fldiv@rem^0,w,c
  6707   001D00  501F               	movf	(___fldiv@a+1)^0,w,c
  6708   001D02  5827               	subwfb	(___fldiv@rem+1)^0,w,c
  6709   001D04  5020               	movf	(___fldiv@a+2)^0,w,c
  6710   001D06  5828               	subwfb	(___fldiv@rem+2)^0,w,c
  6711   001D08  5021               	movf	(___fldiv@a+3)^0,w,c
  6712   001D0A  5829               	subwfb	(___fldiv@rem+3)^0,w,c
  6713   001D0C  A0D8               	btfss	status,0,c
  6714   001D0E  EF8B  F00E         	goto	u2341
  6715   001D12  EF8D  F00E         	goto	u2340
  6716   001D16                     u2341:
  6717   001D16  EF96  F00E         	goto	l2484
  6718   001D1A                     u2340:
  6719   001D1A  8C30               	bsf	(___fldiv@grs+3)^0,6,c
  6720   001D1C  501E               	movf	___fldiv@a^0,w,c
  6721   001D1E  5E26               	subwf	___fldiv@rem^0,f,c
  6722   001D20  501F               	movf	(___fldiv@a+1)^0,w,c
  6723   001D22  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
  6724   001D24  5020               	movf	(___fldiv@a+2)^0,w,c
  6725   001D26  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
  6726   001D28  5021               	movf	(___fldiv@a+3)^0,w,c
  6727   001D2A  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
  6728   001D2C                     l2484:
  6729   001D2C  2A32               	incf	___fldiv@aexp^0,f,c
  6730   001D2E                     l664:
  6731   001D2E  0E19               	movlw	25
  6732   001D30  6432               	cpfsgt	___fldiv@aexp^0,c
  6733   001D32  EF9D  F00E         	goto	u2351
  6734   001D36  EF9F  F00E         	goto	u2350
  6735   001D3A                     u2351:
  6736   001D3A  EF5F  F00E         	goto	l2470
  6737   001D3E                     u2350:
  6738   001D3E  5026               	movf	___fldiv@rem^0,w,c
  6739   001D40  1027               	iorwf	(___fldiv@rem+1)^0,w,c
  6740   001D42  1028               	iorwf	(___fldiv@rem+2)^0,w,c
  6741   001D44  1029               	iorwf	(___fldiv@rem+3)^0,w,c
  6742   001D46  B4D8               	btfsc	status,2,c
  6743   001D48  EFA8  F00E         	goto	u2361
  6744   001D4C  EFAA  F00E         	goto	u2360
  6745   001D50                     u2361:
  6746   001D50  EFC2  F00E         	goto	l2496
  6747   001D54                     u2360:
  6748   001D54  802D               	bsf	___fldiv@grs^0,0,c
  6749   001D56  EFC2  F00E         	goto	l2496
  6750   001D5A                     l2490:
  6751   001D5A  90D8               	bcf	status,0,c
  6752   001D5C  361A               	rlcf	___fldiv@b^0,f,c
  6753   001D5E  361B               	rlcf	(___fldiv@b+1)^0,f,c
  6754   001D60  361C               	rlcf	(___fldiv@b+2)^0,f,c
  6755   001D62  361D               	rlcf	(___fldiv@b+3)^0,f,c
  6756   001D64  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  6757   001D66  EFB7  F00E         	goto	u2371
  6758   001D6A  EFB9  F00E         	goto	u2370
  6759   001D6E                     u2371:
  6760   001D6E  EFBA  F00E         	goto	l673
  6761   001D72                     u2370:
  6762   001D72  801A               	bsf	___fldiv@b^0,0,c
  6763   001D74                     l673:
  6764   001D74  90D8               	bcf	status,0,c
  6765   001D76  362D               	rlcf	___fldiv@grs^0,f,c
  6766   001D78  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  6767   001D7A  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  6768   001D7C  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  6769   001D7E  062B               	decf	___fldiv@new_exp^0,f,c
  6770   001D80  A0D8               	btfss	status,0,c
  6771   001D82  062C               	decf	(___fldiv@new_exp+1)^0,f,c
  6772   001D84                     l2496:
  6773   001D84  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  6774   001D86  EFC7  F00E         	goto	u2381
  6775   001D8A  EFC9  F00E         	goto	u2380
  6776   001D8E                     u2381:
  6777   001D8E  EFAD  F00E         	goto	l2490
  6778   001D92                     u2380:
  6779   001D92  0E00               	movlw	0
  6780   001D94  6E32               	movwf	___fldiv@aexp^0,c
  6781   001D96  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  6782   001D98  EFD0  F00E         	goto	u2391
  6783   001D9C  EFD2  F00E         	goto	u2390
  6784   001DA0                     u2391:
  6785   001DA0  EFF6  F00E         	goto	l675
  6786   001DA4                     u2390:
  6787   001DA4  0EFF               	movlw	255
  6788   001DA6  142D               	andwf	___fldiv@grs^0,w,c
  6789   001DA8  6E22               	movwf	??___fldiv^0,c
  6790   001DAA  0EFF               	movlw	255
  6791   001DAC  142E               	andwf	(___fldiv@grs+1)^0,w,c
  6792   001DAE  6E23               	movwf	(??___fldiv+1)^0,c
  6793   001DB0  0EFF               	movlw	255
  6794   001DB2  142F               	andwf	(___fldiv@grs+2)^0,w,c
  6795   001DB4  6E24               	movwf	(??___fldiv+2)^0,c
  6796   001DB6  0E7F               	movlw	127
  6797   001DB8  1430               	andwf	(___fldiv@grs+3)^0,w,c
  6798   001DBA  6E25               	movwf	(??___fldiv+3)^0,c
  6799   001DBC  5022               	movf	??___fldiv^0,w,c
  6800   001DBE  1023               	iorwf	(??___fldiv+1)^0,w,c
  6801   001DC0  1024               	iorwf	(??___fldiv+2)^0,w,c
  6802   001DC2  1025               	iorwf	(??___fldiv+3)^0,w,c
  6803   001DC4  B4D8               	btfsc	status,2,c
  6804   001DC6  EFE7  F00E         	goto	u2401
  6805   001DCA  EFE9  F00E         	goto	u2400
  6806   001DCE                     u2401:
  6807   001DCE  EFED  F00E         	goto	l676
  6808   001DD2                     u2400:
  6809   001DD2                     l2504:
  6810   001DD2  0E01               	movlw	1
  6811   001DD4  6E32               	movwf	___fldiv@aexp^0,c
  6812   001DD6  EFF6  F00E         	goto	l675
  6813   001DDA                     l676:
  6814   001DDA  A01A               	btfss	___fldiv@b^0,0,c
  6815   001DDC  EFF2  F00E         	goto	u2411
  6816   001DE0  EFF4  F00E         	goto	u2410
  6817   001DE4                     u2411:
  6818   001DE4  EFF6  F00E         	goto	l675
  6819   001DE8                     u2410:
  6820   001DE8  EFE9  F00E         	goto	l2504
  6821   001DEC                     l675:
  6822   001DEC  5032               	movf	___fldiv@aexp^0,w,c
  6823   001DEE  B4D8               	btfsc	status,2,c
  6824   001DF0  EFFC  F00E         	goto	u2421
  6825   001DF4  EFFE  F00E         	goto	u2420
  6826   001DF8                     u2421:
  6827   001DF8  EF22  F00F         	goto	l2516
  6828   001DFC                     u2420:
  6829   001DFC  0E01               	movlw	1
  6830   001DFE  261A               	addwf	___fldiv@b^0,f,c
  6831   001E00  0E00               	movlw	0
  6832   001E02  221B               	addwfc	(___fldiv@b+1)^0,f,c
  6833   001E04  221C               	addwfc	(___fldiv@b+2)^0,f,c
  6834   001E06  221D               	addwfc	(___fldiv@b+3)^0,f,c
  6835   001E08  A01D               	btfss	(___fldiv@b+3)^0,0,c
  6836   001E0A  EF09  F00F         	goto	u2431
  6837   001E0E  EF0B  F00F         	goto	u2430
  6838   001E12                     u2431:
  6839   001E12  EF22  F00F         	goto	l2516
  6840   001E16                     u2430:
  6841   001E16  C01A  F022         	movff	___fldiv@b,??___fldiv
  6842   001E1A  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  6843   001E1E  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  6844   001E22  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  6845   001E26  3425               	rlcf	(??___fldiv+3)^0,w,c
  6846   001E28  3225               	rrcf	(??___fldiv+3)^0,f,c
  6847   001E2A  3224               	rrcf	(??___fldiv+2)^0,f,c
  6848   001E2C  3223               	rrcf	(??___fldiv+1)^0,f,c
  6849   001E2E  3222               	rrcf	??___fldiv^0,f,c
  6850   001E30  C022  F01A         	movff	??___fldiv,___fldiv@b
  6851   001E34  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  6852   001E38  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  6853   001E3C  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  6854   001E40  4A2B               	infsnz	___fldiv@new_exp^0,f,c
  6855   001E42  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
  6856   001E44                     l2516:
  6857   001E44  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6858   001E46  EF2D  F00F         	goto	u2441
  6859   001E4A  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  6860   001E4C  E108               	bnz	u2440
  6861   001E4E  282B               	incf	___fldiv@new_exp^0,w,c
  6862   001E50  A0D8               	btfss	status,0,c
  6863   001E52  EF2D  F00F         	goto	u2441
  6864   001E56  EF2F  F00F         	goto	u2440
  6865   001E5A                     u2441:
  6866   001E5A  EF3A  F00F         	goto	l2520
  6867   001E5E                     u2440:
  6868   001E5E  0E00               	movlw	0
  6869   001E60  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  6870   001E62  682B               	setf	___fldiv@new_exp^0,c
  6871   001E64  0E00               	movlw	0
  6872   001E66  6E1A               	movwf	___fldiv@b^0,c
  6873   001E68  0E00               	movlw	0
  6874   001E6A  6E1B               	movwf	(___fldiv@b+1)^0,c
  6875   001E6C  0E00               	movlw	0
  6876   001E6E  6E1C               	movwf	(___fldiv@b+2)^0,c
  6877   001E70  0E00               	movlw	0
  6878   001E72  6E1D               	movwf	(___fldiv@b+3)^0,c
  6879   001E74                     l2520:
  6880   001E74  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6881   001E76  EF47  F00F         	goto	u2450
  6882   001E7A  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  6883   001E7C  E106               	bnz	u2451
  6884   001E7E  042B               	decf	___fldiv@new_exp^0,w,c
  6885   001E80  B0D8               	btfsc	status,0,c
  6886   001E82  EF45  F00F         	goto	u2451
  6887   001E86  EF47  F00F         	goto	u2450
  6888   001E8A                     u2451:
  6889   001E8A  EF55  F00F         	goto	l2524
  6890   001E8E                     u2450:
  6891   001E8E  0E00               	movlw	0
  6892   001E90  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  6893   001E92  0E00               	movlw	0
  6894   001E94  6E2B               	movwf	___fldiv@new_exp^0,c
  6895   001E96  0E00               	movlw	0
  6896   001E98  6E1A               	movwf	___fldiv@b^0,c
  6897   001E9A  0E00               	movlw	0
  6898   001E9C  6E1B               	movwf	(___fldiv@b+1)^0,c
  6899   001E9E  0E00               	movlw	0
  6900   001EA0  6E1C               	movwf	(___fldiv@b+2)^0,c
  6901   001EA2  0E00               	movlw	0
  6902   001EA4  6E1D               	movwf	(___fldiv@b+3)^0,c
  6903   001EA6  0E00               	movlw	0
  6904   001EA8  6E2A               	movwf	___fldiv@sign^0,c
  6905   001EAA                     l2524:
  6906   001EAA  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  6907   001EAE  A031               	btfss	___fldiv@bexp^0,0,c
  6908   001EB0  EF5C  F00F         	goto	u2461
  6909   001EB4  EF5E  F00F         	goto	u2460
  6910   001EB8                     u2461:
  6911   001EB8  EF61  F00F         	goto	l2530
  6912   001EBC                     u2460:
  6913   001EBC  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  6914   001EBE  EF62  F00F         	goto	l2532
  6915   001EC2                     l2530:
  6916   001EC2  9E1C               	bcf	(___fldiv@b+2)^0,7,c
  6917   001EC4                     l2532:
  6918   001EC4  90D8               	bcf	status,0,c
  6919   001EC6  3031               	rrcf	___fldiv@bexp^0,w,c
  6920   001EC8  6E1D               	movwf	(___fldiv@b+3)^0,c
  6921   001ECA  EF18  F00E         	goto	l2446
  6922   001ECE                     l662:
  6923   001ECE  0012               	return		;funcret
  6924   001ED0                     __end_of___fldiv:
  6925                           	callstack 0
  6926                           
  6927 ;; *************** function _Valor_AD *****************
  6928 ;; Defined at:
  6929 ;;		line 63 in file "Voltimetro.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  porta           1    wreg     unsigned char 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  porta           1    4[COMRAM] unsigned char 
  6934 ;;  C               2    2[COMRAM] unsigned int 
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  2    0[COMRAM] unsigned int 
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6944 ;;      Params:         2       0       0       0       0       0       0       0       0
  6945 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6947 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6948 ;;Total ram usage:        5 bytes
  6949 ;; Hardware stack levels used: 1
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_Tensao
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	text32
  6958   002D40                     __ptext32:
  6959                           	callstack 0
  6960   002D40                     _Valor_AD:
  6961                           	callstack 29
  6962                           
  6963                           ;incstack = 0
  6964                           ;Valor_AD@porta stored from wreg
  6965   002D40  6E05               	movwf	Valor_AD@porta^0,c
  6966   002D42  5005               	movf	Valor_AD@porta^0,w,c
  6967   002D44  A4D8               	btfss	status,2,c
  6968   002D46  EFA7  F016         	goto	u3411
  6969   002D4A  EFA9  F016         	goto	u3410
  6970   002D4E                     u3411:
  6971   002D4E  EFAD  F016         	goto	l3162
  6972   002D52                     u3410:
  6973   002D52  0EC3               	movlw	-61
  6974   002D54  16C2               	andwf	194,f,c	;volatile
  6975   002D56  EFB9  F016         	goto	l3166
  6976   002D5A                     l3162:
  6977   002D5A  0405               	decf	Valor_AD@porta^0,w,c
  6978   002D5C  A4D8               	btfss	status,2,c
  6979   002D5E  EFB3  F016         	goto	u3421
  6980   002D62  EFB5  F016         	goto	u3420
  6981   002D66                     u3421:
  6982   002D66  EFB9  F016         	goto	l3166
  6983   002D6A                     u3420:
  6984   002D6A  50C2               	movf	194,w,c	;volatile
  6985   002D6C  0BC3               	andlw	-61
  6986   002D6E  0904               	iorlw	4
  6987   002D70  6EC2               	movwf	194,c	;volatile
  6988   002D72                     l3166:
  6989   002D72  82C2               	bsf	194,1,c	;volatile
  6990   002D74                     l60:
  6991   002D74  A2C2               	btfss	194,1,c	;volatile
  6992   002D76  EFBF  F016         	goto	u3431
  6993   002D7A  EFC1  F016         	goto	u3430
  6994   002D7E                     u3431:
  6995   002D7E  EFBA  F016         	goto	l60
  6996   002D82                     u3430:
  6997   002D82  CFC3 F003          	movff	4035,Valor_AD@C	;volatile
  6998   002D86  CFC4 F004          	movff	4036,Valor_AD@C+1	;volatile
  6999   002D8A  C003  F001         	movff	Valor_AD@C,?_Valor_AD
  7000   002D8E  C004  F002         	movff	Valor_AD@C+1,?_Valor_AD+1
  7001   002D92  0012               	return		;funcret
  7002   002D94                     __end_of_Valor_AD:
  7003                           	callstack 0
  7004                           
  7005                           	psect	rparam
  7006   000000                     
  7007                           	psect	idloc
  7008                           
  7009                           ;Config register IDLOC0 @ 0x200000
  7010                           ;	unspecified, using default values
  7011   200000                     	org	2097152
  7012   200000  FF                 	db	255
  7013                           
  7014                           ;Config register IDLOC1 @ 0x200001
  7015                           ;	unspecified, using default values
  7016   200001                     	org	2097153
  7017   200001  FF                 	db	255
  7018                           
  7019                           ;Config register IDLOC2 @ 0x200002
  7020                           ;	unspecified, using default values
  7021   200002                     	org	2097154
  7022   200002  FF                 	db	255
  7023                           
  7024                           ;Config register IDLOC3 @ 0x200003
  7025                           ;	unspecified, using default values
  7026   200003                     	org	2097155
  7027   200003  FF                 	db	255
  7028                           
  7029                           ;Config register IDLOC4 @ 0x200004
  7030                           ;	unspecified, using default values
  7031   200004                     	org	2097156
  7032   200004  FF                 	db	255
  7033                           
  7034                           ;Config register IDLOC5 @ 0x200005
  7035                           ;	unspecified, using default values
  7036   200005                     	org	2097157
  7037   200005  FF                 	db	255
  7038                           
  7039                           ;Config register IDLOC6 @ 0x200006
  7040                           ;	unspecified, using default values
  7041   200006                     	org	2097158
  7042   200006  FF                 	db	255
  7043                           
  7044                           ;Config register IDLOC7 @ 0x200007
  7045                           ;	unspecified, using default values
  7046   200007                     	org	2097159
  7047   200007  FF                 	db	255
  7048                           
  7049                           	psect	config
  7050                           
  7051                           ;Config register CONFIG1L @ 0x300000
  7052                           ;	unspecified, using default values
  7053                           ;	PLL Prescaler Selection bits
  7054                           ;	PLLDIV = 0x0, unprogrammed default
  7055                           ;	System Clock Postscaler Selection bits
  7056                           ;	CPUDIV = 0x0, unprogrammed default
  7057                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7058                           ;	USBDIV = 0x0, unprogrammed default
  7059   300000                     	org	3145728
  7060   300000  00                 	db	0
  7061                           
  7062                           ;Config register CONFIG1H @ 0x300001
  7063                           ;	Oscillator Selection bits
  7064                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
  7065                           ;	Fail-Safe Clock Monitor Enable bit
  7066                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7067                           ;	Internal/External Oscillator Switchover bit
  7068                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7069   300001                     	org	3145729
  7070   300001  0B                 	db	11
  7071                           
  7072                           ;Config register CONFIG2L @ 0x300002
  7073                           ;	Power-up Timer Enable bit
  7074                           ;	PWRT = OFF, PWRT disabled
  7075                           ;	Brown-out Reset Enable bits
  7076                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7077                           ;	Brown-out Reset Voltage bits
  7078                           ;	BORV = 3, Minimum setting 2.05V
  7079                           ;	USB Voltage Regulator Enable bit
  7080                           ;	VREGEN = OFF, USB voltage regulator disabled
  7081   300002                     	org	3145730
  7082   300002  1F                 	db	31
  7083                           
  7084                           ;Config register CONFIG2H @ 0x300003
  7085                           ;	Watchdog Timer Enable bit
  7086                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7087                           ;	Watchdog Timer Postscale Select bits
  7088                           ;	WDTPS = 32768, 1:32768
  7089   300003                     	org	3145731
  7090   300003  1E                 	db	30
  7091                           
  7092                           ; Padding undefined space
  7093   300004                     	org	3145732
  7094   300004  FF                 	db	255
  7095                           
  7096                           ;Config register CONFIG3H @ 0x300005
  7097                           ;	CCP2 MUX bit
  7098                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7099                           ;	PORTB A/D Enable bit
  7100                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7101                           ;	Low-Power Timer 1 Oscillator Enable bit
  7102                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7103                           ;	MCLR Pin Enable bit
  7104                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7105   300005                     	org	3145733
  7106   300005  81                 	db	129
  7107                           
  7108                           ;Config register CONFIG4L @ 0x300006
  7109                           ;	Stack Full/Underflow Reset Enable bit
  7110                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7111                           ;	Single-Supply ICSP Enable bit
  7112                           ;	LVP = OFF, Single-Supply ICSP disabled
  7113                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7114                           ;	ICPRT = OFF, ICPORT disabled
  7115                           ;	Extended Instruction Set Enable bit
  7116                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7117                           ;	Background Debugger Enable bit
  7118                           ;	DEBUG = 0x1, unprogrammed default
  7119   300006                     	org	3145734
  7120   300006  81                 	db	129
  7121                           
  7122                           ; Padding undefined space
  7123   300007                     	org	3145735
  7124   300007  FF                 	db	255
  7125                           
  7126                           ;Config register CONFIG5L @ 0x300008
  7127                           ;	Code Protection bit
  7128                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7129                           ;	Code Protection bit
  7130                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7131                           ;	Code Protection bit
  7132                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7133                           ;	Code Protection bit
  7134                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7135   300008                     	org	3145736
  7136   300008  0F                 	db	15
  7137                           
  7138                           ;Config register CONFIG5H @ 0x300009
  7139                           ;	Boot Block Code Protection bit
  7140                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7141                           ;	Data EEPROM Code Protection bit
  7142                           ;	CPD = OFF, Data EEPROM is not code-protected
  7143   300009                     	org	3145737
  7144   300009  C0                 	db	192
  7145                           
  7146                           ;Config register CONFIG6L @ 0x30000A
  7147                           ;	Write Protection bit
  7148                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7149                           ;	Write Protection bit
  7150                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7151                           ;	Write Protection bit
  7152                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7153                           ;	Write Protection bit
  7154                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7155   30000A                     	org	3145738
  7156   30000A  0F                 	db	15
  7157                           
  7158                           ;Config register CONFIG6H @ 0x30000B
  7159                           ;	Configuration Register Write Protection bit
  7160                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7161                           ;	Boot Block Write Protection bit
  7162                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7163                           ;	Data EEPROM Write Protection bit
  7164                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7165   30000B                     	org	3145739
  7166   30000B  E0                 	db	224
  7167                           
  7168                           ;Config register CONFIG7L @ 0x30000C
  7169                           ;	Table Read Protection bit
  7170                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7171                           ;	Table Read Protection bit
  7172                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7173                           ;	Table Read Protection bit
  7174                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7175                           ;	Table Read Protection bit
  7176                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7177   30000C                     	org	3145740
  7178   30000C  0F                 	db	15
  7179                           
  7180                           ;Config register CONFIG7H @ 0x30000D
  7181                           ;	Boot Block Table Read Protection bit
  7182                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7183   30000D                     	org	3145741
  7184   30000D  40                 	db	64
  7185                           tosu	equ	0xFFF
  7186                           tosh	equ	0xFFE
  7187                           tosl	equ	0xFFD
  7188                           stkptr	equ	0xFFC
  7189                           pclatu	equ	0xFFB
  7190                           pclath	equ	0xFFA
  7191                           pcl	equ	0xFF9
  7192                           tblptru	equ	0xFF8
  7193                           tblptrh	equ	0xFF7
  7194                           tblptrl	equ	0xFF6
  7195                           tablat	equ	0xFF5
  7196                           prodh	equ	0xFF4
  7197                           prodl	equ	0xFF3
  7198                           indf0	equ	0xFEF
  7199                           postinc0	equ	0xFEE
  7200                           postdec0	equ	0xFED
  7201                           preinc0	equ	0xFEC
  7202                           plusw0	equ	0xFEB
  7203                           fsr0h	equ	0xFEA
  7204                           fsr0l	equ	0xFE9
  7205                           wreg	equ	0xFE8
  7206                           indf1	equ	0xFE7
  7207                           postinc1	equ	0xFE6
  7208                           postdec1	equ	0xFE5
  7209                           preinc1	equ	0xFE4
  7210                           plusw1	equ	0xFE3
  7211                           fsr1h	equ	0xFE2
  7212                           fsr1l	equ	0xFE1
  7213                           bsr	equ	0xFE0
  7214                           indf2	equ	0xFDF
  7215                           postinc2	equ	0xFDE
  7216                           postdec2	equ	0xFDD
  7217                           preinc2	equ	0xFDC
  7218                           plusw2	equ	0xFDB
  7219                           fsr2h	equ	0xFDA
  7220                           fsr2l	equ	0xFD9
  7221                           status	equ	0xFD8

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     60     153
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S660$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S660$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S732$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK0[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_escreve_lcd
    _escreve_lcd->_envia_byte_lcd
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _inicializa_lcd->_limpa_lcd
    _limpa_lcd->_envia_byte_lcd
    _caracter_inicio->_envia_byte_lcd
    _envia_byte_lcd->_envia_nibble_lcd
    _Tensao->___fldiv
    ___xxtofl->_Valor_AD
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   31014
                                             94 COMRAM     1     1      0
                             _Tensao
                    _caracter_inicio
                     _inicializa_lcd
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   23482
                                             52 BANK0      8     2      6
                             _Tensao (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   23272
                                             44 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   22913
                                             79 COMRAM    15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     643
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   20193
                                             70 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3763
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1585
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1336
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     654
                                              5 COMRAM     1     1      0
                        _escreve_lcd
 ---------------------------------------------------------------------------------
 (6) _escreve_lcd                                          1     1      0     632
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             50 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _inicializa_lcd                                       1     1      0    1308
                                              5 COMRAM     1     1      0
                     _envia_byte_lcd
                   _envia_nibble_lcd
                          _limpa_lcd
 ---------------------------------------------------------------------------------
 (2) _limpa_lcd                                            1     1      0     610
                                              4 COMRAM     1     1      0
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (1) _caracter_inicio                                      3     2      1     876
                                              4 COMRAM     3     2      1
                     _envia_byte_lcd
 ---------------------------------------------------------------------------------
 (7) _envia_byte_lcd                                       2     1      1     610
                                              2 COMRAM     2     1      1
                   _envia_nibble_lcd
 ---------------------------------------------------------------------------------
 (8) _envia_nibble_lcd                                     2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Tensao                                               9     5      4    5348
                                             50 COMRAM     9     5      4
                           _Valor_AD
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              5 COMRAM    14    10      4
                           _Valor_AD (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Valor_AD                                             5     3      2      67
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Tensao
     _Valor_AD
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___xxtofl
       _Valor_AD (ARG)
   _caracter_inicio
     _envia_byte_lcd
       _envia_nibble_lcd
   _inicializa_lcd
     _envia_byte_lcd
     _envia_nibble_lcd
     _limpa_lcd
       _envia_byte_lcd
   _printf
     _Tensao (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
                 _escreve_lcd
                   _envia_byte_lcd
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhlh        2A      0       0      22        0.0%
BITBIGSFRll         20      0       0      26        0.0%
BITBIGSFRhhl         E      0       0      21        0.0%
BITBIGSFRhlll        E      0       0      24        0.0%
BITBIGSFRhllh        2      0       0      23        0.0%
BITBIGSFRlh          2      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8      27        0.0%
DATA                 0      0      F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 05 20:42:53 2023

                         l7 2BE8                ___fldiv@aexp 0032                ___fldiv@bexp 0031  
              ___fldiv@sign 002A                          l10 2FA6                          l13 3032  
                        l24 2EFE                          l16 300E                          l19 2CD8  
                        l60 2D74                          l62 2D82                          l63 2D92  
                        l80 2FF4                          l66 2B68                          l74 2A62  
                        l69 303C         ___wmul@multiplicand 0003                         l350 2704  
                       l345 26BE                         l354 2F76                         l610 13EE  
                       l339 2A3C                         l701 19C6                         l711 1AF6  
                       l703 1A3E                         l704 1A2C                         l608 143A  
                       l625 1554                         l617 170A                         l609 1428  
                       l377 2600                         l634 1624                         l650 2E78  
                       l635 1612                         l803 124A                         l662 1ECE  
                       l742 2436                         l910 2D3E                         l806 0BE6  
                       l735 239E                         l664 1D2E                         l808 0A2C  
                       l673 1D74                         l738 24FA                         l675 1DEC  
                       l667 1CF2                         l907 2D2E                         l676 1DDA  
                       l916 2E32                         l836 102E                         l852 2992  
                       l749 2492                         l694 17D0                         l942 2F3E  
                       l758 2FCE                         l928 28CC                         l936 2EBC  
                       l792 2C62                         l848 298A                         l872 2134  
                       l698 1B34                         l788 2C0C                         l879 2DE2  
                       l896 2346                         l889 2802                         l899 228A  
                       _pad 2BEA                         wreg 0FE8                ___flmul@aexp 0012  
              ___flmul@bexp 0013                ___flmul@sign 000D                ___flmul@temp 0018  
              ___flmul@prod 0014                ___fltol@exp1 000A                        l2200 129A  
                      l3000 0F6A                        l2210 12CC                        l2202 12A2  
                      l3010 1004                        l3002 0F72                        l2300 14A4  
                      l2220 1302                        l2212 12D2                        l2204 12B2  
                      l3020 1062                        l3012 1024                        l3004 0F78  
                      l3100 1F72                        l2150 2BDC                        l2302 14A8  
                      l2310 14C8                        l2230 133E                        l2222 1312  
                      l2214 12E0                        l2206 12B8                        l3030 108A  
                      l3022 1068                        l3014 1040                        l3006 0F80  
                      l3102 1F84                        l3110 1F9C                        l3200 24A2  
                      l2152 2BDE                        l2160 2F8C                        l2312 14EE  
                      l2320 1544                        l2304 14B6                        l2240 135C  
                      l2232 134C                        l2224 1314                        l2216 12E2  
                      l2208 12CA                        l3040 10BE                        l3024 1070  
                      l3016 104E                        l3032 1090                        l3008 0F8C  
                      l3120 2056                        l3104 1F8C                        l3112 1FCE  
                      l2410 1B62                        l2402 1B36                        l3210 24EA  
                      l3202 24A6                        l2154 2BE6                        l2162 2F8E  
                      l2330 1598                        l2322 156A                        l2314 1522  
                      l2306 14B8                        l2250 1370                        l2242 1360  
                      l2234 1350                        l2218 12F2                        l2226 131C  
                      l2170 3036                        l3050 1174                        l3042 1116  
                      l3034 10A2                        l3026 1080                        l3018 105E  
                      l3130 20CE                        l3122 2080                        l3114 1FEE  
                      l3106 1F94                        l2500 1D96                        l2420 1B9C  
                      l2412 1B72                        l2404 1B42                        l3204 24CA  
                      l2148 2B6C                        l2164 2F96                        l2156 2F7A  
                      l2340 15C2                        l2332 15A6                        l2324 157A  
                      l2316 1524                        l2308 14C2                        l2260 1384  
                      l2252 1374                        l2244 1364                        l2236 1354  
                      l2228 132C                        l2180 2850                        l2172 2804  
                      l3060 11E4                        l3052 1190                        l3044 114A  
                      l3036 10B4                        l3028 1084                        l3124 20A0  
                      l3116 2022                        l3132 20FA                        l3220 2DD8  
                      l2510 1E08                        l2502 1DA4                        l2430 1BC8  
                      l2422 1BA2                        l2414 1B82                        l2406 1B50  
                      l3206 24DA                        l2166 2F9E                        l2158 2F84  
                      l3230 2C82                        l2350 15F4                        l2342 15D2  
                      l2334 15A8                        l2318 1534                        l2270 13D6  
                      l2262 1388                        l2254 1378                        l2246 1368  
                      l2238 1358                        l2190 1266                        l2182 2886  
                      l2174 2816                        l3062 11FC                        l3054 1198  
                      l3046 1152                        l3038 10B8                        l3214 2D94  
                      l3160 2D52                        l2520 1E74                        l2512 1E16  
                      l2504 1DD2                        l2440 1C02                        l2432 1BD8  
                      l2424 1BA8                        l2416 1B84                        l2408 1B52  
                      l2600 1896                        l3208 24E8                        l3240 2CCA  
                      l3232 2C98                        l3224 2C64                        l2360 164E  
                      l2352 160A                        l2336 15B6                        l2328 158E  
                      l2344 15D4                        l2280 141A                        l2272 13E6  
                      l2256 137C                        l2248 136C                        l2264 138C  
                      l2192 1268                        l2168 3028                        l2176 2828  
                      l3064 120C                        l3056 11A6                        l3048 1156  
                      l3080 2954                        l3072 28CE                        l3136 210C  
                      l3216 2DA0                        l3162 2D5A                        l2530 1EC2  
                      l2522 1E8E                        l2514 1E40                        l2442 1C18  
                      l2434 1BE8                        l2426 1BB6                        l2418 1B8C  
                      l2610 18F8                        l2602 18A2                        l3170 235A  
                      l3250 2ED8                        l3154 2FF6                        l3242 2CCE  
                      l3234 2CA8                        l3226 2C6C                        l2370 16CA  
                      l2362 1688                        l2338 15BE                        l2346 15E2  
                      l2282 141C                        l2274 13FC                        l2266 1390  
                      l2258 1380                        l2194 1278                        l2186 124C  
                      l2178 2832                        l3066 1222                        l3058 11D6  
                      l3082 2962                        l3074 28D6                        l3090 1F10  
                      l3218 2DBC                        l3164 2D6A                        l2532 1EC4  
                      l2524 1EAA                        l2508 1DFC                        l2516 1E44  
                      l2460 1C6C                        l2444 1C28                        l2452 1C48  
                      l2436 1BEA                        l2428 1BB8                        l2620 198E  
                      l2612 1904                        l2604 18B2                        l2540 170C  
                      l3180 23D8                        l3172 2368                        l3260 2B00  
                      l3252 2EEA                        l3244 2EC0                        l3156 3000  
                      l3236 2CB6                        l3228 2C7C                        l2700 267E  
                      l2380 16EA                        l2372 16CE                        l2356 1634  
                      l2364 168A                        l2348 15E6                        l2292 146C  
                      l2284 1426                        l2276 1408                        l2268 13BA  
                      l2196 1288                        l2188 1258                        l3068 122A  
                      l3076 28FA                        l3092 1F14                        l3084 1ED0  
                      l3166 2D72                        l3158 2D42                        l2526 1EAE  
                      l2518 1E5E                        l2470 1CBE                        l2462 1C86  
                      l2454 1C58                        l2446 1C30                        l2438 1BF2  
                      l2630 19E4                        l2622 19AC                        l2614 1920  
                      l2606 18CC                        l2550 1748                        l2542 1718  
                      l3190 242C                        l3182 23E0                        l3174 23AE  
                      l3262 2B58                        l3254 2EEE                        l3246 2EC4  
                      l3238 2CC0                        l2710 2702                        l2702 268C  
                      l2382 16F8                        l2374 16DC                        l2366 169A  
                      l2358 1640                        l2294 147C                        l2286 1448  
                      l2278 140C                        l2198 1298                        l2390 2E86  
                      l3078 2934                        l3094 1F38                        l3086 1EF4  
                      l2528 1EBC                        l2480 1D1A                        l2472 1CCE  
                      l2464 1C96                        l2456 1C58                        l2448 1C34  
                      l2640 1A4E                        l2632 19E8                        l2624 19B6  
                      l2616 194A                        l2608 18DC                        l2560 177A  
                      l2552 1758                        l2544 1726                        l3192 2468  
                      l3184 23EC                        l3176 23C4                        l3168 234A  
                      l3256 2EF4                        l3248 2ED4                        l2704 269E  
                      l2384 16FA                        l2376 16E2                        l2368 16AA  
                      l2296 148A                        l2288 1458                        l2392 2E98  
                      l3352 1FB0                        l3096 1F46                        l3088 1F02  
                      l3280 2A56                        l3272 2A3E                        l2490 1D5A  
                      l2482 1D1C                        l2474 1CE2                        l2466 1CA6  
                      l2650 1AB0                        l2642 1A5A                        l2634 19F6  
                      l2626 19C4                        l2618 1980                        l2570 17BA  
                      l2562 1788                        l2554 175E                        l2546 1728  
                      l3194 2474                        l3186 241E                        l3258 2AD8  
                      l2706 26AC                        l2714 2F40                        l2378 16E4  
                      l2298 1498                        l2730 2550                        l2722 24FC  
                      l2810 2136                        l2394 2E9C                        l2802 2F00  
                      l3354 206A                        l3098 1F62                        l3266 2FA8  
                      l3290 2ABE                        l3282 2A5A                        l3274 2A4A  
                      l2492 1D64                        l2484 1D2C                        l2476 1CF0  
                      l2468 1CB6                        l2660 1B18                        l2652 1AC4  
                      l2644 1A68                        l2636 1A24                        l2628 19D6  
                      l2580 1804                        l2572 17C0                        l2564 178A  
                      l2556 176E                        l2548 1738                        l3196 2482  
                      l3188 2420                        l2708 26FC                        l2716 2F56  
                      l2732 2552                        l2724 2512                        l2812 2156  
                      l2388 2E7A                        l2804 2F10                        l2900 0992  
                      l2396 2FD0                        l3356 20EC                        l3268 2FB2  
                      l3284 2A5E                        l3276 2A4E                        l2494 1D72  
                      l2486 1D3E                        l2478 1CFC                        l2662 1B1A  
                      l2654 1ADE                        l2646 1A92                        l2590 1854  
                      l2582 1810                        l2574 17E0                        l2566 179A  
                      l2558 1774                        l3198 24A0                        l2718 2F66  
                      l2670 2E34                        l2734 2562                        l2830 22FE  
                      l2822 223E                        l2814 21AC                        l2806 2CDA  
                      l2902 099A                        l2910 09DC                        l2398 2FEC  
                      l3286 2A6C                        l3278 2A52                        l2488 1D54  
                      l2496 1D84                        l2656 1AFA                        l2664 1B20  
                      l2648 1A96                        l2592 1860                        l2584 181A  
                      l2576 17F0                        l2568 17AA                        l2680 29D2  
                      l2672 2E44                        l2760 25E0                        l2744 258C  
                      l2736 2566                        l2728 2526                        l2832 2326  
                      l2824 227A                        l2816 21C0                        l2808 2CF8  
                      l2840 2DF8                        l2920 0A76                        l2912 09F6  
                      l2904 09B2                        l3288 2A90                        l2498 1D92  
                      l2666 1B24                        l2658 1B0A                        l2594 186C  
                      l2586 1830                        l2682 2A00                        l2762 25F0  
                      l2754 25B4                        l2746 2596                        l2738 2574  
                      l2834 2336                        l2818 21CE                        l2826 22AE  
                      l2842 2E04                        l2770 2C04                        l2930 0B6C  
                      l2922 0AB4                        l2906 09BC                        l2850 082E  
                      l2596 187A                        l2588 183C                        l2684 2A10  
                      l2676 2994                        l2692 2602                        l2756 25C0  
                      l2748 25A0                        l2780 2706                        l2828 22EA  
                      l2844 2E08                        l2772 2C18                        l2940 0BFE  
                      l2932 0B74                        l2924 0AE6                        l2916 0A3C  
                      l2860 087A                        l2852 0834                        l2598 1886  
                      l2686 2A34                        l2678 29C2                        l2694 2630  
                      l2758 25D0                        l2782 2726                        l2846 2E14  
                      l2838 2DE4                        l2774 2C2C                        l2766 2BEA  
                      l2950 0C30                        l2942 0C0A                        l2926 0B24  
                      l2918 0A42                        l2870 08B8                        l2862 0884  
                      l2854 0844                        ?_pad 0017                        l2688 2A3A  
                      l2696 2640                        l2784 2764                        l2792 27A4  
                      l2848 2E18                        l2776 2C30                        l2768 2BF8  
                      l2960 0C78                        l2952 0C3E                        l2944 0C12  
                      l2928 0B38                        l2936 0BB4                        l2880 0900  
                      l2872 08C0                        l2864 088C                        l2856 0852  
                      l2698 266E                        l2794 27B6                        l2786 278C  
                      l2778 2C4E                        l2970 0D8C                        l2962 0C88  
                      l2954 0C56                        l2946 0C1A                        l2938 0BEE  
                      l2882 0906                        l2866 089C                        l2874 08C4  
                      l2858 0856                        l2788 2798                        l2980 0E2C  
                      l2964 0C9C                        l2972 0D92                        l2956 0C68  
                      l2948 0C1E                        l2884 090E                        l2876 08EA  
                      l2892 0950                        l2868 08AC                        l2798 27FA  
                      l2990 0F08                        l2982 0E5E                        l2974 0DB0  
                      l2966 0D00                        l2958 0C70                        l2894 0976  
                      l2886 0926                        l2878 08FC                        l2992 0F0E  
                      l2984 0E6E                        l2976 0DE4                        l2968 0D58  
                      l2896 0988                        l2888 0930                        l2994 0F42  
                      l2986 0E7E                        l2978 0E16                        l2898 098C  
                      l2996 0F56                        l2988 0EB2                        l2998 0F5A  
                      STR_1 0801                        STR_2 0813                        STR_3 0825  
                      STR_6 0829                        u2000 1458                        u2001 1454  
                      u2010 148A                        u2011 1486                        u2100 15D2  
                      u2020 1498                        u2101 15CE                        u2021 1494  
                      u2110 15E2                        u2030 14B6                        u2111 15DE  
                      u2031 14B2                        u2200 16CA                        u2120 15F4  
                      u2040 14EE                        u3000 22CE                        u2201 16C6  
                      u2121 15F0                        u2041 14EA                        u2210 16DC  
                      u2130 160A                        u2050 1534                        u3010 22EA  
                      u2211 16D8                        u2131 1606                        u2051 1530  
                      u3011 22E6                        u2300 1C18                        u2220 16F8  
                      u2140 1620                        u2060 156A                        u3020 2326  
                      u3100 0988                        u2301 1C14                        u2221 16F4  
                      u2141 161C                        u2061 1566                        u3021 2322  
                      u3005 22C4                        u3101 0984                        u2310 1C58  
                      u2150 1634                        u2070 157A                        u3030 2E32  
                      u2230 2EBC                        u3110 0A28                        u2311 1C54  
                      u2151 1630                        u2071 1576                        u3031 2E2E  
                      u2231 2EB8                        u3111 0A24                        u2400 1DD2  
                      u2320 1CCE                        u2240 1B50                        u2160 164E  
                      u2080 15A6                        u3200 0C68                        u3120 0AB4  
                      u3040 0852                        u2401 1DCE                        u2321 1CCA  
                      u2241 1B4C                        u2161 164A                        u2081 15A2  
                      u3201 0C64                        u3121 0AB0                        u3041 084E  
                      u2410 1DE8                        u2330 1CF0                        u2250 1B62  
                      u2170 1688                        u2090 15B6                        u3210 0DB0  
                      u3130 0AE6                        u3050 089C                        u2411 1DE4  
                      u2331 1CEC                        u2251 1B5E                        u2171 1684  
                      u2091 15B2                        u3211 0DAC                        u3131 0AE2  
                      u3051 0898                        u2420 1DFC                        u2340 1D1A  
                      u2260 1B72                        u2500 1788                        u2180 169A  
                      u3300 10A2                        u3220 0E16                        u3140 0B24  
                      u3060 08AC                        u2421 1DF8                        u2341 1D16  
                      u2261 1B6E                        u2501 1784                        u2181 1696  
                      u3301 109E                        u3221 0E12                        u3141 0B20  
                      u3061 08A8                        u2430 1E16                        u2350 1D3E  
                      u2270 1BB6                        u2510 179A                        u2190 16AA  
                      u3310 1174                        u3230 0E5E                        u3150 0BB0  
                      u3070 08EA                        u2431 1E12                        u2351 1D3A  
                      u2271 1BB2                        u2511 1796                        u2191 16A6  
                      u3311 1170                        u3231 0E5A                        u3151 0BAC  
                      u3071 08E6                        u2440 1E5E                        u2360 1D54  
                      u2280 1BC8                        u2600 1A3A                        u2520 17AA  
                      u1800 2816                        u3320 1190                        u3240 0E6E  
                      u3160 0BE6                        u3080 08FC                        u3400 1FEA  
                      u2441 1E5A                        u2361 1D50                        u2281 1BC4  
                      u2601 1A36                        u2521 17A6                        u1801 2812  
                      u3321 118C                        u3241 0E6A                        u3161 0BE2  
                      u3081 08F8                        u3401 1FE6                        u3410 2D52  
                      u2450 1E8E                        u2370 1D72                        u2290 1BD8  
                      u2610 1A4E                        u2530 17E0                        u1810 2828  
                      u3330 11F6                        u3250 0F08                        u3170 0BFE  
                      u3090 0976                        u3411 2D4E                        u2451 1E8A  
                      u2371 1D6E                        u2291 1BD4                        u2611 1A4A  
                      u2531 17DC                        u1811 2824                        u3331 11F0  
                      u3251 0F04                        u3171 0BFA                        u3091 0972  
                      u3420 2D6A                        u2460 1EBC                        u2380 1D92  
                      u2620 1A68                        u2540 17F0                        u3500 2492  
                      u2700 266E                        u1900 1302                        u1820 2850  
                      u3340 11F8                        u3260 0F56                        u3180 0C30  
                      u3421 2D66                        u2461 1EB8                        u2381 1D8E  
                      u2621 1A64                        u2541 17EC                        u3501 248E  
                      u2701 266A                        u1901 12FE                        u1821 284C  
                      u3261 0F52                        u3181 0C2C                        u3430 2D82  
                      u2390 1DA4                        u2630 1AB0                        u2550 196A  
                      u2470 1726                        u3510 24A0                        u2710 268C  
                      u1910 133E                        u1830 2886                        u3350 120C  
                      u3270 1004                        u3190 0C3E                        u3431 2D7E  
                      u2391 1DA0                        u2631 1AAC                        u2471 1722  
                      u3511 249C                        u2711 2688                        u1911 133A  
                      u1831 2882                        u3351 1208                        u3271 1000  
                      u3191 0C3A                        u2640 1ADE                        u2560 19C4  
                      u2480 1738                        u3520 24DA                        u3440 235A  
                      u2720 26AC                        u1920 134C                        u1840 1266  
                      u2800 25D0                        u3280 1040                        u3360 28FA  
                      u2641 1ADA                        u2561 19C0                        u2481 1734  
                      u3521 24D6                        u3441 2356                        u2721 26A8  
                      u1921 1348                        u1841 1262                        u2801 25CC  
                      u3281 103C                        u3361 28F6                        u2650 1B18  
                      u2570 19E4                        u2490 1748                        u3530 24E8  
                      u3450 2368                        u2730 26FC                        u1930 13BA  
                      u1850 1278                        u2810 25E0                        u3290 104E  
                      u3370 298A                        u2651 1B14                        u2571 19E0  
                      u2555 1960                        u2491 1744                        u3531 24E4  
                      u3451 2364                        u2731 26F8                        u1931 13B6  
                      u1851 1274                        u2811 25DC                        u3291 104A  
                      u3371 2986                        u2580 19F6                        u3460 23C4  
                      u2660 29C2                        u2740 2F56                        u1940 13D2  
                      u1860 1288                        u2900 27F2                        u2820 2BF8  
                      u3380 1EF4                        u3540 2DD8                        u2581 19F2  
                      u3461 23C0                        u2661 29BE                        u2741 2F52  
                      u1941 13CC                        u1861 1284                        u2821 2BF4  
                      u3381 1EF0                        u3541 2DD4                        u2590 1A24  
                      u3470 241A                        u3550 2ED4                        u2670 2A00  
                      u1950 13D4                        u1870 12CA                        u2750 2512  
                      u2830 2C4E                        u2910 2F3E                        u3390 1F38  
                      u2591 1A20                        u3471 2416                        u3551 2ED0  
                      u3607 2C9E                        u2671 29FC                        u1871 12C6  
                      u2751 250E                        u2831 2C4A                        u2911 2F3A  
                      u3391 1F34                        u3480 2464                        u3560 2EEA  
                      u2680 2A34                        u1960 13FC                        u1880 12E0  
                      u2760 2546                        u2840 2746                        u2920 2CF8  
                      u3481 2460                        u3561 2EE6                        u3617 2CB0  
                      u2681 2A30                        u1961 13F8                        u1881 12DC  
                      u2921 2CF4                        u3490 2482                        u2690 2630  
                      u1970 141A                        u1890 12F2                        u2770 2574  
                      u2850 2764                        u2930 217E                        u3491 247E  
                      u1795 2F82                        u3627 3006                        u2691 262C  
                      u1971 1416                        u1891 12EE                        u2771 2570  
                      u2851 2760                        u1796 2F84                        u1980 143A  
                      u2780 2588                        u2860 278C                        u2940 21AC  
                      u3637 2F86                        u1981 1436                        u2781 2584  
                      u2765 253C                        u2861 2788                        u2845 273C  
                      u2941 21A8                        u1990 1448                        u2790 25B0  
                      u2870 27B6                        u2950 21CE                        u3647 2FA0  
                      u1991 1444                        u2791 25AC                        u2871 27B2  
                      u2951 21CA                        u2935 2174                        u3657 2BE0  
                      u3577 2AC4                        u2890 27F0                        u2970 223A  
                      u3587 2C72                        u2891 27EA                        u2971 2236  
                      u2980 225E                        u3597 2C88                        u2885 27C8  
                      u2965 21E2                        u2990 227A                        u2966 21EC  
                      u2991 2276                        u2967 21FC                        u2985 2254  
              ?_escreve_lcd 0001      envia_byte_lcd@endereco 0004                        _dbuf 006D  
                      _labs 2CDA                        _main 2A3E                        _prec 006A  
                      pad@i 001E                        pad@p 001B                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf2 0FDF                        fsr1l 0FE1  
                      pad@w 0020                        fsr2l 0FD9               ___fpclassifyf 2706  
                      prodh 0FF4                        prodl 0FF3                        start 0000  
           ___fldiv@new_exp 002B     __end_of_caracter_inicio 2F00                ___param_bank 0000  
                     ??_pad 001D               ___fltol@sign1 0009                       ?_labs 0001  
           __end_of___fladd 170C                       ?_main 0001             __end_of___fldiv 1ED0  
           __end_of___flneg 2F78                       _ADRES 0FC3             __end_of___flmul 1B36  
           __end_of___flsub 2E7A             __end_of___fltol 2602                vfpfcnvrt@fmt 0052  
                     _PORTA 0F80                       _PORTD 0F83                       _TRISA 0F92  
                     _TRISD 0F95                       _flags 006C         read_prec_or_width@c 000D  
       read_prec_or_width@n 000E                       _fputc 2804                       _fputs 2E7A  
                     labs@a 0001                       pad@fp 0017                       _width 0068  
                     _putch 3034                       tablat 0FF5                       status 0FD8  
            ?___fpclassifyf 0001             __initialization 3010                __end_of_labs 2D40  
              __end_of_main 2AD6                      ??_labs 0005                      ??_main 005F  
             __activetblptr 0002            __end_of_Valor_AD 2D94  __end_of_read_prec_or_width 2994  
                    _ADCON0 0FC2                      _ADCON1 0FC1                      _ADCON2 0FC0  
                    ?_fputc 0007                      ?_fputs 0010                      ?_putch 0001  
                    _OSCCON 0FD3            __end_of___xxtofl 24FC            _envia_nibble_lcd 2B6A  
                    _Tensao 2AD6                vfprintf@cfmt 00EF            ?_caracter_inicio 0005  
                    ___flge 2602                      ___fleq 2994                   ??___fladd 0009  
                    ___wmul 2FD0                   ??___fldiv 0022                   ??___flneg 0005  
                 ??___flmul 0009                   ??___flsub 0022                   ??___fltol 0005  
                    _efgtoa 082E                      _floorf 2136                      _memcpy 2DE4  
      read_prec_or_width@ap 0009                      clear_0 3016                      isa$std 0001  
                    _printf 2FA8                      pad@buf 0019                      _strcpy 2F00  
                    fputc@c 0007                      fputs@c 0014                      fputs@i 0015  
                    fputs@s 0010             ___fpclassifyf@e 0009             ___fpclassifyf@u 000B  
           ___fpclassifyf@x 0001                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8            __end_of_vfprintf 2DE4  
                ___flge@ff1 001A                  ___flge@ff2 001E             ??___fpclassifyf 0005  
              ___xxtofl@arg 0010                ___xxtofl@exp 000F                ___xxtofl@val 0006  
                ___fleq@ff1 0001                  ___fleq@ff2 0005                  __accesstop 0060  
   __end_of__initialization 301C          envia_byte_lcd@dado 0003                  ___flneg@f1 0001  
             ___rparam_used 0001                  ___fltol@f1 0001                escreve_lcd@c 0005  
            __pcstackCOMRAM 0001               __end_of_fputc 28CE               __end_of_fputs 2EBE  
             __end_of_putch 303E              _envia_byte_lcd 2F78                     ??_fputc 000B  
                   ??_fputs 0014                     ??_putch 0006                  __pbssBANK0 0060  
                _efgtoa$774 00C3                   ?_Valor_AD 0001                     ?_Tensao 0033  
                   ?___flge 001A                     ?___fleq 0001                     ?___wmul 0001  
                   ?_efgtoa 0047                     ?_floorf 0033                     ?_memcpy 0001  
                   ?_printf 00F1                     ?_strcpy 0001      __end_of_envia_byte_lcd 2FA8  
                 ?___xxtofl 0006              _inicializa_lcd 2C64                 Tensao@porta 0037  
                   __Hparam 0000        caracter_inicio@linha 0006                     __Lparam 0000  
                   Tensao@V 0038                  ??_Valor_AD 0003                     ___fladd 124C  
                   ___fldiv 1B36                     ___flneg 2F40                     ___flmul 170C  
                   ___flsub 2E34                     ___fltol 24FC                   ?_vfprintf 00E9  
              __psmallconst 0800                     __pcinit 3010                     __ramtop 0800  
             Valor_AD@porta 0005                     __ptext0 2A3E                     __ptext1 2FA8  
                   __ptext2 2D94                     __ptext3 1ED0                     __ptext4 28CE  
                   __ptext5 2FD0                     __ptext6 082E                     __ptext7 2F00  
                   __ptext8 2BEA                     __ptext9 2E7A             ?_envia_byte_lcd 0003  
     read_prec_or_width@fmt 0007                  ??___xxtofl 000A           __end_of_limpa_lcd 3010  
                   efgtoa@c 004D                     efgtoa@d 00C8                     efgtoa@e 00CC  
                   efgtoa@f 0049                     efgtoa@g 00E1                     efgtoa@h 00D6  
                   efgtoa@i 00D4                     efgtoa@l 00DA                     efgtoa@m 00CA  
                   efgtoa@n 00DF                     efgtoa@p 00BF                     efgtoa@t 00C1  
                   efgtoa@u 00E5                     efgtoa@w 00CE    __end_of_envia_nibble_lcd 2BEA  
    __end_of_inicializa_lcd 2CDA        end_of_initialization 301C                     floorf@e 0041  
                   floorf@m 003D                     floorf@u 0043                     floorf@x 0033  
                   memcpy@d 0007                     memcpy@n 0005                     memcpy@s 0009  
                   fputc@fp 0009               __Lmediumconst 0000                     fputs@fp 0012  
        _read_prec_or_width 28CE           __end_of_vfpfcnvrt 2136                  efgtoa@mode 00C6  
                efgtoa@sign 00DE                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 0058                  ??_vfprintf 005F                     strcpy@d 0007  
                   strcpy@s 0005                   _PORTDbits 0F83                 ___fladd@grs 0010  
             ___xxtofl@sign 000E        ??_read_prec_or_width 000B                 ___fldiv@grs 002D  
               ___fldiv@rem 0026             ?_inicializa_lcd 0001                 ___flmul@grs 000E  
            __end_of_Tensao 2B6A              __end_of___flge 2706              __end_of___fleq 2A3E  
               vfpfcnvrt@ap 0054                 vfpfcnvrt@cp 005D                 vfpfcnvrt@fp 0050  
            __end_of___wmul 2FF6              __end_of_efgtoa 124C              __end_of_floorf 2348  
            __end_of_memcpy 2E34                  floorf@F526 0060              __end_of_printf 2FD0  
            __end_of_strcpy 2F40         start_initialization 3010                 __end_of_pad 2C64  
             ??_escreve_lcd 0005       __end_of___fpclassifyf 2804                   Valor_AD@C 0003  
    caracter_inicio@posicao 0007                    ??_Tensao 0037                 vfprintf@fmt 00EB  
                  ??___flge 0022                    ??___fleq 0009                    ??___wmul 0005  
                  ??_efgtoa 004E                    ??_floorf 0037                    ??_memcpy 0007  
                  ??_printf 005F                    ??_strcpy 0005                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 001E                   ___fldiv@b 001A  
                 ___flmul@a 0005                   ___flmul@b 0001                   ___flsub@a 001E  
                 ___flsub@b 001A               __pcstackBANK0 00BD         __end_of_escreve_lcd 3034  
                  ?___fladd 0001                    ?___fldiv 001A                    ?___flneg 0001  
                  ?___flmul 0001                    ?___flsub 001A                    ?___fltol 0001  
          ??_envia_byte_lcd 0004                 __smallconst 0800           ?_envia_nibble_lcd 0001  
         ??_caracter_inicio 0006                   _limpa_lcd 2FF6          ??_envia_nibble_lcd 0001  
            ___wmul@product 0005                   _vfpfcnvrt 1ED0                  _ADCON0bits 0FC2  
         ___wmul@multiplier 0001            ??_inicializa_lcd 0006                  vfpfcnvrt@c 005C  
                ?_limpa_lcd 0001                 _escreve_lcd 3026       caracter_inicio@coluna 0005  
                  __Hrparam 0000                    _Valor_AD 2D40                   memcpy@tmp 000B  
                vfprintf@ap 00ED                    __Lrparam 0000                  vfprintf@fp 00E9  
                ?_vfpfcnvrt 0050          ___fpclassifyf@F465 0064                    ___xxtofl 2348  
                  __ptext10 2804                    __ptext11 3034                    __ptext20 2F40  
                  __ptext12 3026                    __ptext21 2602                    __ptext13 2DE4  
                  __ptext30 170C                    __ptext22 2994                    __ptext14 2CDA  
                  __ptext31 1B36                    __ptext23 2C64                    __ptext15 2136  
                  __ptext32 2D40                    __ptext24 2FF6                    __ptext16 2706  
                  __ptext25 2EBE                    __ptext17 24FC                    __ptext26 2F78  
                  __ptext18 2E34                    __ptext27 2B6A                    __ptext19 124C  
                  __ptext28 2AD6                    __ptext29 2348                  strcpy@dest 0001  
                  efgtoa@fp 0047                    efgtoa@ne 00BD                    efgtoa@pp 00C5  
                  efgtoa@ou 00D0                    isa$xinst 0000                    _vfprintf 2D94  
                 printf@fmt 00F1                   putch@data 0006                    memcpy@d1 0001  
                  memcpy@s1 0003                 ??_limpa_lcd 0005                   strcpy@src 0003  
               efgtoa@nmode 00C7                    printf@ap 00F7                 ??_vfpfcnvrt 0056  
           _caracter_inicio 2EBE        envia_nibble_lcd@dado 0002               ___fladd@signs 000D  
              ___fladd@aexp 000E                ___fladd@bexp 000F  
